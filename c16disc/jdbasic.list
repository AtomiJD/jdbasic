
; 64tass Turbo Assembler Macro V1.59.3120 listing file
; 64tass --ascii --case-sensitive --long-branch -Wall --dump-labels --vice-labels --labels=D:\usr\emu\c16\prog8\jdbasic\c16disc\jdbasic.vice-mon-list --no-monitor -Wno-shadow --list=D:\usr\emu\c16\prog8\jdbasic\c16disc\jdbasic.list --cbm-prg --output D:\usr\emu\c16\prog8\jdbasic\c16disc\jdbasic.prg D:\usr\emu\c16\prog8\jdbasic\c16disc\jdbasic.asm
; Thu Jul 11 07:46:34 2024

;Offset	;Hex		;Source

;******  Processing input file: D:\usr\emu\c16\prog8\jdbasic\c16disc\jdbasic.asm

=122			P8ZP_SCRATCH_B1 = 122
=123			P8ZP_SCRATCH_REG = 123
=124			P8ZP_SCRATCH_W1 = 124    ; word
=126			P8ZP_SCRATCH_W2 = 126    ; word
>0801	15 08 e8 07		.word  (+), 2024
>0805	9e 20 32 30		.null  $9e, format(' %d ', prog8_entrypoint), $3a, $8f, ' prog8'
>0809	37 31 20 3a 8f 20 50 52 4f 47 38 00
>0815	00 00		+	.word  0
.0817			prog8_entrypoint
.0817	20 ef 22		jsr  sys.init_system_phase2
.081a	a9 23			lda  #>sys.reset_system
.081c	48			pha
.081d	a9 34			lda  #<sys.reset_system
.081f	48			pha
.0820	20 31 09		jsr  p8b_main.p8s_start
.0823	4c 02 23		jmp  sys.cleanup_at_exit
.0826			p8b_main
=34			p8v_pcode 	= 34 	; zp UWORD
=$9eff				p8c_mend = $9eff
>5c5a			p8v_bgcolor	.byte  ?
>5c5b			p8v_fgcolor	.byte  ?
>5c5c			p8v_fstack	.word  ?
>5c5e			p8v_fstack1	.word  ?
>5c60			p8v_graphmode	.byte  ?
>5c61			p8v_linenr	.word  ?
>5c63			p8v_pend	.word  ?
>5c65			p8v_prgptr	.word  ?
>5c67			p8v_trace	.byte  ?
.0826			p8v_buffer
>0826	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>082a	00 00 00 00 00 00 00 00 00 00 00 00
>0836	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>083a	00 00 00 00 00 00 00 00 00 00 00 00
>0846	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>084a	00 00 00 00 00 00 00 00 00 00 00 00
>0856	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>085a	00 00 00 00 00 00 00 00 00 00 00 00
>0866	00			.byte  $00
.0867			p8v_filename
>0867	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>086b	00 00 00 00 00 00 00 00 00 00 00 00
>0877	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>087b	00 00 00 00 00 00 00 00 00 00 00 00
>0887	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00
>088b	00 00 00 00 00
.0890			p8v_lineinput
>0890	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>0894	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>08a0	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>08a4	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>08b0	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>08b4	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>08c0	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>08c4	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>08d0	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>08d4	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>08e0	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>08e4	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>08f0	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>08f4	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>0900	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>0904	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>0910	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>0914	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>0920	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>0924	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>0930	00			.byte  $00
.0931			p8s_start
.0931	d8			cld
.0932	ba			tsx
.0933	8e f0 5b		stx  prog8_lib.orig_stackpointer    ; required for sys.exit()
.0936	a9 5a			lda  #<prog8_bss_section_start
.0938	a0 5c			ldy  #>prog8_bss_section_start
.093a	85 7c			sta  P8ZP_SCRATCH_W1
.093c	84 7d			sty  P8ZP_SCRATCH_W1+1
.093e	a2 5f			ldx  #<prog8_bss_section_size
.0940	a0 0f			ldy  #>prog8_bss_section_size
.0942	a9 00			lda  #0
.0944	20 f1 5b		jsr  prog8_lib.memset
.0947	20 a1 1e		jsr  p8b_main.prog8_init_vars
.094a	20 67 28		jsr  diskio.prog8_init_vars
.094d	20 cb 31		jsr  p8b_graphics.prog8_init_vars
.0950	20 62 44		jsr  p8b_runlang.prog8_init_vars
.0953	20 a3 44		jsr  p8b_error.prog8_init_vars
.0956	20 0c 48		jsr  p8b_jdstr.prog8_init_vars
.0959	20 ad 49		jsr  p8b_jdheap.prog8_init_vars
.095c	20 58 4b		jsr  p8b_jdvars.prog8_init_vars
.095f	20 21 4d		jsr  p8b_jdstrvars.prog8_init_vars
.0962	20 ef 50		jsr  p8b_jdarrvars.prog8_init_vars
.0965	20 28 54		jsr  p8b_jdlocal.prog8_init_vars
.0968	20 8e 56		jsr  p8b_labels.prog8_init_vars
.096b	20 11 59		jsr  p8b_jdfunc.prog8_init_vars
.096e	20 94 59		jsr  p8b_ifstack.prog8_init_vars
.0971	20 cb 59		jsr  p8b_funcstack.prog8_init_vars
.0974	20 7f 5a		jsr  p8b_forstack.prog8_init_vars
.0977	20 aa 5a		jsr  p8b_varstack.prog8_init_vars
.097a	20 d1 5a		jsr  p8b_callstack_b.prog8_init_vars
.097d	20 08 5b		jsr  p8b_callstack_w.prog8_init_vars
.0980			+
.0980	b8			clv
.0981	18			clc
.0982	9c 68 5c		stz  p8v_e
.0985	20 7b 0a		jsr  p8b_main.p8s_init_screen
.0988	20 f6 09		jsr  p8b_main.p8s_init_system
.098b	20 ea 09		jsr  p8b_main.p8s_init_basic
.098e			p8l_label_1_repeat
.098e	20 69 44		jsr  p8b_error.p8s_clear
.0991	a9 90			lda  #<p8b_main.p8v_lineinput
.0993	a0 08			ldy  #>p8b_main.p8v_lineinput
.0995	85 02			sta  cx16.r0
.0997	84 03			sty  cx16.r0+1
.0999	a9 a0			lda  #<$a0
.099b	85 04			sta  cx16.r1
.099d	a9 00			lda  #>$a0
.099f	85 05			sta  cx16.r1+1
.09a1	a9 00			lda  #0
.09a3	20 9c 23		jsr  sys.memset
.09a6	a0 08			ldy  #>p8b_main.p8v_lineinput
.09a8	a9 90			lda  #<p8b_main.p8v_lineinput
.09aa	20 80 24		jsr  txt.input_chars
.09ad	a9 0d			lda  #13
.09af	20 d2 ff		jsr  txt.chrout
.09b2	a0 08			ldy  #>p8b_main.p8v_lineinput
.09b4	a9 90			lda  #<p8b_main.p8v_lineinput
.09b6	20 68 29		jsr  string.strip
.09b9	a9 90			lda  #<p8b_main.p8v_lineinput
.09bb	a0 08			ldy  #>p8b_main.p8v_lineinput
.09bd	8d 7e 5c		sta  p8b_main.p8s_tokenize.p8v_rprgptr
.09c0	8c 7f 5c		sty  p8b_main.p8s_tokenize.p8v_rprgptr+1
.09c3	ad 63 5c		lda  p8b_main.p8v_pend
.09c6	ac 64 5c		ldy  p8b_main.p8v_pend+1
.09c9	8d 7c 5c		sta  p8b_main.p8s_tokenize.p8v_pcodebase
.09cc	8c 7d 5c		sty  p8b_main.p8s_tokenize.p8v_pcodebase+1
.09cf	20 3d 10		jsr  p8b_main.p8s_tokenize
.09d2	8d 68 5c		sta  p8v_e
.09d5	ad 60 5d		lda  p8b_error.p8v_number
.09d8	f0 05			beq  label_asm_2_else
.09da	20 7c 44		jsr  p8b_error.p8s_print
.09dd	80 08			bra  label_asm_1_afterif
.09df			label_asm_2_else
.09df	ad 68 5c		lda  p8v_e
.09e2	d0 03			bne  label_asm_3_afterif
.09e4	20 71 1a		jsr  p8b_main.p8s_runl
.09e7			label_asm_3_afterif
.09e7			label_asm_1_afterif
.09e7	80 a5			bra  p8l_label_1_repeat
.09e9	60			rts
>5c68			p8v_e	.byte  ?
.09ea			p8s_init_basic
.09ea	a0 20			ldy  #>prog8_interned_strings.string_1
.09ec	a9 01			lda  #<prog8_interned_strings.string_1
.09ee	20 32 24		jsr  txt.print
.09f1	a9 0d			lda  #13
.09f3	4c d2 ff		jmp  txt.chrout
.09f6			p8s_init_system
.09f6	9c 69 5c		stz  p8v_mem
.09f9	9c 6a 5c		stz  p8v_mem+1
.09fc	a9 b9		            lda  #<prog8_program_end
.09fe	a0 6b		            ldy  #>prog8_program_end
.0a00	8d 63 5c		sta  p8b_main.p8v_pend
.0a03	8c 64 5c		sty  p8b_main.p8v_pend+1
.0a06	a0 20			ldy  #>prog8_interned_strings.string_2
.0a08	a9 2f			lda  #<prog8_interned_strings.string_2
.0a0a	20 32 24		jsr  txt.print
.0a0d	ac 64 5c		ldy  p8b_main.p8v_pend+1
.0a10	ad 63 5c		lda  p8b_main.p8v_pend
.0a13	38			sec
.0a14	20 56 24		jsr  txt.print_uwhex
.0a17	a9 0d			lda  #13
.0a19	20 d2 ff		jsr  txt.chrout
.0a1c	a0 20			ldy  #>prog8_interned_strings.string_3
.0a1e	a9 6b			lda  #<prog8_interned_strings.string_3
.0a20	20 32 24		jsr  txt.print
.0a23	ac 64 5c		ldy  p8b_main.p8v_pend+1
.0a26	ad 63 5c		lda  p8b_main.p8v_pend
.0a29	18			clc
.0a2a	69 a0			adc  #<$a0
.0a2c	aa			tax
.0a2d	98			tya
.0a2e	69 00			adc  #>$a0
.0a30	a8			tay
.0a31	8a			txa
.0a32	38			sec
.0a33	20 56 24		jsr  txt.print_uwhex
.0a36	a9 0d			lda  #13
.0a38	20 d2 ff		jsr  txt.chrout
.0a3b	ad 63 5c		lda  p8b_main.p8v_pend
.0a3e	ac 64 5c		ldy  p8b_main.p8v_pend+1
.0a41	85 22			sta  p8b_main.p8v_pcode
.0a43	84 23			sty  p8b_main.p8v_pcode+1
.0a45	ad 63 5c		lda  p8b_main.p8v_pend
.0a48	85 7c			sta  P8ZP_SCRATCH_W1
.0a4a	ad 64 5c		lda  p8b_main.p8v_pend+1
.0a4d	85 7d			sta  P8ZP_SCRATCH_W1+1
.0a4f	a0 9e			ldy  #>-$6101
.0a51	a9 ff			lda  #<-$6101
.0a53	38			sec
.0a54	e5 7c			sbc  P8ZP_SCRATCH_W1
.0a56	aa			tax
.0a57	98			tya
.0a58	e5 7d			sbc  P8ZP_SCRATCH_W1+1
.0a5a	a8			tay
.0a5b	8a			txa
.0a5c	8d 69 5c		sta  p8v_mem
.0a5f	8c 6a 5c		sty  p8v_mem+1
.0a62	a0 20			ldy  #>prog8_interned_strings.string_4
.0a64	a9 aa			lda  #<prog8_interned_strings.string_4
.0a66	20 32 24		jsr  txt.print
.0a69	ac 6a 5c		ldy  p8v_mem+1
.0a6c	ad 69 5c		lda  p8v_mem
.0a6f	20 60 24		jsr  txt.print_uw
.0a72	a9 0d			lda  #13
.0a74	20 d2 ff		jsr  txt.chrout
.0a77	9c 67 5c		stz  p8b_main.p8v_trace
.0a7a	60			rts
>5c69			p8v_mem	.word  ?
.0a7b			p8s_init_screen
.0a7b	a9 05			lda  #5
.0a7d	a0 00			ldy  #0
.0a7f	20 d4 23		jsr  txt.color2
.0a82	a9 0f			lda  #15
.0a84	20 d2 ff		jsr  cbm.CHROUT
.0a87	a9 93			lda  #$93
.0a89	20 d2 ff		jsr  txt.chrout
.0a8c	a0 20			ldy  #>prog8_interned_strings.string_5
.0a8e	a9 ee			lda  #<prog8_interned_strings.string_5
.0a90	20 32 24		jsr  txt.print
.0a93	a9 0d			lda  #13
.0a95	20 d2 ff		jsr  txt.chrout
.0a98	a0 21			ldy  #>prog8_interned_strings.string_6
.0a9a	a9 3b			lda  #<prog8_interned_strings.string_6
.0a9c	20 32 24		jsr  txt.print
.0a9f	a9 0d			lda  #13
.0aa1	4c d2 ff		jmp  txt.chrout
.0aa4			p8s_parse
.0aa4	9c 6e 5c		stz  p8v_lp
.0aa7	9c 6f 5c		stz  p8v_lp+1
.0aaa	9c 70 5c		stz  p8v_p
.0aad	9c 6d 5c		stz  p8v_flag
.0ab0	9c 6b 5c		stz  p8v_basic_cmd
.0ab3	9c 6c 5c		stz  p8v_basic_cmd+1
.0ab6	9c 71 5c		stz  p8v_prevptr
.0ab9	9c 72 5c		stz  p8v_prevptr+1
.0abc	a9 74			lda  #<prog8_interned_strings.string_7
.0abe	a0 21			ldy  #>prog8_interned_strings.string_7
.0ac0	85 02			sta  cx16.r0
.0ac2	84 03			sty  cx16.r0+1
.0ac4	a0 08			ldy  #>p8b_main.p8v_buffer
.0ac6	a9 26			lda  #<p8b_main.p8v_buffer
.0ac8	20 63 23		jsr  sys.internal_stringcopy
.0acb			p8l_label_9_repeat
.0acb	ad 65 5c		lda  p8b_main.p8v_prgptr
.0ace	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0ad1	85 7c			sta  P8ZP_SCRATCH_W1
.0ad3	84 7d			sty  P8ZP_SCRATCH_W1+1
.0ad5	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0ad7	d0 03			bne  label_asm_4_afterif
.0ad9	a9 7f			lda  #$7f
.0adb	60			rts
.0adc			label_asm_4_afterif
.0adc	ad 65 5c		lda  p8b_main.p8v_prgptr
.0adf	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0ae2	85 7c			sta  P8ZP_SCRATCH_W1
.0ae4	84 7d			sty  P8ZP_SCRATCH_W1+1
.0ae6	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0ae8	48			pha
.0ae9	a9 32			lda  #<p8v_auto_heap_value_1
.0aeb	a0 10			ldy  #>p8v_auto_heap_value_1
.0aed	85 7c			sta  P8ZP_SCRATCH_W1
.0aef	84 7d			sty  P8ZP_SCRATCH_W1+1
.0af1	68			pla
.0af2	a0 02			ldy  #2
.0af4	20 4a 5c		jsr  prog8_lib.containment_bytearray
.0af7	c9 00			cmp  #0
.0af9	f0 03			beq  label_asm_5_afterif
.0afb	a9 19			lda  #$19
.0afd	60			rts
.0afe			label_asm_5_afterif
.0afe	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b01	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b04	85 7c			sta  P8ZP_SCRATCH_W1
.0b06	84 7d			sty  P8ZP_SCRATCH_W1+1
.0b08	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0b0a	20 3a 29		jsr  string.isspace
.0b0d	90 0b			bcc  p8l_label_143_celse
.0b0f	ee 65 5c		inc  p8b_main.p8v_prgptr
.0b12	d0 03			bne  +
.0b14	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0b17			+
.0b17	4c 2e 10		bra  p8l_label_2_cont
.0b1a			p8l_label_143_celse
.0b1a	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b1d	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b20	85 7e			sta  P8ZP_SCRATCH_W2
.0b22	84 7f			sty  P8ZP_SCRATCH_W2+1
.0b24	a0 01			ldy  #1
.0b26	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.0b28	8d 73 5c		sta  p8v_prog8_subexprvar_1
.0b2b	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b2e	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b31	85 7e			sta  P8ZP_SCRATCH_W2
.0b33	84 7f			sty  P8ZP_SCRATCH_W2+1
.0b35	a0 01			ldy  #1
.0b37	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.0b39	8d 74 5c		sta  p8v_prog8_subexprvar_2
.0b3c	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b3f	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b42	85 7e			sta  P8ZP_SCRATCH_W2
.0b44	84 7f			sty  P8ZP_SCRATCH_W2+1
.0b46	a0 01			ldy  #1
.0b48	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.0b4a	8d 75 5c		sta  p8v_prog8_subexprvar_3
.0b4d	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b50	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b53	85 7c			sta  P8ZP_SCRATCH_W1
.0b55	84 7d			sty  P8ZP_SCRATCH_W1+1
.0b57	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0b59	20 01 29		jsr  string.isdigit
.0b5c	a9 00			lda  #0
.0b5e	2a			rol  a
.0b5f	f0 03			bne  label_asm_6_shortcut
.0b61	4c 02 0c
.0b64	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b67	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b6a	85 7c			sta  P8ZP_SCRATCH_W1
.0b6c	84 7d			sty  P8ZP_SCRATCH_W1+1
.0b6e	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0b70	c9 24			cmp  #36
.0b72	d0 04			bne  label_asm_10_else
.0b74	a9 01		  lda  #1
.0b76	80 02			bra  label_asm_9_afterif
.0b78			label_asm_10_else
.0b78	a9 00		  lda  #0
.0b7a			label_asm_9_afterif
.0b7a	d0 16			bne  label_asm_8_shortcut
.0b7c	ad 65 5c		lda  p8b_main.p8v_prgptr
.0b7f	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0b82	85 7c			sta  P8ZP_SCRATCH_W1
.0b84	84 7d			sty  P8ZP_SCRATCH_W1+1
.0b86	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0b88	c9 25			cmp  #37
.0b8a	d0 04			bne  label_asm_12_else
.0b8c	a9 01		  lda  #1
.0b8e	80 02			bra  label_asm_11_afterif
.0b90			label_asm_12_else
.0b90	a9 00		  lda  #0
.0b92			label_asm_11_afterif
.0b92			label_asm_8_shortcut
.0b92	f0 6e			beq  label_asm_7_shortcut
.0b94	ad 73 5c		lda  p8v_prog8_subexprvar_1
.0b97	20 01 29		jsr  string.isdigit
.0b9a	a9 00			lda  #0
.0b9c	2a			rol  a
.0b9d	d0 0d			bne  label_asm_18_shortcut
.0b9f	ad 73 5c		lda  p8v_prog8_subexprvar_1
.0ba2	c9 41			cmp  #65
.0ba4	d0 04			bne  label_asm_20_else
.0ba6	a9 01		  lda  #1
.0ba8	80 02			bra  label_asm_19_afterif
.0baa			label_asm_20_else
.0baa	a9 00		  lda  #0
.0bac			label_asm_19_afterif
.0bac			label_asm_18_shortcut
.0bac	d0 0d			bne  label_asm_17_shortcut
.0bae	ad 74 5c		lda  p8v_prog8_subexprvar_2
.0bb1	c9 42			cmp  #66
.0bb3	d0 04			bne  label_asm_22_else
.0bb5	a9 01		  lda  #1
.0bb7	80 02			bra  label_asm_21_afterif
.0bb9			label_asm_22_else
.0bb9	a9 00		  lda  #0
.0bbb			label_asm_21_afterif
.0bbb			label_asm_17_shortcut
.0bbb	d0 0d			bne  label_asm_16_shortcut
.0bbd	ad 74 5c		lda  p8v_prog8_subexprvar_2
.0bc0	c9 43			cmp  #67
.0bc2	d0 04			bne  label_asm_24_else
.0bc4	a9 01		  lda  #1
.0bc6	80 02			bra  label_asm_23_afterif
.0bc8			label_asm_24_else
.0bc8	a9 00		  lda  #0
.0bca			label_asm_23_afterif
.0bca			label_asm_16_shortcut
.0bca	d0 0d			bne  label_asm_15_shortcut
.0bcc	ad 75 5c		lda  p8v_prog8_subexprvar_3
.0bcf	c9 44			cmp  #68
.0bd1	d0 04			bne  label_asm_26_else
.0bd3	a9 01		  lda  #1
.0bd5	80 02			bra  label_asm_25_afterif
.0bd7			label_asm_26_else
.0bd7	a9 00		  lda  #0
.0bd9			label_asm_25_afterif
.0bd9			label_asm_15_shortcut
.0bd9	d0 0d			bne  label_asm_14_shortcut
.0bdb	ad 75 5c		lda  p8v_prog8_subexprvar_3
.0bde	c9 45			cmp  #69
.0be0	d0 04			bne  label_asm_28_else
.0be2	a9 01		  lda  #1
.0be4	80 02			bra  label_asm_27_afterif
.0be6			label_asm_28_else
.0be6	a9 00		  lda  #0
.0be8			label_asm_27_afterif
.0be8			label_asm_14_shortcut
.0be8	d0 18			bne  label_asm_13_shortcut
.0bea	ad 65 5c		lda  p8b_main.p8v_prgptr
.0bed	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0bf0	85 7e			sta  P8ZP_SCRATCH_W2
.0bf2	84 7f			sty  P8ZP_SCRATCH_W2+1
.0bf4	a0 01			ldy  #1
.0bf6	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.0bf8	c9 46			cmp  #70
.0bfa	d0 04			bne  label_asm_30_else
.0bfc	a9 01		  lda  #1
.0bfe	80 02			bra  label_asm_29_afterif
.0c00			label_asm_30_else
.0c00	a9 00		  lda  #0
.0c02			label_asm_29_afterif
.0c02			label_asm_13_shortcut
.0c02			label_asm_7_shortcut
.0c02			label_asm_6_shortcut
.0c02	d0 03			beq  label_asm_31_afterif
.0c04	4c ae 0c
.0c07	a9 26			lda  #<p8b_main.p8v_buffer
.0c09	a0 08			ldy  #>p8b_main.p8v_buffer
.0c0b	8d 6e 5c		sta  p8v_lp
.0c0e	8c 6f 5c		sty  p8v_lp+1
.0c11			p8l_label_3_untilloop
.0c11	ad 65 5c		lda  p8b_main.p8v_prgptr
.0c14	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0c17	85 7c			sta  P8ZP_SCRATCH_W1
.0c19	84 7d			sty  P8ZP_SCRATCH_W1+1
.0c1b	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0c1d	ac 6e 5c		ldy  p8v_lp
.0c20	84 7e			sty  P8ZP_SCRATCH_W2
.0c22	ac 6f 5c		ldy  p8v_lp+1
.0c25	84 7f			sty  P8ZP_SCRATCH_W2+1
.0c27	92 7e			sta  (P8ZP_SCRATCH_W2)
.0c29	ee 6e 5c		inc  p8v_lp
.0c2c	d0 03			bne  +
.0c2e	ee 6f 5c		inc  p8v_lp+1
.0c31			+
.0c31	ee 65 5c		inc  p8b_main.p8v_prgptr
.0c34	d0 03			bne  +
.0c36	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0c39			+
.0c39	ad 65 5c		lda  p8b_main.p8v_prgptr
.0c3c	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0c3f	85 7c			sta  P8ZP_SCRATCH_W1
.0c41	84 7d			sty  P8ZP_SCRATCH_W1+1
.0c43	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0c45	48			pha
.0c46	a9 ab			lda  #<p8b_consts.p8v_DELIMITERCHAR
.0c48	a0 1e			ldy  #>p8b_consts.p8v_DELIMITERCHAR
.0c4a	85 7c			sta  P8ZP_SCRATCH_W1
.0c4c	84 7d			sty  P8ZP_SCRATCH_W1+1
.0c4e	68			pla
.0c4f	a0 10			ldy  #16
.0c51	20 4a 5c		jsr  prog8_lib.containment_bytearray
.0c54	d0 16			bne  label_asm_34_shortcut
.0c56	ad 65 5c		lda  p8b_main.p8v_prgptr
.0c59	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0c5c	85 7c			sta  P8ZP_SCRATCH_W1
.0c5e	84 7d			sty  P8ZP_SCRATCH_W1+1
.0c60	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0c62	c9 0d			cmp  #13
.0c64	d0 04			bne  label_asm_36_else
.0c66	a9 01		  lda  #1
.0c68	80 02			bra  label_asm_35_afterif
.0c6a			label_asm_36_else
.0c6a	a9 00		  lda  #0
.0c6c			label_asm_35_afterif
.0c6c			label_asm_34_shortcut
.0c6c	d0 16			bne  label_asm_33_shortcut
.0c6e	ad 65 5c		lda  p8b_main.p8v_prgptr
.0c71	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0c74	85 7c			sta  P8ZP_SCRATCH_W1
.0c76	84 7d			sty  P8ZP_SCRATCH_W1+1
.0c78	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0c7a	c9 0a			cmp  #10
.0c7c	d0 04			bne  label_asm_38_else
.0c7e	a9 01		  lda  #1
.0c80	80 02			bra  label_asm_37_afterif
.0c82			label_asm_38_else
.0c82	a9 00		  lda  #0
.0c84			label_asm_37_afterif
.0c84			label_asm_33_shortcut
.0c84	d0 12			bne  label_asm_32_shortcut
.0c86	ad 65 5c		lda  p8b_main.p8v_prgptr
.0c89	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0c8c	85 7c			sta  P8ZP_SCRATCH_W1
.0c8e	84 7d			sty  P8ZP_SCRATCH_W1+1
.0c90	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0c92	f0 02			beq  +
.0c94	a9 01			lda  #1
.0c96	49 01		+                           eor  #1
.0c98			label_asm_32_shortcut
.0c98	d0 03			beq  p8l_label_3_untilloop
.0c9a	4c 11 0c
.0c9d	a9 00			lda  #0
.0c9f	ac 6e 5c		ldy  p8v_lp
.0ca2	84 7e			sty  P8ZP_SCRATCH_W2
.0ca4	ac 6f 5c		ldy  p8v_lp+1
.0ca7	84 7f			sty  P8ZP_SCRATCH_W2+1
.0ca9	92 7e			sta  (P8ZP_SCRATCH_W2)
.0cab	a9 2c			lda  #$2c
.0cad	60			rts
.0cae			label_asm_31_afterif
.0cae	ad 65 5c		lda  p8b_main.p8v_prgptr
.0cb1	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0cb4	85 7c			sta  P8ZP_SCRATCH_W1
.0cb6	84 7d			sty  P8ZP_SCRATCH_W1+1
.0cb8	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0cba	20 ea 1d		jsr  p8b_main.p8s_singlechar
.0cbd	8d 70 5c		sta  p8v_p
.0cc0	c9 1b			cmp  #27
.0cc2	d0 2a			bne  label_asm_39_afterif
.0cc4			p8l_label_4_untilloop
.0cc4	ee 65 5c		inc  p8b_main.p8v_prgptr
.0cc7	d0 03			bne  +
.0cc9	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0ccc			+
.0ccc	ad 65 5c		lda  p8b_main.p8v_prgptr
.0ccf	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0cd2	85 7c			sta  P8ZP_SCRATCH_W1
.0cd4	84 7d			sty  P8ZP_SCRATCH_W1+1
.0cd6	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0cd8	48			pha
.0cd9	a9 34			lda  #<p8v_auto_heap_value_2
.0cdb	a0 10			ldy  #>p8v_auto_heap_value_2
.0cdd	85 7c			sta  P8ZP_SCRATCH_W1
.0cdf	84 7d			sty  P8ZP_SCRATCH_W1+1
.0ce1	68			pla
.0ce2	a0 03			ldy  #3
.0ce4	20 4a 5c		jsr  prog8_lib.containment_bytearray
.0ce7	c9 00			cmp  #0
.0ce9	f0 d9			beq  p8l_label_4_untilloop
.0ceb	4c 2e 10		bra  p8l_label_5_cont
.0cee			label_asm_39_afterif
.0cee	ad 70 5c		lda  p8v_p
.0cf1	f0 0c			beq  label_asm_40_afterif
.0cf3	ee 65 5c		inc  p8b_main.p8v_prgptr
.0cf6	d0 03			bne  +
.0cf8	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0cfb			+
.0cfb	ad 70 5c		lda  p8v_p
.0cfe	60			rts
.0cff			label_asm_40_afterif
.0cff	ad 65 5c		lda  p8b_main.p8v_prgptr
.0d02	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0d05	85 7c			sta  P8ZP_SCRATCH_W1
.0d07	84 7d			sty  P8ZP_SCRATCH_W1+1
.0d09	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0d0b	c9 22			cmp  #34
.0d0d	f0 03			bne  label_asm_41_afterif
.0d0f	4c 9c 0d
.0d12	ee 65 5c		inc  p8b_main.p8v_prgptr
.0d15	d0 03			bne  +
.0d17	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0d1a			+
.0d1a	a9 26			lda  #<p8b_main.p8v_buffer
.0d1c	a0 08			ldy  #>p8b_main.p8v_buffer
.0d1e	8d 6e 5c		sta  p8v_lp
.0d21	8c 6f 5c		sty  p8v_lp+1
.0d24			p8l_label_6_untilloop
.0d24	ad 65 5c		lda  p8b_main.p8v_prgptr
.0d27	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0d2a	85 7c			sta  P8ZP_SCRATCH_W1
.0d2c	84 7d			sty  P8ZP_SCRATCH_W1+1
.0d2e	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0d30	ac 6e 5c		ldy  p8v_lp
.0d33	84 7e			sty  P8ZP_SCRATCH_W2
.0d35	ac 6f 5c		ldy  p8v_lp+1
.0d38	84 7f			sty  P8ZP_SCRATCH_W2+1
.0d3a	92 7e			sta  (P8ZP_SCRATCH_W2)
.0d3c	ee 6e 5c		inc  p8v_lp
.0d3f	d0 03			bne  +
.0d41	ee 6f 5c		inc  p8v_lp+1
.0d44			+
.0d44	ee 65 5c		inc  p8b_main.p8v_prgptr
.0d47	d0 03			bne  +
.0d49	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0d4c			+
.0d4c	ad 65 5c		lda  p8b_main.p8v_prgptr
.0d4f	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0d52	85 7c			sta  P8ZP_SCRATCH_W1
.0d54	84 7d			sty  P8ZP_SCRATCH_W1+1
.0d56	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0d58	48			pha
.0d59	a9 37			lda  #<p8v_auto_heap_value_3
.0d5b	a0 10			ldy  #>p8v_auto_heap_value_3
.0d5d	85 7c			sta  P8ZP_SCRATCH_W1
.0d5f	84 7d			sty  P8ZP_SCRATCH_W1+1
.0d61	68			pla
.0d62	a0 04			ldy  #4
.0d64	20 4a 5c		jsr  prog8_lib.containment_bytearray
.0d67	c9 00			cmp  #0
.0d69	f0 b9			beq  p8l_label_6_untilloop
.0d6b	ad 65 5c		lda  p8b_main.p8v_prgptr
.0d6e	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0d71	85 7c			sta  P8ZP_SCRATCH_W1
.0d73	84 7d			sty  P8ZP_SCRATCH_W1+1
.0d75	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0d77	c9 22			cmp  #34
.0d79	d0 19			bne  label_asm_43_else
.0d7b	a9 00			lda  #0
.0d7d	ac 6e 5c		ldy  p8v_lp
.0d80	84 7e			sty  P8ZP_SCRATCH_W2
.0d82	ac 6f 5c		ldy  p8v_lp+1
.0d85	84 7f			sty  P8ZP_SCRATCH_W2+1
.0d87	92 7e			sta  (P8ZP_SCRATCH_W2)
.0d89	ee 65 5c		inc  p8b_main.p8v_prgptr
.0d8c	d0 03			bne  +
.0d8e	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0d91			+
.0d91	a9 2d			lda  #$2d
.0d93	60			rts
.0d94			label_asm_43_else
.0d94	a9 01			lda  #1
.0d96	20 70 44		jsr  p8b_error.p8s_set
.0d99	a9 7f			lda  #$7f
.0d9b	60			rts
.0d9c			label_asm_42_afterif
.0d9c			label_asm_41_afterif
.0d9c	ad 65 5c		lda  p8b_main.p8v_prgptr
.0d9f	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0da2	85 7c			sta  P8ZP_SCRATCH_W1
.0da4	84 7d			sty  P8ZP_SCRATCH_W1+1
.0da6	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0da8	20 31 29		jsr  string.isletter
.0dab	b0 03			bcc  p8l_label_145_celse
.0dad	4c 3f 0e
.0db0	ee 65 5c		inc  p8b_main.p8v_prgptr
.0db3	d0 03			bne  +
.0db5	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0db8			+
.0db8	ad 65 5c		lda  p8b_main.p8v_prgptr
.0dbb	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0dbe	85 7c			sta  P8ZP_SCRATCH_W1
.0dc0	84 7d			sty  P8ZP_SCRATCH_W1+1
.0dc2	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0dc4	c9 21			cmp  #33
.0dc6	d0 6c			bne  label_asm_44_afterif
.0dc8	ee 65 5c		inc  p8b_main.p8v_prgptr
.0dcb	d0 03			bne  +
.0dcd	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0dd0			+
.0dd0	ad 65 5c		lda  p8b_main.p8v_prgptr
.0dd3	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0dd6	85 7c			sta  P8ZP_SCRATCH_W1
.0dd8	84 7d			sty  P8ZP_SCRATCH_W1+1
.0dda	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0ddc	48			pha
.0ddd	a9 ab			lda  #<p8b_consts.p8v_DELIMITERCHAR
.0ddf	a0 1e			ldy  #>p8b_consts.p8v_DELIMITERCHAR
.0de1	85 7c			sta  P8ZP_SCRATCH_W1
.0de3	84 7d			sty  P8ZP_SCRATCH_W1+1
.0de5	68			pla
.0de6	a0 10			ldy  #16
.0de8	20 4a 5c		jsr  prog8_lib.containment_bytearray
.0deb	8d 6d 5c		sta  p8v_flag
.0dee	ad 65 5c		lda  p8b_main.p8v_prgptr
.0df1	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0df4	85 7c			sta  P8ZP_SCRATCH_W1
.0df6	84 7d			sty  P8ZP_SCRATCH_W1+1
.0df8	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0dfa	48			pha
.0dfb	a9 3b			lda  #<p8v_auto_heap_value_4
.0dfd	a0 10			ldy  #>p8v_auto_heap_value_4
.0dff	85 7c			sta  P8ZP_SCRATCH_W1
.0e01	84 7d			sty  P8ZP_SCRATCH_W1+1
.0e03	68			pla
.0e04	a0 02			ldy  #2
.0e06	20 4a 5c		jsr  prog8_lib.containment_bytearray
.0e09	c9 00			cmp  #0
.0e0b	f0 05			beq  label_asm_45_afterif
.0e0d	a9 01			lda  #1
.0e0f	8d 6d 5c		sta  p8v_flag
.0e12			label_asm_45_afterif
.0e12	ad 65 5c		lda  p8b_main.p8v_prgptr
.0e15	d0 03			bne  +
.0e17	ce 66 5c		dec  p8b_main.p8v_prgptr+1
.0e1a	ce 65 5c	+                           dec  p8b_main.p8v_prgptr
.0e1d	ad 6d 5c		lda  p8v_flag
.0e20	f0 12			beq  label_asm_46_afterif
.0e22	a9 74			lda  #<prog8_interned_strings.string_7
.0e24	a0 21			ldy  #>prog8_interned_strings.string_7
.0e26	85 02			sta  cx16.r0
.0e28	84 03			sty  cx16.r0+1
.0e2a	a0 08			ldy  #>p8b_main.p8v_buffer
.0e2c	a9 26			lda  #<p8b_main.p8v_buffer
.0e2e	20 63 23		jsr  sys.internal_stringcopy
.0e31	a9 2e			lda  #$2e
.0e33	60			rts
.0e34			label_asm_46_afterif
.0e34			label_asm_44_afterif
.0e34	ad 65 5c		lda  p8b_main.p8v_prgptr
.0e37	d0 03			bne  +
.0e39	ce 66 5c		dec  p8b_main.p8v_prgptr+1
.0e3c	ce 65 5c	+                           dec  p8b_main.p8v_prgptr
.0e3f			p8l_label_145_celse
.0e3f	ad 65 5c		lda  p8b_main.p8v_prgptr
.0e42	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0e45	85 7c			sta  P8ZP_SCRATCH_W1
.0e47	84 7d			sty  P8ZP_SCRATCH_W1+1
.0e49	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0e4b	20 31 29		jsr  string.isletter
.0e4e	b0 03			bcc  p8l_label_147_celse
.0e50	4c e1 0e
.0e53	ad 65 5c		lda  p8b_main.p8v_prgptr
.0e56	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0e59	8d 71 5c		sta  p8v_prevptr
.0e5c	8c 72 5c		sty  p8v_prevptr+1
.0e5f	a9 26			lda  #<p8b_main.p8v_buffer
.0e61	a0 08			ldy  #>p8b_main.p8v_buffer
.0e63	8d 6e 5c		sta  p8v_lp
.0e66	8c 6f 5c		sty  p8v_lp+1
.0e69			p8l_label_7_untilloop
.0e69	ad 65 5c		lda  p8b_main.p8v_prgptr
.0e6c	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0e6f	85 7c			sta  P8ZP_SCRATCH_W1
.0e71	84 7d			sty  P8ZP_SCRATCH_W1+1
.0e73	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0e75	ac 6e 5c		ldy  p8v_lp
.0e78	84 7e			sty  P8ZP_SCRATCH_W2
.0e7a	ac 6f 5c		ldy  p8v_lp+1
.0e7d	84 7f			sty  P8ZP_SCRATCH_W2+1
.0e7f	92 7e			sta  (P8ZP_SCRATCH_W2)
.0e81	ee 6e 5c		inc  p8v_lp
.0e84	d0 03			bne  +
.0e86	ee 6f 5c		inc  p8v_lp+1
.0e89			+
.0e89	ee 65 5c		inc  p8b_main.p8v_prgptr
.0e8c	d0 03			bne  +
.0e8e	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0e91			+
.0e91	ad 65 5c		lda  p8b_main.p8v_prgptr
.0e94	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0e97	85 7c			sta  P8ZP_SCRATCH_W1
.0e99	84 7d			sty  P8ZP_SCRATCH_W1+1
.0e9b	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0e9d	20 31 29		jsr  string.isletter
.0ea0	b0 c7			bcs  p8l_label_7_untilloop
.0ea2	a9 00			lda  #0
.0ea4	ac 6e 5c		ldy  p8v_lp
.0ea7	84 7e			sty  P8ZP_SCRATCH_W2
.0ea9	ac 6f 5c		ldy  p8v_lp+1
.0eac	84 7f			sty  P8ZP_SCRATCH_W2+1
.0eae	92 7e			sta  (P8ZP_SCRATCH_W2)
.0eb0	a0 08			ldy  #>p8b_main.p8v_buffer
.0eb2	a9 26			lda  #<p8b_main.p8v_buffer
.0eb4	20 bc 1f		jsr  p8b_statements.p8s_get
.0eb7	8d 6b 5c		sta  p8v_basic_cmd
.0eba	8c 6c 5c		sty  p8v_basic_cmd+1
.0ebd	0d 6c 5c		ora  p8v_basic_cmd+1
.0ec0	f0 13			beq  label_asm_47_afterif
.0ec2	a9 74			lda  #<prog8_interned_strings.string_7
.0ec4	a0 21			ldy  #>prog8_interned_strings.string_7
.0ec6	85 02			sta  cx16.r0
.0ec8	84 03			sty  cx16.r0+1
.0eca	a0 08			ldy  #>p8b_main.p8v_buffer
.0ecc	a9 26			lda  #<p8b_main.p8v_buffer
.0ece	20 63 23		jsr  sys.internal_stringcopy
.0ed1	ad 6b 5c		lda  p8v_basic_cmd
.0ed4	60			rts
.0ed5			label_asm_47_afterif
.0ed5	ad 71 5c		lda  p8v_prevptr
.0ed8	ac 72 5c		ldy  p8v_prevptr+1
.0edb	8d 65 5c		sta  p8b_main.p8v_prgptr
.0ede	8c 66 5c		sty  p8b_main.p8v_prgptr+1
.0ee1			p8l_label_147_celse
.0ee1	ad 65 5c		lda  p8b_main.p8v_prgptr
.0ee4	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0ee7	85 7c			sta  P8ZP_SCRATCH_W1
.0ee9	84 7d			sty  P8ZP_SCRATCH_W1+1
.0eeb	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0eed	20 31 29		jsr  string.isletter
.0ef0	b0 03			bcc  p8l_label_149_celse
.0ef2	4c 23 10
.0ef5	a9 26			lda  #<p8b_main.p8v_buffer
.0ef7	a0 08			ldy  #>p8b_main.p8v_buffer
.0ef9	8d 6e 5c		sta  p8v_lp
.0efc	8c 6f 5c		sty  p8v_lp+1
.0eff			p8l_label_8_untilloop
.0eff	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f02	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0f05	85 7c			sta  P8ZP_SCRATCH_W1
.0f07	84 7d			sty  P8ZP_SCRATCH_W1+1
.0f09	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0f0b	ac 6e 5c		ldy  p8v_lp
.0f0e	84 7e			sty  P8ZP_SCRATCH_W2
.0f10	ac 6f 5c		ldy  p8v_lp+1
.0f13	84 7f			sty  P8ZP_SCRATCH_W2+1
.0f15	92 7e			sta  (P8ZP_SCRATCH_W2)
.0f17	ee 6e 5c		inc  p8v_lp
.0f1a	d0 03			bne  +
.0f1c	ee 6f 5c		inc  p8v_lp+1
.0f1f			+
.0f1f	ee 65 5c		inc  p8b_main.p8v_prgptr
.0f22	d0 03			bne  +
.0f24	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.0f27			+
.0f27	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f2a	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0f2d	85 7c			sta  P8ZP_SCRATCH_W1
.0f2f	84 7d			sty  P8ZP_SCRATCH_W1+1
.0f31	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0f33	20 31 29		jsr  string.isletter
.0f36	a9 00			lda  #0
.0f38	2a			rol  a
.0f39	d0 12			bne  label_asm_49_shortcut
.0f3b	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f3e	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0f41	85 7c			sta  P8ZP_SCRATCH_W1
.0f43	84 7d			sty  P8ZP_SCRATCH_W1+1
.0f45	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0f47	20 01 29		jsr  string.isdigit
.0f4a	a9 00			lda  #0
.0f4c	2a			rol  a
.0f4d			label_asm_49_shortcut
.0f4d	d0 16			bne  label_asm_48_shortcut
.0f4f	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f52	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0f55	85 7c			sta  P8ZP_SCRATCH_W1
.0f57	84 7d			sty  P8ZP_SCRATCH_W1+1
.0f59	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0f5b	c9 5f			cmp  #95
.0f5d	d0 04			bne  label_asm_51_else
.0f5f	a9 01		  lda  #1
.0f61	80 02			bra  label_asm_50_afterif
.0f63			label_asm_51_else
.0f63	a9 00		  lda  #0
.0f65			label_asm_50_afterif
.0f65			label_asm_48_shortcut
.0f65	d0 98			bne  p8l_label_8_untilloop
.0f67	a9 00			lda  #0
.0f69	ac 6e 5c		ldy  p8v_lp
.0f6c	84 7e			sty  P8ZP_SCRATCH_W2
.0f6e	ac 6f 5c		ldy  p8v_lp+1
.0f71	84 7f			sty  P8ZP_SCRATCH_W2+1
.0f73	92 7e			sta  (P8ZP_SCRATCH_W2)
.0f75	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f78	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0f7b	85 7c			sta  P8ZP_SCRATCH_W1
.0f7d	84 7d			sty  P8ZP_SCRATCH_W1+1
.0f7f	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0f81	c9 24			cmp  #36
.0f83	d0 03			bne  label_asm_52_afterif
.0f85	a9 35			lda  #$35
.0f87	60			rts
.0f88			label_asm_52_afterif
.0f88	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f8b	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0f8e	85 7c			sta  P8ZP_SCRATCH_W1
.0f90	84 7d			sty  P8ZP_SCRATCH_W1+1
.0f92	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0f94	c9 5b			cmp  #91
.0f96	d0 03			bne  label_asm_53_afterif
.0f98	a9 34			lda  #$34
.0f9a	60			rts
.0f9b			label_asm_53_afterif
.0f9b	ad 65 5c		lda  p8b_main.p8v_prgptr
.0f9e	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0fa1	85 7c			sta  P8ZP_SCRATCH_W1
.0fa3	84 7d			sty  P8ZP_SCRATCH_W1+1
.0fa5	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0fa7	c9 28			cmp  #40
.0fa9	d0 03			bne  label_asm_54_afterif
.0fab	a9 47			lda  #$47
.0fad	60			rts
.0fae			label_asm_54_afterif
.0fae	ad 65 5c		lda  p8b_main.p8v_prgptr
.0fb1	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0fb4	85 7c			sta  P8ZP_SCRATCH_W1
.0fb6	84 7d			sty  P8ZP_SCRATCH_W1+1
.0fb8	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0fba	c9 40			cmp  #64
.0fbc	d0 03			bne  label_asm_55_afterif
.0fbe	a9 d7			lda  #$d7
.0fc0	60			rts
.0fc1			label_asm_55_afterif
.0fc1	ad 65 5c		lda  p8b_main.p8v_prgptr
.0fc4	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0fc7	85 7c			sta  P8ZP_SCRATCH_W1
.0fc9	84 7d			sty  P8ZP_SCRATCH_W1+1
.0fcb	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0fcd	c9 23			cmp  #35
.0fcf	d0 03			bne  label_asm_56_afterif
.0fd1	a9 32			lda  #$32
.0fd3	60			rts
.0fd4			label_asm_56_afterif
.0fd4	ad 65 5c		lda  p8b_main.p8v_prgptr
.0fd7	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0fda	85 7c			sta  P8ZP_SCRATCH_W1
.0fdc	84 7d			sty  P8ZP_SCRATCH_W1+1
.0fde	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0fe0	c9 25			cmp  #37
.0fe2	d0 03			bne  label_asm_57_afterif
.0fe4	a9 30			lda  #$30
.0fe6	60			rts
.0fe7			label_asm_57_afterif
.0fe7	ad 65 5c		lda  p8b_main.p8v_prgptr
.0fea	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.0fed	85 7c			sta  P8ZP_SCRATCH_W1
.0fef	84 7d			sty  P8ZP_SCRATCH_W1+1
.0ff1	b2 7c			lda  (P8ZP_SCRATCH_W1)
.0ff3	c9 26			cmp  #38
.0ff5	d0 03			bne  label_asm_58_afterif
.0ff7	a9 31			lda  #$31
.0ff9	60			rts
.0ffa			label_asm_58_afterif
.0ffa	ad 65 5c		lda  p8b_main.p8v_prgptr
.0ffd	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1000	85 7c			sta  P8ZP_SCRATCH_W1
.1002	84 7d			sty  P8ZP_SCRATCH_W1+1
.1004	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1006	c9 21			cmp  #33
.1008	d0 03			bne  label_asm_59_afterif
.100a	a9 2f			lda  #$2f
.100c	60			rts
.100d			label_asm_59_afterif
.100d	ad 65 5c		lda  p8b_main.p8v_prgptr
.1010	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1013	85 7c			sta  P8ZP_SCRATCH_W1
.1015	84 7d			sty  P8ZP_SCRATCH_W1+1
.1017	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1019	c9 3a			cmp  #58
.101b	d0 03			bne  label_asm_60_afterif
.101d	a9 16			lda  #$16
.101f	60			rts
.1020			label_asm_60_afterif
.1020	a9 44			lda  #$44
.1022	60			rts
.1023			p8l_label_149_celse
.1023	ee 65 5c		inc  p8b_main.p8v_prgptr
.1026	d0 03			bne  +
.1028	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.102b			+
.102b	a9 00			lda  #0
.102d	60			rts
.102e			p8l_label_2_cont
.102e			p8l_label_5_cont
.102e	4c cb 0a		bra  p8l_label_9_repeat
.1031	60			rts
>5c6b			p8v_basic_cmd	.word  ?
>5c6d			p8v_flag	.byte  ?
>5c6e			p8v_lp	.word  ?
>5c70			p8v_p	.byte  ?
>5c71			p8v_prevptr	.word  ?
>5c73			p8v_prog8_subexprvar_1	.byte  ?
>5c74			p8v_prog8_subexprvar_2	.byte  ?
>5c75			p8v_prog8_subexprvar_3	.byte  ?
>1032	0a 0d		p8v_auto_heap_value_1	.byte  $0a, $0d
>1034	00 0a 0d	p8v_auto_heap_value_2	.byte  $00, $0a, $0d
>1037	00 0a 0d 22	p8v_auto_heap_value_3	.byte  $00, $0a, $0d, $22
>103b	00 0a		p8v_auto_heap_value_4	.byte  $00, $0a
.103d			p8s_tokenize
.103d	9c 82 5c		stz  p8v_t1
.1040	9c 83 5c		stz  p8v_t1+1
.1043	9c 80 5c		stz  p8v_strb
.1046	9c 81 5c		stz  p8v_strb+1
.1049	9c 85 5c		stz  p8v_val
.104c	9c 86 5c		stz  p8v_val+1
.104f	9c 76 5c		stz  p8v_index
.1052	9c 78 5c		stz  p8v_lp
.1055	9c 79 5c		stz  p8v_lp+1
.1058	9c 77 5c		stz  p8v_infuncheader
.105b	9c 7b 5c		stz  p8v_paramcount
.105e	9c 7a 5c		stz  p8v_p_funcno
.1061	9c 84 5c		stz  p8v_token
.1064	ad 7c 5c		lda  p8v_pcodebase
.1067	ac 7d 5c		ldy  p8v_pcodebase+1
.106a	85 22			sta  p8b_main.p8v_pcode
.106c	84 23			sty  p8b_main.p8v_pcode+1
.106e	ad 7e 5c		lda  p8v_rprgptr
.1071	ac 7f 5c		ldy  p8v_rprgptr+1
.1074	8d 65 5c		sta  p8b_main.p8v_prgptr
.1077	8c 66 5c		sty  p8b_main.p8v_prgptr+1
.107a			p8l_label_14_untilloop
.107a	20 a4 0a		jsr  p8b_main.p8s_parse
.107d	8d 84 5c		sta  p8v_token
.1080	ad 84 5c		lda  p8v_token
.1083	d0 03			beq  p8l_label_13_after
.1085	4c af 19
.1088	ad 84 5c		lda  p8v_token
.108b	92 22			sta  (p8b_main.p8v_pcode)
.108d	e6 22			inc  p8b_main.p8v_pcode
.108f	d0 02			bne  +
.1091	e6 23			inc  p8b_main.p8v_pcode+1
.1093			+
.1093	a9 26			lda  #<p8b_main.p8v_buffer
.1095	a0 08			ldy  #>p8b_main.p8v_buffer
.1097	8d 80 5c		sta  p8v_strb
.109a	8c 81 5c		sty  p8v_strb+1
.109d	85 7c			sta  P8ZP_SCRATCH_W1
.109f	84 7d			sty  P8ZP_SCRATCH_W1+1
.10a1	b2 7c			lda  (P8ZP_SCRATCH_W1)
.10a3	d0 03			beq  label_asm_62_else
.10a5	4c 41 14
.10a8	ad 84 5c		lda  p8v_token
.10ab	c9 2d			cmp  #45
.10ad	d0 37			bne  label_asm_64_else
.10af			p8l_label_10_untilloop
.10af	ad 80 5c		lda  p8v_strb
.10b2	ac 81 5c		ldy  p8v_strb+1
.10b5	85 7c			sta  P8ZP_SCRATCH_W1
.10b7	84 7d			sty  P8ZP_SCRATCH_W1+1
.10b9	b2 7c			lda  (P8ZP_SCRATCH_W1)
.10bb	92 22			sta  (p8b_main.p8v_pcode)
.10bd	e6 22			inc  p8b_main.p8v_pcode
.10bf	d0 02			bne  +
.10c1	e6 23			inc  p8b_main.p8v_pcode+1
.10c3			+
.10c3	ee 80 5c		inc  p8v_strb
.10c6	d0 03			bne  +
.10c8	ee 81 5c		inc  p8v_strb+1
.10cb			+
.10cb	ad 80 5c		lda  p8v_strb
.10ce	ac 81 5c		ldy  p8v_strb+1
.10d1	85 7c			sta  P8ZP_SCRATCH_W1
.10d3	84 7d			sty  P8ZP_SCRATCH_W1+1
.10d5	b2 7c			lda  (P8ZP_SCRATCH_W1)
.10d7	d0 d6			bne  p8l_label_10_untilloop
.10d9	a9 00			lda  #0
.10db	92 22			sta  (p8b_main.p8v_pcode)
.10dd	e6 22			inc  p8b_main.p8v_pcode
.10df	d0 02			bne  +
.10e1	e6 23			inc  p8b_main.p8v_pcode+1
.10e3			+
.10e3	4c 3e 14		bra  label_asm_63_afterif
.10e6			label_asm_64_else
.10e6	ad 84 5c		lda  p8v_token
.10e9	c9 2c			cmp  #44
.10eb	d0 24			bne  label_asm_66_else
.10ed	a0 08			ldy  #>p8b_main.p8v_buffer
.10ef	a9 26			lda  #<p8b_main.p8v_buffer
.10f1	20 c7 24		jsr  conv.any2uword
.10f4	8d 80 5c		sta  p8v_strb
.10f7	9c 81 5c		stz  p8v_strb+1
.10fa	a5 20			lda  cx16.r15L
.10fc	92 22			sta  (p8b_main.p8v_pcode)
.10fe	e6 22			inc  p8b_main.p8v_pcode
.1100	d0 02			bne  +
.1102	e6 23			inc  p8b_main.p8v_pcode+1
.1104			+
.1104	a5 21			lda  cx16.r15H
.1106	92 22			sta  (p8b_main.p8v_pcode)
.1108	e6 22			inc  p8b_main.p8v_pcode
.110a	d0 02			bne  +
.110c	e6 23			inc  p8b_main.p8v_pcode+1
.110e			+
.110e	4c 3e 14		bra  label_asm_65_afterif
.1111			label_asm_66_else
.1111	ad 84 5c		lda  p8v_token
.1114	c9 35			cmp  #53
.1116	d0 2a			bne  label_asm_68_else
.1118	a9 26			lda  #<p8b_main.p8v_buffer
.111a	a0 08			ldy  #>p8b_main.p8v_buffer
.111c	8d 5f 61		sta  p8b_jdstrvars.p8s_insert.p8v_name
.111f	8c 60 61		sty  p8b_jdstrvars.p8s_insert.p8v_name+1
.1122	a9 74			lda  #<prog8_interned_strings.string_7
.1124	a0 21			ldy  #>prog8_interned_strings.string_7
.1126	8d 61 61		sta  p8b_jdstrvars.p8s_insert.p8v_value
.1129	8c 62 61		sty  p8b_jdstrvars.p8s_insert.p8v_value+1
.112c	20 6b 4b		jsr  p8b_jdstrvars.p8s_insert
.112f	92 22			sta  (p8b_main.p8v_pcode)
.1131	ee 65 5c		inc  p8b_main.p8v_prgptr
.1134	d0 03			bne  +
.1136	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1139			+
.1139	e6 22			inc  p8b_main.p8v_pcode
.113b	d0 02			bne  +
.113d	e6 23			inc  p8b_main.p8v_pcode+1
.113f			+
.113f	4c 3e 14		bra  label_asm_67_afterif
.1142			label_asm_68_else
.1142	ad 84 5c		lda  p8v_token
.1145	c9 34			cmp  #52
.1147	f0 03			bne  label_asm_70_else
.1149	4c 2e 12
.114c	ad 77 5c		lda  p8v_infuncheader
.114f	f0 45			beq  label_asm_72_else
.1151	ee 7b 5c		inc  p8v_paramcount
.1154	a5 22			lda  p8b_main.p8v_pcode
.1156	d0 02			bne  +
.1158	c6 23			dec  p8b_main.p8v_pcode+1
.115a	c6 22		+                           dec  p8b_main.p8v_pcode
.115c	ad 84 5c		lda  p8v_token
.115f	18			clc
.1160	69 80			adc  #128
.1162	8d 84 5c		sta  p8v_token
.1165	92 22			sta  (p8b_main.p8v_pcode)
.1167	e6 22			inc  p8b_main.p8v_pcode
.1169	d0 02			bne  +
.116b	e6 23			inc  p8b_main.p8v_pcode+1
.116d			+
.116d	a9 26			lda  #<p8b_main.p8v_buffer
.116f	a0 08			ldy  #>p8b_main.p8v_buffer
.1171	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.1174	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.1177	ad 7b 5c		lda  p8v_paramcount
.117a	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.117d	9c 57 65		stz  p8b_jdlocal.p8s_insert.p8v_value+1
.1180	20 02 51		jsr  p8b_jdlocal.p8s_insert
.1183	92 22			sta  (p8b_main.p8v_pcode)
.1185	ee 65 5c		inc  p8b_main.p8v_prgptr
.1188	d0 03			bne  +
.118a	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.118d			+
.118d	e6 22			inc  p8b_main.p8v_pcode
.118f	d0 02			bne  +
.1191	e6 23			inc  p8b_main.p8v_pcode+1
.1193			+
.1193	4c 2b 12		bra  label_asm_71_afterif
.1196			label_asm_72_else
.1196	ad 5c 5c		lda  p8b_main.p8v_fstack
.1199	0d 5d 5c		ora  p8b_main.p8v_fstack+1
.119c	f0 66			beq  label_asm_74_else
.119e	a0 08			ldy  #>p8b_main.p8v_buffer
.11a0	a9 26			lda  #<p8b_main.p8v_buffer
.11a2	20 6e 52		jsr  p8b_jdlocal.p8s_get_name
.11a5	8d 76 5c		sta  p8v_index
.11a8	ad 76 5c		lda  p8v_index
.11ab	f0 2e			beq  label_asm_76_else
.11ad	a5 22			lda  p8b_main.p8v_pcode
.11af	d0 02			bne  +
.11b1	c6 23			dec  p8b_main.p8v_pcode+1
.11b3	c6 22		+                           dec  p8b_main.p8v_pcode
.11b5	ad 84 5c		lda  p8v_token
.11b8	18			clc
.11b9	69 80			adc  #128
.11bb	8d 84 5c		sta  p8v_token
.11be	92 22			sta  (p8b_main.p8v_pcode)
.11c0	e6 22			inc  p8b_main.p8v_pcode
.11c2	d0 02			bne  +
.11c4	e6 23			inc  p8b_main.p8v_pcode+1
.11c6			+
.11c6	ad 76 5c		lda  p8v_index
.11c9	92 22			sta  (p8b_main.p8v_pcode)
.11cb	ee 65 5c		inc  p8b_main.p8v_prgptr
.11ce	d0 03			bne  +
.11d0	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.11d3			+
.11d3	e6 22			inc  p8b_main.p8v_pcode
.11d5	d0 02			bne  +
.11d7	e6 23			inc  p8b_main.p8v_pcode+1
.11d9			+
.11d9	80 27			bra  label_asm_75_afterif
.11db			label_asm_76_else
.11db	a9 26			lda  #<p8b_main.p8v_buffer
.11dd	a0 08			ldy  #>p8b_main.p8v_buffer
.11df	8d ae 62		sta  p8b_jdarrvars.p8s_insert.p8v_name
.11e2	8c af 62		sty  p8b_jdarrvars.p8s_insert.p8v_name+1
.11e5	a9 74			lda  #<prog8_interned_strings.string_7
.11e7	a0 21			ldy  #>prog8_interned_strings.string_7
.11e9	8d b0 62		sta  p8b_jdarrvars.p8s_insert.p8v_value
.11ec	8c b1 62		sty  p8b_jdarrvars.p8s_insert.p8v_value+1
.11ef	20 34 4d		jsr  p8b_jdarrvars.p8s_insert
.11f2	92 22			sta  (p8b_main.p8v_pcode)
.11f4	ee 65 5c		inc  p8b_main.p8v_prgptr
.11f7	d0 03			bne  +
.11f9	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.11fc			+
.11fc	e6 22			inc  p8b_main.p8v_pcode
.11fe	d0 02			bne  +
.1200	e6 23			inc  p8b_main.p8v_pcode+1
.1202			+
.1202			label_asm_75_afterif
.1202	80 27			bra  label_asm_73_afterif
.1204			label_asm_74_else
.1204	a9 26			lda  #<p8b_main.p8v_buffer
.1206	a0 08			ldy  #>p8b_main.p8v_buffer
.1208	8d ae 62		sta  p8b_jdarrvars.p8s_insert.p8v_name
.120b	8c af 62		sty  p8b_jdarrvars.p8s_insert.p8v_name+1
.120e	a9 74			lda  #<prog8_interned_strings.string_7
.1210	a0 21			ldy  #>prog8_interned_strings.string_7
.1212	8d b0 62		sta  p8b_jdarrvars.p8s_insert.p8v_value
.1215	8c b1 62		sty  p8b_jdarrvars.p8s_insert.p8v_value+1
.1218	20 34 4d		jsr  p8b_jdarrvars.p8s_insert
.121b	92 22			sta  (p8b_main.p8v_pcode)
.121d	ee 65 5c		inc  p8b_main.p8v_prgptr
.1220	d0 03			bne  +
.1222	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1225			+
.1225	e6 22			inc  p8b_main.p8v_pcode
.1227	d0 02			bne  +
.1229	e6 23			inc  p8b_main.p8v_pcode+1
.122b			+
.122b			label_asm_73_afterif
.122b			label_asm_71_afterif
.122b	4c 3e 14		bra  label_asm_69_afterif
.122e			label_asm_70_else
.122e	ad 84 5c		lda  p8v_token
.1231	48			pha
.1232	a9 b2			lda  #<p8v_auto_heap_value_5
.1234	a0 19			ldy  #>p8v_auto_heap_value_5
.1236	85 7c			sta  P8ZP_SCRATCH_W1
.1238	84 7d			sty  P8ZP_SCRATCH_W1+1
.123a	68			pla
.123b	a0 02			ldy  #2
.123d	20 4a 5c		jsr  prog8_lib.containment_bytearray
.1240	c9 00			cmp  #0
.1242	d0 03			beq  label_asm_78_else
.1244	4c 00 13
.1247	ad 77 5c		lda  p8v_infuncheader
.124a	f0 3c			beq  label_asm_80_else
.124c	ee 7b 5c		inc  p8v_paramcount
.124f	a5 22			lda  p8b_main.p8v_pcode
.1251	d0 02			bne  +
.1253	c6 23			dec  p8b_main.p8v_pcode+1
.1255	c6 22		+                           dec  p8b_main.p8v_pcode
.1257	ad 84 5c		lda  p8v_token
.125a	18			clc
.125b	69 80			adc  #128
.125d	8d 84 5c		sta  p8v_token
.1260	92 22			sta  (p8b_main.p8v_pcode)
.1262	e6 22			inc  p8b_main.p8v_pcode
.1264	d0 02			bne  +
.1266	e6 23			inc  p8b_main.p8v_pcode+1
.1268			+
.1268	a9 26			lda  #<p8b_main.p8v_buffer
.126a	a0 08			ldy  #>p8b_main.p8v_buffer
.126c	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.126f	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.1272	ad 7b 5c		lda  p8v_paramcount
.1275	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.1278	9c 57 65		stz  p8b_jdlocal.p8s_insert.p8v_value+1
.127b	20 02 51		jsr  p8b_jdlocal.p8s_insert
.127e	92 22			sta  (p8b_main.p8v_pcode)
.1280	e6 22			inc  p8b_main.p8v_pcode
.1282	d0 02			bne  +
.1284	e6 23			inc  p8b_main.p8v_pcode+1
.1286			+
.1286	80 75			bra  label_asm_79_afterif
.1288			label_asm_80_else
.1288	ad 5c 5c		lda  p8b_main.p8v_fstack
.128b	0d 5d 5c		ora  p8b_main.p8v_fstack+1
.128e	f0 52			beq  label_asm_82_else
.1290	a0 08			ldy  #>p8b_main.p8v_buffer
.1292	a9 26			lda  #<p8b_main.p8v_buffer
.1294	20 6e 52		jsr  p8b_jdlocal.p8s_get_name
.1297	8d 76 5c		sta  p8v_index
.129a	ad 76 5c		lda  p8v_index
.129d	f0 26			beq  label_asm_84_else
.129f	a5 22			lda  p8b_main.p8v_pcode
.12a1	d0 02			bne  +
.12a3	c6 23			dec  p8b_main.p8v_pcode+1
.12a5	c6 22		+                           dec  p8b_main.p8v_pcode
.12a7	ad 84 5c		lda  p8v_token
.12aa	18			clc
.12ab	69 80			adc  #128
.12ad	8d 84 5c		sta  p8v_token
.12b0	92 22			sta  (p8b_main.p8v_pcode)
.12b2	e6 22			inc  p8b_main.p8v_pcode
.12b4	d0 02			bne  +
.12b6	e6 23			inc  p8b_main.p8v_pcode+1
.12b8			+
.12b8	ad 76 5c		lda  p8v_index
.12bb	92 22			sta  (p8b_main.p8v_pcode)
.12bd	e6 22			inc  p8b_main.p8v_pcode
.12bf	d0 02			bne  +
.12c1	e6 23			inc  p8b_main.p8v_pcode+1
.12c3			+
.12c3	80 1b			bra  label_asm_83_afterif
.12c5			label_asm_84_else
.12c5	a9 26			lda  #<p8b_main.p8v_buffer
.12c7	a0 08			ldy  #>p8b_main.p8v_buffer
.12c9	8d 12 60		sta  p8b_jdvars.p8s_insert.p8v_name
.12cc	8c 13 60		sty  p8b_jdvars.p8s_insert.p8v_name+1
.12cf	9c 14 60		stz  p8b_jdvars.p8s_insert.p8v_value
.12d2	9c 15 60		stz  p8b_jdvars.p8s_insert.p8v_value+1
.12d5	20 ca 49		jsr  p8b_jdvars.p8s_insert
.12d8	92 22			sta  (p8b_main.p8v_pcode)
.12da	e6 22			inc  p8b_main.p8v_pcode
.12dc	d0 02			bne  +
.12de	e6 23			inc  p8b_main.p8v_pcode+1
.12e0			+
.12e0			label_asm_83_afterif
.12e0	80 1b			bra  label_asm_81_afterif
.12e2			label_asm_82_else
.12e2	a9 26			lda  #<p8b_main.p8v_buffer
.12e4	a0 08			ldy  #>p8b_main.p8v_buffer
.12e6	8d 12 60		sta  p8b_jdvars.p8s_insert.p8v_name
.12e9	8c 13 60		sty  p8b_jdvars.p8s_insert.p8v_name+1
.12ec	9c 14 60		stz  p8b_jdvars.p8s_insert.p8v_value
.12ef	9c 15 60		stz  p8b_jdvars.p8s_insert.p8v_value+1
.12f2	20 ca 49		jsr  p8b_jdvars.p8s_insert
.12f5	92 22			sta  (p8b_main.p8v_pcode)
.12f7	e6 22			inc  p8b_main.p8v_pcode
.12f9	d0 02			bne  +
.12fb	e6 23			inc  p8b_main.p8v_pcode+1
.12fd			+
.12fd			label_asm_81_afterif
.12fd			label_asm_79_afterif
.12fd	4c 3e 14		bra  label_asm_77_afterif
.1300			label_asm_78_else
.1300	ad 84 5c		lda  p8v_token
.1303	c9 47			cmp  #71
.1305	f0 03			bne  label_asm_86_else
.1307	4c de 13
.130a	ad 77 5c		lda  p8v_infuncheader
.130d	f0 47			beq  label_asm_88_else
.130f	ee 7b 5c		inc  p8v_paramcount
.1312	a5 22			lda  p8b_main.p8v_pcode
.1314	d0 02			bne  +
.1316	c6 23			dec  p8b_main.p8v_pcode+1
.1318	c6 22		+                           dec  p8b_main.p8v_pcode
.131a	a9 c7			lda  #$c7
.131c	92 22			sta  (p8b_main.p8v_pcode)
.131e	e6 22			inc  p8b_main.p8v_pcode
.1320	d0 02			bne  +
.1322	e6 23			inc  p8b_main.p8v_pcode+1
.1324			+
.1324	a9 26			lda  #<p8b_main.p8v_buffer
.1326	a0 08			ldy  #>p8b_main.p8v_buffer
.1328	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.132b	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.132e	a9 ff			lda  #<$ff
.1330	a0 00			ldy  #>$ff
.1332	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.1335	8c 57 65		sty  p8b_jdlocal.p8s_insert.p8v_value+1
.1338	20 02 51		jsr  p8b_jdlocal.p8s_insert
.133b	92 22			sta  (p8b_main.p8v_pcode)
.133d	e6 22			inc  p8b_main.p8v_pcode
.133f	d0 02			bne  +
.1341	e6 23			inc  p8b_main.p8v_pcode+1
.1343			+
.1343	ee 65 5c		inc  p8b_main.p8v_prgptr
.1346	d0 03			bne  +
.1348	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.134b			+
.134b	ee 65 5c		inc  p8b_main.p8v_prgptr
.134e	d0 03			bne  +
.1350	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1353			+
.1353	4c dc 13		bra  label_asm_87_afterif
.1356			label_asm_88_else
.1356	ad 5c 5c		lda  p8b_main.p8v_fstack
.1359	0d 5d 5c		ora  p8b_main.p8v_fstack+1
.135c	f0 67			beq  label_asm_90_else
.135e	a0 08			ldy  #>p8b_main.p8v_buffer
.1360	a9 26			lda  #<p8b_main.p8v_buffer
.1362	20 1a 58		jsr  p8b_jdfunc.p8s_get_FuncNoByName
.1365	8d 76 5c		sta  p8v_index
.1368	ad 76 5c		lda  p8v_index
.136b	f0 15			beq  label_asm_92_else
.136d	ad 76 5c		lda  p8v_index
.1370	92 22			sta  (p8b_main.p8v_pcode)
.1372	ee 65 5c		inc  p8b_main.p8v_prgptr
.1375	d0 03			bne  +
.1377	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.137a			+
.137a	e6 22			inc  p8b_main.p8v_pcode
.137c	d0 02			bne  +
.137e	e6 23			inc  p8b_main.p8v_pcode+1
.1380			+
.1380	80 41			bra  label_asm_91_afterif
.1382			label_asm_92_else
.1382	a0 08			ldy  #>p8b_main.p8v_buffer
.1384	a9 26			lda  #<p8b_main.p8v_buffer
.1386	20 8c 53		jsr  p8b_jdlocal.p8s_get_indexbyname
.1389	8d 76 5c		sta  p8v_index
.138c	20 06 54		jsr  p8b_jdlocal.p8s_get_value
.138f	8d 82 5c		sta  p8v_t1
.1392	8c 83 5c		sty  p8v_t1+1
.1395	ad 76 5c		lda  p8v_index
.1398	f0 24			beq  label_asm_93_afterif
.139a	a5 22			lda  p8b_main.p8v_pcode
.139c	d0 02			bne  +
.139e	c6 23			dec  p8b_main.p8v_pcode+1
.13a0	c6 22		+                           dec  p8b_main.p8v_pcode
.13a2	ad 84 5c		lda  p8v_token
.13a5	18			clc
.13a6	69 80			adc  #128
.13a8	8d 84 5c		sta  p8v_token
.13ab	92 22			sta  (p8b_main.p8v_pcode)
.13ad	e6 22			inc  p8b_main.p8v_pcode
.13af	d0 02			bne  +
.13b1	e6 23			inc  p8b_main.p8v_pcode+1
.13b3			+
.13b3	ad 76 5c		lda  p8v_index
.13b6	92 22			sta  (p8b_main.p8v_pcode)
.13b8	e6 22			inc  p8b_main.p8v_pcode
.13ba	d0 02			bne  +
.13bc	e6 23			inc  p8b_main.p8v_pcode+1
.13be			+
.13be			label_asm_93_afterif
.13be	a9 0d			lda  #13
.13c0	20 d2 ff		jsr  txt.chrout
.13c3			label_asm_91_afterif
.13c3	80 17			bra  label_asm_89_afterif
.13c5			label_asm_90_else
.13c5	a0 08			ldy  #>p8b_main.p8v_buffer
.13c7	a9 26			lda  #<p8b_main.p8v_buffer
.13c9	20 1a 58		jsr  p8b_jdfunc.p8s_get_FuncNoByName
.13cc	92 22			sta  (p8b_main.p8v_pcode)
.13ce	ee 65 5c		inc  p8b_main.p8v_prgptr
.13d1	d0 03			bne  +
.13d3	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.13d6			+
.13d6	e6 22			inc  p8b_main.p8v_pcode
.13d8	d0 02			bne  +
.13da	e6 23			inc  p8b_main.p8v_pcode+1
.13dc			+
.13dc			label_asm_89_afterif
.13dc			label_asm_87_afterif
.13dc	80 60			bra  label_asm_85_afterif
.13de			label_asm_86_else
.13de	ad 84 5c		lda  p8v_token
.13e1	c9 d7			cmp  #215
.13e3	d0 19			bne  label_asm_95_else
.13e5	a0 08			ldy  #>p8b_main.p8v_buffer
.13e7	a9 26			lda  #<p8b_main.p8v_buffer
.13e9	20 1a 58		jsr  p8b_jdfunc.p8s_get_FuncNoByName
.13ec	92 22			sta  (p8b_main.p8v_pcode)
.13ee	ee 65 5c		inc  p8b_main.p8v_prgptr
.13f1	d0 03			bne  +
.13f3	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.13f6			+
.13f6	e6 22			inc  p8b_main.p8v_pcode
.13f8	d0 02			bne  +
.13fa	e6 23			inc  p8b_main.p8v_pcode+1
.13fc			+
.13fc	80 40			bra  label_asm_94_afterif
.13fe			label_asm_95_else
.13fe	ad 84 5c		lda  p8v_token
.1401	c9 16			cmp  #22
.1403	d0 39			bne  label_asm_96_afterif
.1405	a9 26			lda  #<p8b_main.p8v_buffer
.1407	a0 08			ldy  #>p8b_main.p8v_buffer
.1409	8d a9 66		sta  p8b_labels.p8s_insert.p8v_name
.140c	8c aa 66		sty  p8b_labels.p8s_insert.p8v_name+1
.140f	9c ab 66		stz  p8b_labels.p8s_insert.p8v_value
.1412	9c ac 66		stz  p8b_labels.p8s_insert.p8v_value+1
.1415	20 3b 54		jsr  p8b_labels.p8s_insert
.1418	8d 76 5c		sta  p8v_index
.141b	92 22			sta  (p8b_main.p8v_pcode)
.141d	e6 22			inc  p8b_main.p8v_pcode
.141f	d0 02			bne  +
.1421	e6 23			inc  p8b_main.p8v_pcode+1
.1423			+
.1423	ad 76 5c		lda  p8v_index
.1426	8d b1 66		sta  p8b_labels.p8s_set_value.p8v_index
.1429	a5 22			lda  p8b_main.p8v_pcode
.142b	a4 23			ldy  p8b_main.p8v_pcode+1
.142d	8d b2 66		sta  p8b_labels.p8s_set_value.p8v_value
.1430	8c b3 66		sty  p8b_labels.p8s_set_value.p8v_value+1
.1433	20 7c 56		jsr  p8b_labels.p8s_set_value
.1436	ee 65 5c		inc  p8b_main.p8v_prgptr
.1439	d0 03			bne  +
.143b	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.143e			+
.143e			label_asm_96_afterif
.143e			label_asm_94_afterif
.143e			label_asm_85_afterif
.143e			label_asm_77_afterif
.143e			label_asm_69_afterif
.143e			label_asm_67_afterif
.143e			label_asm_65_afterif
.143e			label_asm_63_afterif
.143e	4c a5 19		bra  label_asm_61_afterif
.1441			label_asm_62_else
.1441	ad 84 5c		lda  p8v_token
.1444	c9 19			cmp  #25
.1446	d0 29			bne  label_asm_98_else
.1448	ee 61 5c		inc  p8b_main.p8v_linenr
.144b	d0 03			bne  +
.144d	ee 62 5c		inc  p8b_main.p8v_linenr+1
.1450			+
.1450	ad 61 5c		lda  p8b_main.p8v_linenr
.1453	92 22			sta  (p8b_main.p8v_pcode)
.1455	e6 22			inc  p8b_main.p8v_pcode
.1457	d0 02			bne  +
.1459	e6 23			inc  p8b_main.p8v_pcode+1
.145b			+
.145b	ad 62 5c		lda  p8b_main.p8v_linenr+1
.145e	92 22			sta  (p8b_main.p8v_pcode)
.1460	e6 22			inc  p8b_main.p8v_pcode
.1462	d0 02			bne  +
.1464	e6 23			inc  p8b_main.p8v_pcode+1
.1466			+
.1466	ee 65 5c		inc  p8b_main.p8v_prgptr
.1469	d0 03			bne  +
.146b	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.146e			+
.146e	4c a5 19		bra  label_asm_97_afterif
.1471			label_asm_98_else
.1471	ad 84 5c		lda  p8v_token
.1474	c9 2e			cmp  #46
.1476	f0 03			bne  label_asm_100_else
.1478	4c 5b 16
.147b	ad 77 5c		lda  p8v_infuncheader
.147e	d0 03			beq  label_asm_102_else
.1480	4c 33 15
.1483	ee 7b 5c		inc  p8v_paramcount
.1486	a5 22			lda  p8b_main.p8v_pcode
.1488	d0 02			bne  +
.148a	c6 23			dec  p8b_main.p8v_pcode+1
.148c	c6 22		+                           dec  p8b_main.p8v_pcode
.148e	ad 84 5c		lda  p8v_token
.1491	18			clc
.1492	69 80			adc  #128
.1494	8d 84 5c		sta  p8v_token
.1497	92 22			sta  (p8b_main.p8v_pcode)
.1499	e6 22			inc  p8b_main.p8v_pcode
.149b	d0 02			bne  +
.149d	e6 23			inc  p8b_main.p8v_pcode+1
.149f			+
.149f	a9 26			lda  #<p8b_main.p8v_buffer
.14a1	a0 08			ldy  #>p8b_main.p8v_buffer
.14a3	8d 78 5c		sta  p8v_lp
.14a6	8c 79 5c		sty  p8v_lp+1
.14a9	ad 65 5c		lda  p8b_main.p8v_prgptr
.14ac	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.14af	85 7c			sta  P8ZP_SCRATCH_W1
.14b1	84 7d			sty  P8ZP_SCRATCH_W1+1
.14b3	b2 7c			lda  (P8ZP_SCRATCH_W1)
.14b5	c9 61			cmp  #97
.14b7	90 1d			bcc  label_asm_104_else
.14b9	ad 65 5c		lda  p8b_main.p8v_prgptr
.14bc	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.14bf	85 7c			sta  P8ZP_SCRATCH_W1
.14c1	84 7d			sty  P8ZP_SCRATCH_W1+1
.14c3	b2 7c			lda  (P8ZP_SCRATCH_W1)
.14c5	38			sec
.14c6	e9 20			sbc  #$20
.14c8	ac 78 5c		ldy  p8v_lp
.14cb	84 7e			sty  P8ZP_SCRATCH_W2
.14cd	ac 79 5c		ldy  p8v_lp+1
.14d0	84 7f			sty  P8ZP_SCRATCH_W2+1
.14d2	92 7e			sta  (P8ZP_SCRATCH_W2)
.14d4	80 18			bra  label_asm_103_afterif
.14d6			label_asm_104_else
.14d6	ad 65 5c		lda  p8b_main.p8v_prgptr
.14d9	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.14dc	85 7c			sta  P8ZP_SCRATCH_W1
.14de	84 7d			sty  P8ZP_SCRATCH_W1+1
.14e0	b2 7c			lda  (P8ZP_SCRATCH_W1)
.14e2	ac 78 5c		ldy  p8v_lp
.14e5	84 7e			sty  P8ZP_SCRATCH_W2
.14e7	ac 79 5c		ldy  p8v_lp+1
.14ea	84 7f			sty  P8ZP_SCRATCH_W2+1
.14ec	92 7e			sta  (P8ZP_SCRATCH_W2)
.14ee			label_asm_103_afterif
.14ee	ee 78 5c		inc  p8v_lp
.14f1	d0 03			bne  +
.14f3	ee 79 5c		inc  p8v_lp+1
.14f6			+
.14f6	a9 00			lda  #0
.14f8	ac 78 5c		ldy  p8v_lp
.14fb	84 7e			sty  P8ZP_SCRATCH_W2
.14fd	ac 79 5c		ldy  p8v_lp+1
.1500	84 7f			sty  P8ZP_SCRATCH_W2+1
.1502	92 7e			sta  (P8ZP_SCRATCH_W2)
.1504	e6 22			inc  p8b_main.p8v_pcode
.1506	d0 02			bne  +
.1508	e6 23			inc  p8b_main.p8v_pcode+1
.150a			+
.150a	a9 26			lda  #<p8b_main.p8v_buffer
.150c	a0 08			ldy  #>p8b_main.p8v_buffer
.150e	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.1511	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.1514	ad 7b 5c		lda  p8v_paramcount
.1517	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.151a	9c 57 65		stz  p8b_jdlocal.p8s_insert.p8v_value+1
.151d	20 02 51		jsr  p8b_jdlocal.p8s_insert
.1520	92 22			sta  (p8b_main.p8v_pcode)
.1522	ee 65 5c		inc  p8b_main.p8v_prgptr
.1525	d0 03			bne  +
.1527	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.152a			+
.152a	e6 22			inc  p8b_main.p8v_pcode
.152c	d0 02			bne  +
.152e	e6 23			inc  p8b_main.p8v_pcode+1
.1530			+
.1530	4c 58 16		bra  label_asm_101_afterif
.1533			label_asm_102_else
.1533	ad 5c 5c		lda  p8b_main.p8v_fstack
.1536	0d 5d 5c		ora  p8b_main.p8v_fstack+1
.1539	d0 03			beq  label_asm_106_else
.153b	4c 19 16
.153e	a9 26			lda  #<p8b_main.p8v_buffer
.1540	a0 08			ldy  #>p8b_main.p8v_buffer
.1542	8d 78 5c		sta  p8v_lp
.1545	8c 79 5c		sty  p8v_lp+1
.1548	ad 65 5c		lda  p8b_main.p8v_prgptr
.154b	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.154e	85 7c			sta  P8ZP_SCRATCH_W1
.1550	84 7d			sty  P8ZP_SCRATCH_W1+1
.1552	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1554	c9 61			cmp  #97
.1556	90 1d			bcc  label_asm_108_else
.1558	ad 65 5c		lda  p8b_main.p8v_prgptr
.155b	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.155e	85 7c			sta  P8ZP_SCRATCH_W1
.1560	84 7d			sty  P8ZP_SCRATCH_W1+1
.1562	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1564	38			sec
.1565	e9 20			sbc  #$20
.1567	ac 78 5c		ldy  p8v_lp
.156a	84 7e			sty  P8ZP_SCRATCH_W2
.156c	ac 79 5c		ldy  p8v_lp+1
.156f	84 7f			sty  P8ZP_SCRATCH_W2+1
.1571	92 7e			sta  (P8ZP_SCRATCH_W2)
.1573	80 18			bra  label_asm_107_afterif
.1575			label_asm_108_else
.1575	ad 65 5c		lda  p8b_main.p8v_prgptr
.1578	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.157b	85 7c			sta  P8ZP_SCRATCH_W1
.157d	84 7d			sty  P8ZP_SCRATCH_W1+1
.157f	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1581	ac 78 5c		ldy  p8v_lp
.1584	84 7e			sty  P8ZP_SCRATCH_W2
.1586	ac 79 5c		ldy  p8v_lp+1
.1589	84 7f			sty  P8ZP_SCRATCH_W2+1
.158b	92 7e			sta  (P8ZP_SCRATCH_W2)
.158d			label_asm_107_afterif
.158d	ee 78 5c		inc  p8v_lp
.1590	d0 03			bne  +
.1592	ee 79 5c		inc  p8v_lp+1
.1595			+
.1595	a9 00			lda  #0
.1597	ac 78 5c		ldy  p8v_lp
.159a	84 7e			sty  P8ZP_SCRATCH_W2
.159c	ac 79 5c		ldy  p8v_lp+1
.159f	84 7f			sty  P8ZP_SCRATCH_W2+1
.15a1	92 7e			sta  (P8ZP_SCRATCH_W2)
.15a3	a0 08			ldy  #>p8b_main.p8v_buffer
.15a5	a9 26			lda  #<p8b_main.p8v_buffer
.15a7	20 6e 52		jsr  p8b_jdlocal.p8s_get_name
.15aa	8d 76 5c		sta  p8v_index
.15ad	ad 76 5c		lda  p8v_index
.15b0	f0 26			beq  label_asm_110_else
.15b2	a5 22			lda  p8b_main.p8v_pcode
.15b4	d0 02			bne  +
.15b6	c6 23			dec  p8b_main.p8v_pcode+1
.15b8	c6 22		+                           dec  p8b_main.p8v_pcode
.15ba	ad 84 5c		lda  p8v_token
.15bd	18			clc
.15be	69 80			adc  #128
.15c0	8d 84 5c		sta  p8v_token
.15c3	92 22			sta  (p8b_main.p8v_pcode)
.15c5	e6 22			inc  p8b_main.p8v_pcode
.15c7	d0 02			bne  +
.15c9	e6 23			inc  p8b_main.p8v_pcode+1
.15cb			+
.15cb	ad 76 5c		lda  p8v_index
.15ce	92 22			sta  (p8b_main.p8v_pcode)
.15d0	e6 22			inc  p8b_main.p8v_pcode
.15d2	d0 02			bne  +
.15d4	e6 23			inc  p8b_main.p8v_pcode+1
.15d6			+
.15d6	80 37			bra  label_asm_109_afterif
.15d8			label_asm_110_else
.15d8	ad 65 5c		lda  p8b_main.p8v_prgptr
.15db	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.15de	85 7c			sta  P8ZP_SCRATCH_W1
.15e0	84 7d			sty  P8ZP_SCRATCH_W1+1
.15e2	b2 7c			lda  (P8ZP_SCRATCH_W1)
.15e4	c9 61			cmp  #97
.15e6	90 13			bcc  label_asm_112_else
.15e8	ad 65 5c		lda  p8b_main.p8v_prgptr
.15eb	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.15ee	85 7c			sta  P8ZP_SCRATCH_W1
.15f0	84 7d			sty  P8ZP_SCRATCH_W1+1
.15f2	b2 7c			lda  (P8ZP_SCRATCH_W1)
.15f4	38			sec
.15f5	e9 20			sbc  #$20
.15f7	92 22			sta  (p8b_main.p8v_pcode)
.15f9	80 0e			bra  label_asm_111_afterif
.15fb			label_asm_112_else
.15fb	ad 65 5c		lda  p8b_main.p8v_prgptr
.15fe	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1601	85 7c			sta  P8ZP_SCRATCH_W1
.1603	84 7d			sty  P8ZP_SCRATCH_W1+1
.1605	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1607	92 22			sta  (p8b_main.p8v_pcode)
.1609			label_asm_111_afterif
.1609	e6 22			inc  p8b_main.p8v_pcode
.160b	d0 02			bne  +
.160d	e6 23			inc  p8b_main.p8v_pcode+1
.160f			+
.160f			label_asm_109_afterif
.160f	ee 65 5c		inc  p8b_main.p8v_prgptr
.1612	d0 03			bne  +
.1614	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1617			+
.1617	80 3f			bra  label_asm_105_afterif
.1619			label_asm_106_else
.1619	ad 65 5c		lda  p8b_main.p8v_prgptr
.161c	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.161f	85 7c			sta  P8ZP_SCRATCH_W1
.1621	84 7d			sty  P8ZP_SCRATCH_W1+1
.1623	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1625	c9 61			cmp  #97
.1627	90 13			bcc  label_asm_114_else
.1629	ad 65 5c		lda  p8b_main.p8v_prgptr
.162c	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.162f	85 7c			sta  P8ZP_SCRATCH_W1
.1631	84 7d			sty  P8ZP_SCRATCH_W1+1
.1633	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1635	38			sec
.1636	e9 20			sbc  #$20
.1638	92 22			sta  (p8b_main.p8v_pcode)
.163a	80 0e			bra  label_asm_113_afterif
.163c			label_asm_114_else
.163c	ad 65 5c		lda  p8b_main.p8v_prgptr
.163f	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1642	85 7c			sta  P8ZP_SCRATCH_W1
.1644	84 7d			sty  P8ZP_SCRATCH_W1+1
.1646	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1648	92 22			sta  (p8b_main.p8v_pcode)
.164a			label_asm_113_afterif
.164a	ee 65 5c		inc  p8b_main.p8v_prgptr
.164d	d0 03			bne  +
.164f	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1652			+
.1652	e6 22			inc  p8b_main.p8v_pcode
.1654	d0 02			bne  +
.1656	e6 23			inc  p8b_main.p8v_pcode+1
.1658			+
.1658			label_asm_105_afterif
.1658			label_asm_101_afterif
.1658	4c a5 19		bra  label_asm_99_afterif
.165b			label_asm_100_else
.165b	ad 84 5c		lda  p8v_token
.165e	c9 01			cmp  #1
.1660	f0 03			bne  label_asm_116_else
.1662	4c f7 16
.1665	a5 22			lda  p8b_main.p8v_pcode
.1667	a4 23			ldy  p8b_main.p8v_pcode+1
.1669	8d 85 5c		sta  p8v_val
.166c	8c 86 5c		sty  p8v_val+1
.166f	ad 85 5c		lda  p8v_val
.1672	d0 03			bne  +
.1674	ce 86 5c		dec  p8v_val+1
.1677	ce 85 5c	+                           dec  p8v_val
.167a	20 a4 0a		jsr  p8b_main.p8s_parse
.167d	8d 84 5c		sta  p8v_token
.1680	c9 47			cmp  #71
.1682	d0 70			bne  label_asm_117_afterif
.1684	a9 01			lda  #1
.1686	8d 77 5c		sta  p8v_infuncheader
.1689	9c 7b 5c		stz  p8v_paramcount
.168c	a9 26			lda  #<p8b_main.p8v_buffer
.168e	a0 08			ldy  #>p8b_main.p8v_buffer
.1690	8d 39 68		sta  p8b_jdfunc.p8s_insert.p8v_name
.1693	8c 3a 68		sty  p8b_jdfunc.p8s_insert.p8v_name+1
.1696	ad 85 5c		lda  p8v_val
.1699	ac 86 5c		ldy  p8v_val+1
.169c	8d 3b 68		sta  p8b_jdfunc.p8s_insert.p8v_value
.169f	8c 3c 68		sty  p8b_jdfunc.p8s_insert.p8v_value+1
.16a2	20 a1 56		jsr  p8b_jdfunc.p8s_insert
.16a5	92 22			sta  (p8b_main.p8v_pcode)
.16a7	8d 7a 5c		sta  p8v_p_funcno
.16aa	e6 22			inc  p8b_main.p8v_pcode
.16ac	d0 02			bne  +
.16ae	e6 23			inc  p8b_main.p8v_pcode+1
.16b0			+
.16b0	a9 00			lda  #0
.16b2	92 22			sta  (p8b_main.p8v_pcode)
.16b4	a5 22			lda  p8b_main.p8v_pcode
.16b6	a4 23			ldy  p8b_main.p8v_pcode+1
.16b8	8d 5c 5c		sta  p8b_main.p8v_fstack
.16bb	8c 5d 5c		sty  p8b_main.p8v_fstack+1
.16be	e6 22			inc  p8b_main.p8v_pcode
.16c0	d0 02			bne  +
.16c2	e6 23			inc  p8b_main.p8v_pcode+1
.16c4			+
.16c4	a9 00			lda  #0
.16c6	92 22			sta  (p8b_main.p8v_pcode)
.16c8	e6 22			inc  p8b_main.p8v_pcode
.16ca	d0 02			bne  +
.16cc	e6 23			inc  p8b_main.p8v_pcode+1
.16ce			+
.16ce	a9 00			lda  #0
.16d0	92 22			sta  (p8b_main.p8v_pcode)
.16d2	a5 22			lda  p8b_main.p8v_pcode
.16d4	a4 23			ldy  p8b_main.p8v_pcode+1
.16d6	8d 5e 5c		sta  p8b_main.p8v_fstack1
.16d9	8c 5f 5c		sty  p8b_main.p8v_fstack1+1
.16dc	e6 22			inc  p8b_main.p8v_pcode
.16de	d0 02			bne  +
.16e0	e6 23			inc  p8b_main.p8v_pcode+1
.16e2			+
.16e2	a9 00			lda  #0
.16e4	92 22			sta  (p8b_main.p8v_pcode)
.16e6	e6 22			inc  p8b_main.p8v_pcode
.16e8	d0 02			bne  +
.16ea	e6 23			inc  p8b_main.p8v_pcode+1
.16ec			+
.16ec	ee 65 5c		inc  p8b_main.p8v_prgptr
.16ef	d0 03			bne  +
.16f1	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.16f4			+
.16f4			label_asm_117_afterif
.16f4	4c a5 19		bra  label_asm_115_afterif
.16f7			label_asm_116_else
.16f7	ad 84 5c		lda  p8v_token
.16fa	c9 26			cmp  #38
.16fc	d0 41			bne  label_asm_119_else
.16fe	ad 77 5c		lda  p8v_infuncheader
.1701	f0 39			beq  label_asm_120_afterif
.1703	9c 77 5c		stz  p8v_infuncheader
.1706	ad 5e 5c		lda  p8b_main.p8v_fstack1
.1709	ac 5f 5c		ldy  p8b_main.p8v_fstack1+1
.170c	8d 80 5c		sta  p8v_strb
.170f	8c 81 5c		sty  p8v_strb+1
.1712	a5 22			lda  p8b_main.p8v_pcode
.1714	ac 80 5c		ldy  p8v_strb
.1717	84 7e			sty  P8ZP_SCRATCH_W2
.1719	ac 81 5c		ldy  p8v_strb+1
.171c	84 7f			sty  P8ZP_SCRATCH_W2+1
.171e	92 7e			sta  (P8ZP_SCRATCH_W2)
.1720	ee 80 5c		inc  p8v_strb
.1723	d0 03			bne  +
.1725	ee 81 5c		inc  p8v_strb+1
.1728			+
.1728	a5 23			lda  p8b_main.p8v_pcode+1
.172a	ac 80 5c		ldy  p8v_strb
.172d	84 7e			sty  P8ZP_SCRATCH_W2
.172f	ac 81 5c		ldy  p8v_strb+1
.1732	84 7f			sty  P8ZP_SCRATCH_W2+1
.1734	92 7e			sta  (P8ZP_SCRATCH_W2)
.1736	9c 5e 5c		stz  p8b_main.p8v_fstack1
.1739	9c 5f 5c		stz  p8b_main.p8v_fstack1+1
.173c			label_asm_120_afterif
.173c	4c a5 19		bra  label_asm_118_afterif
.173f			label_asm_119_else
.173f	ad 84 5c		lda  p8v_token
.1742	c9 2b			cmp  #43
.1744	d0 41			bne  label_asm_122_else
.1746	ad 77 5c		lda  p8v_infuncheader
.1749	f0 39			beq  label_asm_123_afterif
.174b	9c 77 5c		stz  p8v_infuncheader
.174e	ad 5e 5c		lda  p8b_main.p8v_fstack1
.1751	ac 5f 5c		ldy  p8b_main.p8v_fstack1+1
.1754	8d 80 5c		sta  p8v_strb
.1757	8c 81 5c		sty  p8v_strb+1
.175a	a5 22			lda  p8b_main.p8v_pcode
.175c	ac 80 5c		ldy  p8v_strb
.175f	84 7e			sty  P8ZP_SCRATCH_W2
.1761	ac 81 5c		ldy  p8v_strb+1
.1764	84 7f			sty  P8ZP_SCRATCH_W2+1
.1766	92 7e			sta  (P8ZP_SCRATCH_W2)
.1768	ee 80 5c		inc  p8v_strb
.176b	d0 03			bne  +
.176d	ee 81 5c		inc  p8v_strb+1
.1770			+
.1770	a5 23			lda  p8b_main.p8v_pcode+1
.1772	ac 80 5c		ldy  p8v_strb
.1775	84 7e			sty  P8ZP_SCRATCH_W2
.1777	ac 81 5c		ldy  p8v_strb+1
.177a	84 7f			sty  P8ZP_SCRATCH_W2+1
.177c	92 7e			sta  (P8ZP_SCRATCH_W2)
.177e	9c 5e 5c		stz  p8b_main.p8v_fstack1
.1781	9c 5f 5c		stz  p8b_main.p8v_fstack1+1
.1784			label_asm_123_afterif
.1784	4c a5 19		bra  label_asm_121_afterif
.1787			label_asm_122_else
.1787	ad 84 5c		lda  p8v_token
.178a	c9 06			cmp  #6
.178c	d0 72			bne  label_asm_125_else
.178e	a5 22			lda  p8b_main.p8v_pcode
.1790	a4 23			ldy  p8b_main.p8v_pcode+1
.1792	8d a8 68		sta  p8b_ifstack.p8s_push.p8v_elseaddress
.1795	8c a9 68		sty  p8b_ifstack.p8s_push.p8v_elseaddress+1
.1798	a4 23			ldy  p8b_main.p8v_pcode+1
.179a	a5 22			lda  p8b_main.p8v_pcode
.179c	18			clc
.179d	69 02			adc  #<2
.179f	aa			tax
.17a0	98			tya
.17a1	69 00			adc  #>2
.17a3	a8			tay
.17a4	8a			txa
.17a5	8d ac 68		sta  p8b_ifstack.p8s_push.p8v_thenaddress
.17a8	8c ad 68		sty  p8b_ifstack.p8s_push.p8v_thenaddress+1
.17ab	a4 23			ldy  p8b_main.p8v_pcode+1
.17ad	a5 22			lda  p8b_main.p8v_pcode
.17af	18			clc
.17b0	69 04			adc  #<4
.17b2	aa			tax
.17b3	98			tya
.17b4	69 00			adc  #>4
.17b6	a8			tay
.17b7	8a			txa
.17b8	8d aa 68		sta  p8b_ifstack.p8s_push.p8v_endifaddress
.17bb	8c ab 68		sty  p8b_ifstack.p8s_push.p8v_endifaddress+1
.17be	20 12 59		jsr  p8b_ifstack.p8s_push
.17c1	a9 00			lda  #0
.17c3	92 22			sta  (p8b_main.p8v_pcode)
.17c5	e6 22			inc  p8b_main.p8v_pcode
.17c7	d0 02			bne  +
.17c9	e6 23			inc  p8b_main.p8v_pcode+1
.17cb			+
.17cb	a9 00			lda  #0
.17cd	92 22			sta  (p8b_main.p8v_pcode)
.17cf	e6 22			inc  p8b_main.p8v_pcode
.17d1	d0 02			bne  +
.17d3	e6 23			inc  p8b_main.p8v_pcode+1
.17d5			+
.17d5	a9 00			lda  #0
.17d7	92 22			sta  (p8b_main.p8v_pcode)
.17d9	e6 22			inc  p8b_main.p8v_pcode
.17db	d0 02			bne  +
.17dd	e6 23			inc  p8b_main.p8v_pcode+1
.17df			+
.17df	a9 00			lda  #0
.17e1	92 22			sta  (p8b_main.p8v_pcode)
.17e3	e6 22			inc  p8b_main.p8v_pcode
.17e5	d0 02			bne  +
.17e7	e6 23			inc  p8b_main.p8v_pcode+1
.17e9			+
.17e9	a9 00			lda  #0
.17eb	92 22			sta  (p8b_main.p8v_pcode)
.17ed	e6 22			inc  p8b_main.p8v_pcode
.17ef	d0 02			bne  +
.17f1	e6 23			inc  p8b_main.p8v_pcode+1
.17f3			+
.17f3	a9 00			lda  #0
.17f5	92 22			sta  (p8b_main.p8v_pcode)
.17f7	e6 22			inc  p8b_main.p8v_pcode
.17f9	d0 02			bne  +
.17fb	e6 23			inc  p8b_main.p8v_pcode+1
.17fd			+
.17fd	4c a5 19		bra  label_asm_124_afterif
.1800			label_asm_125_else
.1800	ad 84 5c		lda  p8v_token
.1803	c9 08			cmp  #8
.1805	d0 30			bne  label_asm_127_else
.1807	20 49 59		jsr  p8b_ifstack.p8s_pops
.180a	8d 80 5c		sta  p8v_strb
.180d	8c 81 5c		sty  p8v_strb+1
.1810	a5 22			lda  p8b_main.p8v_pcode
.1812	ac 80 5c		ldy  p8v_strb
.1815	84 7e			sty  P8ZP_SCRATCH_W2
.1817	ac 81 5c		ldy  p8v_strb+1
.181a	84 7f			sty  P8ZP_SCRATCH_W2+1
.181c	92 7e			sta  (P8ZP_SCRATCH_W2)
.181e	ee 80 5c		inc  p8v_strb
.1821	d0 03			bne  +
.1823	ee 81 5c		inc  p8v_strb+1
.1826			+
.1826	a5 23			lda  p8b_main.p8v_pcode+1
.1828	ac 80 5c		ldy  p8v_strb
.182b	84 7e			sty  P8ZP_SCRATCH_W2
.182d	ac 81 5c		ldy  p8v_strb+1
.1830	84 7f			sty  P8ZP_SCRATCH_W2+1
.1832	92 7e			sta  (P8ZP_SCRATCH_W2)
.1834	4c a5 19		bra  label_asm_126_afterif
.1837			label_asm_127_else
.1837	ad 84 5c		lda  p8v_token
.183a	c9 07			cmp  #7
.183c	d0 30			bne  label_asm_129_else
.183e	20 61 59		jsr  p8b_ifstack.p8s_popm
.1841	8d 80 5c		sta  p8v_strb
.1844	8c 81 5c		sty  p8v_strb+1
.1847	a5 22			lda  p8b_main.p8v_pcode
.1849	ac 80 5c		ldy  p8v_strb
.184c	84 7e			sty  P8ZP_SCRATCH_W2
.184e	ac 81 5c		ldy  p8v_strb+1
.1851	84 7f			sty  P8ZP_SCRATCH_W2+1
.1853	92 7e			sta  (P8ZP_SCRATCH_W2)
.1855	ee 80 5c		inc  p8v_strb
.1858	d0 03			bne  +
.185a	ee 81 5c		inc  p8v_strb+1
.185d			+
.185d	a5 23			lda  p8b_main.p8v_pcode+1
.185f	ac 80 5c		ldy  p8v_strb
.1862	84 7e			sty  P8ZP_SCRATCH_W2
.1864	ac 81 5c		ldy  p8v_strb+1
.1867	84 7f			sty  P8ZP_SCRATCH_W2+1
.1869	92 7e			sta  (P8ZP_SCRATCH_W2)
.186b	4c a5 19		bra  label_asm_128_afterif
.186e			label_asm_129_else
.186e	ad 84 5c		lda  p8v_token
.1871	c9 09			cmp  #9
.1873	d0 30			bne  label_asm_131_else
.1875	20 79 59		jsr  p8b_ifstack.p8s_pope
.1878	8d 80 5c		sta  p8v_strb
.187b	8c 81 5c		sty  p8v_strb+1
.187e	a5 22			lda  p8b_main.p8v_pcode
.1880	ac 80 5c		ldy  p8v_strb
.1883	84 7e			sty  P8ZP_SCRATCH_W2
.1885	ac 81 5c		ldy  p8v_strb+1
.1888	84 7f			sty  P8ZP_SCRATCH_W2+1
.188a	92 7e			sta  (P8ZP_SCRATCH_W2)
.188c	ee 80 5c		inc  p8v_strb
.188f	d0 03			bne  +
.1891	ee 81 5c		inc  p8v_strb+1
.1894			+
.1894	a5 23			lda  p8b_main.p8v_pcode+1
.1896	ac 80 5c		ldy  p8v_strb
.1899	84 7e			sty  P8ZP_SCRATCH_W2
.189b	ac 81 5c		ldy  p8v_strb+1
.189e	84 7f			sty  P8ZP_SCRATCH_W2+1
.18a0	92 7e			sta  (P8ZP_SCRATCH_W2)
.18a2	4c a5 19		bra  label_asm_130_afterif
.18a5			label_asm_131_else
.18a5	ad 84 5c		lda  p8v_token
.18a8	c9 02			cmp  #2
.18aa	d0 43			bne  label_asm_133_else
.18ac	a9 02			lda  #2
.18ae	92 22			sta  (p8b_main.p8v_pcode)
.18b0	e6 22			inc  p8b_main.p8v_pcode
.18b2	d0 02			bne  +
.18b4	e6 23			inc  p8b_main.p8v_pcode+1
.18b6			+
.18b6	ad 5c 5c		lda  p8b_main.p8v_fstack
.18b9	ac 5d 5c		ldy  p8b_main.p8v_fstack+1
.18bc	8d 80 5c		sta  p8v_strb
.18bf	8c 81 5c		sty  p8v_strb+1
.18c2	a5 22			lda  p8b_main.p8v_pcode
.18c4	ac 80 5c		ldy  p8v_strb
.18c7	84 7e			sty  P8ZP_SCRATCH_W2
.18c9	ac 81 5c		ldy  p8v_strb+1
.18cc	84 7f			sty  P8ZP_SCRATCH_W2+1
.18ce	92 7e			sta  (P8ZP_SCRATCH_W2)
.18d0	ee 80 5c		inc  p8v_strb
.18d3	d0 03			bne  +
.18d5	ee 81 5c		inc  p8v_strb+1
.18d8			+
.18d8	a5 23			lda  p8b_main.p8v_pcode+1
.18da	ac 80 5c		ldy  p8v_strb
.18dd	84 7e			sty  P8ZP_SCRATCH_W2
.18df	ac 81 5c		ldy  p8v_strb+1
.18e2	84 7f			sty  P8ZP_SCRATCH_W2+1
.18e4	92 7e			sta  (P8ZP_SCRATCH_W2)
.18e6	9c 5c 5c		stz  p8b_main.p8v_fstack
.18e9	9c 5d 5c		stz  p8b_main.p8v_fstack+1
.18ec	4c a5 19		bra  label_asm_132_afterif
.18ef			label_asm_133_else
.18ef	ad 84 5c		lda  p8v_token
.18f2	c9 17			cmp  #23
.18f4	f0 03			bne  label_asm_134_afterif
.18f6	4c a5 19
.18f9	ad 65 5c		lda  p8b_main.p8v_prgptr
.18fc	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.18ff	85 7c			sta  P8ZP_SCRATCH_W1
.1901	84 7d			sty  P8ZP_SCRATCH_W1+1
.1903	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1905	20 31 29		jsr  string.isletter
.1908	b0 19			bcs  p8l_label_151_celse
.190a			p8l_label_11_untilloop
.190a	ee 65 5c		inc  p8b_main.p8v_prgptr
.190d	d0 03			bne  +
.190f	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1912			+
.1912	ad 65 5c		lda  p8b_main.p8v_prgptr
.1915	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1918	85 7c			sta  P8ZP_SCRATCH_W1
.191a	84 7d			sty  P8ZP_SCRATCH_W1+1
.191c	b2 7c			lda  (P8ZP_SCRATCH_W1)
.191e	20 31 29		jsr  string.isletter
.1921	90 e7			bcc  p8l_label_11_untilloop
.1923			p8l_label_151_celse
.1923	ad 65 5c		lda  p8b_main.p8v_prgptr
.1926	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1929	85 7c			sta  P8ZP_SCRATCH_W1
.192b	84 7d			sty  P8ZP_SCRATCH_W1+1
.192d	b2 7c			lda  (P8ZP_SCRATCH_W1)
.192f	20 31 29		jsr  string.isletter
.1932	90 71			bcc  p8l_label_153_celse
.1934	a9 26			lda  #<p8b_main.p8v_buffer
.1936	a0 08			ldy  #>p8b_main.p8v_buffer
.1938	8d 78 5c		sta  p8v_lp
.193b	8c 79 5c		sty  p8v_lp+1
.193e			p8l_label_12_untilloop
.193e	ad 65 5c		lda  p8b_main.p8v_prgptr
.1941	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.1944	85 7c			sta  P8ZP_SCRATCH_W1
.1946	84 7d			sty  P8ZP_SCRATCH_W1+1
.1948	b2 7c			lda  (P8ZP_SCRATCH_W1)
.194a	ac 78 5c		ldy  p8v_lp
.194d	84 7e			sty  P8ZP_SCRATCH_W2
.194f	ac 79 5c		ldy  p8v_lp+1
.1952	84 7f			sty  P8ZP_SCRATCH_W2+1
.1954	92 7e			sta  (P8ZP_SCRATCH_W2)
.1956	ee 78 5c		inc  p8v_lp
.1959	d0 03			bne  +
.195b	ee 79 5c		inc  p8v_lp+1
.195e			+
.195e	ee 65 5c		inc  p8b_main.p8v_prgptr
.1961	d0 03			bne  +
.1963	ee 66 5c		inc  p8b_main.p8v_prgptr+1
.1966			+
.1966	ad 65 5c		lda  p8b_main.p8v_prgptr
.1969	ac 66 5c		ldy  p8b_main.p8v_prgptr+1
.196c	85 7c			sta  P8ZP_SCRATCH_W1
.196e	84 7d			sty  P8ZP_SCRATCH_W1+1
.1970	b2 7c			lda  (P8ZP_SCRATCH_W1)
.1972	20 31 29		jsr  string.isletter
.1975	b0 c7			bcs  p8l_label_12_untilloop
.1977	a9 00			lda  #0
.1979	ac 78 5c		ldy  p8v_lp
.197c	84 7e			sty  P8ZP_SCRATCH_W2
.197e	ac 79 5c		ldy  p8v_lp+1
.1981	84 7f			sty  P8ZP_SCRATCH_W2+1
.1983	92 7e			sta  (P8ZP_SCRATCH_W2)
.1985	a0 08			ldy  #>p8b_main.p8v_buffer
.1987	a9 26			lda  #<p8b_main.p8v_buffer
.1989	20 a8 55		jsr  p8b_labels.p8s_get_jmpaddress
.198c	8d 80 5c		sta  p8v_strb
.198f	8c 81 5c		sty  p8v_strb+1
.1992	92 22			sta  (p8b_main.p8v_pcode)
.1994	e6 22			inc  p8b_main.p8v_pcode
.1996	d0 02			bne  +
.1998	e6 23			inc  p8b_main.p8v_pcode+1
.199a			+
.199a	ad 81 5c		lda  p8v_strb+1
.199d	92 22			sta  (p8b_main.p8v_pcode)
.199f	e6 22			inc  p8b_main.p8v_pcode
.19a1	d0 02			bne  +
.19a3	e6 23			inc  p8b_main.p8v_pcode+1
.19a5			+
.19a5			p8l_label_153_celse
.19a5			label_asm_134_afterif
.19a5			label_asm_132_afterif
.19a5			label_asm_130_afterif
.19a5			label_asm_128_afterif
.19a5			label_asm_126_afterif
.19a5			label_asm_124_afterif
.19a5			label_asm_121_afterif
.19a5			label_asm_118_afterif
.19a5			label_asm_115_afterif
.19a5			label_asm_99_afterif
.19a5			label_asm_97_afterif
.19a5			label_asm_61_afterif
.19a5	ad 84 5c		lda  p8v_token
.19a8	c9 7f			cmp  #127
.19aa	f0 03			bne  p8l_label_14_untilloop
.19ac	4c 7a 10
.19af			p8l_label_13_after
.19af	a9 00			lda  #0
.19b1	60			rts
>5c76			p8v_index	.byte  ?
>5c77			p8v_infuncheader	.byte  ?
>5c78			p8v_lp	.word  ?
>5c7a			p8v_p_funcno	.byte  ?
>5c7b			p8v_paramcount	.byte  ?
>5c7c			p8v_pcodebase	.word  ?
>5c7e			p8v_rprgptr	.word  ?
>5c80			p8v_strb	.word  ?
>5c82			p8v_t1	.word  ?
>5c84			p8v_token	.byte  ?
>5c85			p8v_val	.word  ?
>19b2	30 44		p8v_auto_heap_value_5	.byte  $30, $44
.19b4			p8s_get_string
.19b4	8d 87 5c		sta  p8v_fname
.19b7	8c 88 5c		sty  p8v_fname+1
.19ba	8d 89 5c		sta  p8v_fptr
.19bd	8c 8a 5c		sty  p8v_fptr+1
.19c0	e6 22			inc  p8b_main.p8v_pcode
.19c2	d0 02			bne  +
.19c4	e6 23			inc  p8b_main.p8v_pcode+1
.19c6			+
.19c6			p8l_label_15_untilloop
.19c6	b2 22			lda  (p8b_main.p8v_pcode)
.19c8	ac 89 5c		ldy  p8v_fptr
.19cb	84 7e			sty  P8ZP_SCRATCH_W2
.19cd	ac 8a 5c		ldy  p8v_fptr+1
.19d0	84 7f			sty  P8ZP_SCRATCH_W2+1
.19d2	92 7e			sta  (P8ZP_SCRATCH_W2)
.19d4	e6 22			inc  p8b_main.p8v_pcode
.19d6	d0 02			bne  +
.19d8	e6 23			inc  p8b_main.p8v_pcode+1
.19da			+
.19da	ee 89 5c		inc  p8v_fptr
.19dd	d0 03			bne  +
.19df	ee 8a 5c		inc  p8v_fptr+1
.19e2			+
.19e2	b2 22			lda  (p8b_main.p8v_pcode)
.19e4	d0 e0			bne  p8l_label_15_untilloop
.19e6	a9 00			lda  #0
.19e8	ac 89 5c		ldy  p8v_fptr
.19eb	84 7e			sty  P8ZP_SCRATCH_W2
.19ed	ac 8a 5c		ldy  p8v_fptr+1
.19f0	84 7f			sty  P8ZP_SCRATCH_W2+1
.19f2	92 7e			sta  (P8ZP_SCRATCH_W2)
.19f4	60			rts
>5c87			p8v_fname	.word  ?
>5c89			p8v_fptr	.word  ?
.19f5			p8s_next
.19f5	9c 8b 5c		stz  p8v_token
.19f8	e6 22			inc  p8b_main.p8v_pcode
.19fa	d0 02			bne  +
.19fc	e6 23			inc  p8b_main.p8v_pcode+1
.19fe			+
.19fe	b2 22			lda  (p8b_main.p8v_pcode)
.1a00	8d 8b 5c		sta  p8v_token
.1a03	60			rts
>5c8b			p8v_token	.byte  ?
.1a04			p8s_tokenize_all
.1a04	9c 8c 5c		stz  p8v_e
.1a07	9c 8d 5c		stz  p8v_sbank
.1a0a	9c 61 5c		stz  p8b_main.p8v_linenr
.1a0d	9c 62 5c		stz  p8b_main.p8v_linenr+1
.1a10	a5 00		        lda  $00
.1a12	8d 8d 5c		sta  p8v_sbank
.1a15	a9 02			lda  #2
.1a17	85 00		        sta  $00
.1a19	a9 00			lda  #<$a000
.1a1b	a0 a0			ldy  #>$a000
.1a1d	8d 7e 5c		sta  p8b_main.p8s_tokenize.p8v_rprgptr
.1a20	8c 7f 5c		sty  p8b_main.p8s_tokenize.p8v_rprgptr+1
.1a23	ac 64 5c		ldy  p8b_main.p8v_pend+1
.1a26	ad 63 5c		lda  p8b_main.p8v_pend
.1a29	18			clc
.1a2a	69 a0			adc  #<$a0
.1a2c	aa			tax
.1a2d	98			tya
.1a2e	69 00			adc  #>$a0
.1a30	a8			tay
.1a31	8a			txa
.1a32	8d 7c 5c		sta  p8b_main.p8s_tokenize.p8v_pcodebase
.1a35	8c 7d 5c		sty  p8b_main.p8s_tokenize.p8v_pcodebase+1
.1a38	20 3d 10		jsr  p8b_main.p8s_tokenize
.1a3b	8d 8c 5c		sta  p8v_e
.1a3e	a9 7f			lda  #$7f
.1a40	92 22			sta  (p8b_main.p8v_pcode)
.1a42	a9 00			lda  #0
.1a44	a0 01			ldy  #1
.1a46	91 22			sta  (p8b_main.p8v_pcode),y
.1a48	ad 8d 5c		lda  p8v_sbank
.1a4b	85 00		        sta  $00
.1a4d	ad 85 68		lda  p8b_ifstack.p8v_isc
.1a50	f0 0b			beq  label_asm_135_afterif
.1a52	a9 04			lda  #4
.1a54	20 70 44		jsr  p8b_error.p8s_set
.1a57	20 7c 44		jsr  p8b_error.p8s_print
.1a5a	20 69 44		jsr  p8b_error.p8s_clear
.1a5d			label_asm_135_afterif
.1a5d	ad 5c 5c		lda  p8b_main.p8v_fstack
.1a60	0d 5d 5c		ora  p8b_main.p8v_fstack+1
.1a63	f0 0b			beq  label_asm_136_afterif
.1a65	a9 05			lda  #5
.1a67	20 70 44		jsr  p8b_error.p8s_set
.1a6a	20 7c 44		jsr  p8b_error.p8s_print
.1a6d	20 69 44		jsr  p8b_error.p8s_clear
.1a70			label_asm_136_afterif
.1a70	60			rts
>5c8c			p8v_e	.byte  ?
>5c8d			p8v_sbank	.byte  ?
.1a71			p8s_runl
.1a71	9c 8e 5c		stz  p8v_token
.1a74	ad 63 5c		lda  p8b_main.p8v_pend
.1a77	ac 64 5c		ldy  p8b_main.p8v_pend+1
.1a7a	85 22			sta  p8b_main.p8v_pcode
.1a7c	84 23			sty  p8b_main.p8v_pcode+1
.1a7e			p8l_label_19_repeat
.1a7e	b2 22			lda  (p8b_main.p8v_pcode)
.1a80	8d 8e 5c		sta  p8v_token
.1a83	c9 7f			cmp  #127
.1a85	f0 21			beq  p8l_label_16_after
.1a87	ad 8e 5c		lda  p8v_token
.1a8a	20 1d 1b		jsr  p8b_main.p8s_statement
.1a8d	ad 60 5d		lda  p8b_error.p8v_number
.1a90	f0 05			beq  label_asm_137_afterif
.1a92	20 7c 44		jsr  p8b_error.p8s_print
.1a95	80 11			bra  p8l_label_17_after
.1a97			label_asm_137_afterif
.1a97	b2 22			lda  (p8b_main.p8v_pcode)
.1a99	8d 8e 5c		sta  p8v_token
.1a9c	c9 7f			cmp  #127
.1a9e	f0 08			beq  p8l_label_18_after
.1aa0	e6 22			inc  p8b_main.p8v_pcode
.1aa2	d0 02			bne  +
.1aa4	e6 23			inc  p8b_main.p8v_pcode+1
.1aa6			+
.1aa6	80 d6			bra  p8l_label_19_repeat
.1aa8			p8l_label_18_after
.1aa8			p8l_label_17_after
.1aa8			p8l_label_16_after
.1aa8	60			rts
>5c8e			p8v_token	.byte  ?
.1aa9			p8s_runp
.1aa9	9c 91 5c		stz  p8v_token
.1aac	a5 22			lda  p8b_main.p8v_pcode
.1aae	a4 23			ldy  p8b_main.p8v_pcode+1
.1ab0	8d 8f 5c		sta  p8v_ocode
.1ab3	8c 90 5c		sty  p8v_ocode+1
.1ab6	ac 64 5c		ldy  p8b_main.p8v_pend+1
.1ab9	ad 63 5c		lda  p8b_main.p8v_pend
.1abc	18			clc
.1abd	69 a0			adc  #<$a0
.1abf	aa			tax
.1ac0	98			tya
.1ac1	69 00			adc  #>$a0
.1ac3	a8			tay
.1ac4	8a			txa
.1ac5	85 22			sta  p8b_main.p8v_pcode
.1ac7	84 23			sty  p8b_main.p8v_pcode+1
.1ac9	9c 85 68		stz  p8b_ifstack.p8v_isc
.1acc	9c ae 68		stz  p8b_funcstack.p8v_fsc
.1acf	9c 73 69		stz  p8b_forstack.p8v_osc
.1ad2	64 2f			stz  p8b_varstack.p8v_vsc
.1ad4	9c b1 69		stz  p8b_callstack_b.p8v_cbsc
.1ad7	9c b4 6a		stz  p8b_callstack_w.p8v_cwsc
.1ada			p8l_label_21_repeat
.1ada	b2 22			lda  (p8b_main.p8v_pcode)
.1adc	8d 91 5c		sta  p8v_token
.1adf	c9 7f			cmp  #127
.1ae1	d0 04			bne  label_asm_140_else
.1ae3	a9 01		  lda  #1
.1ae5	80 02			bra  label_asm_139_afterif
.1ae7			label_asm_140_else
.1ae7	a9 00		  lda  #0
.1ae9			label_asm_139_afterif
.1ae9	d0 0b			bne  label_asm_138_shortcut
.1aeb	20 e1 ff	        jsr  cbm.STOP
.1aee	f0 04			beq  +
.1af0	a9 00			lda  #0
.1af2	f0 02			beq  ++
.1af4	a9 01		+                   lda  #1
.1af6			+
.1af6			label_asm_138_shortcut
.1af6	d0 0e			bne  p8l_label_20_after
.1af8	ad 91 5c		lda  p8v_token
.1afb	20 1d 1b		jsr  p8b_main.p8s_statement
.1afe	e6 22			inc  p8b_main.p8v_pcode
.1b00	d0 02			bne  +
.1b02	e6 23			inc  p8b_main.p8v_pcode+1
.1b04			+
.1b04	80 d4			bra  p8l_label_21_repeat
.1b06			p8l_label_20_after
.1b06	a0 20			ldy  #>prog8_interned_strings.string_1
.1b08	a9 01			lda  #<prog8_interned_strings.string_1
.1b0a	20 32 24		jsr  txt.print
.1b0d	a9 0d			lda  #13
.1b0f	20 d2 ff		jsr  txt.chrout
.1b12	ad 8f 5c		lda  p8v_ocode
.1b15	ac 90 5c		ldy  p8v_ocode+1
.1b18	85 22			sta  p8b_main.p8v_pcode
.1b1a	84 23			sty  p8b_main.p8v_pcode+1
.1b1c	60			rts
>5c8f			p8v_ocode	.word  ?
>5c91			p8v_token	.byte  ?
.1b1d			p8s_statement
.1b1d	8d 99 5c		sta  p8v_token
.1b20	9c 98 5c		stz  p8v_status
.1b23	9c 93 5c		stz  p8v_line
.1b26	9c 94 5c		stz  p8v_line+1
.1b29	9c 92 5c		stz  p8v_l
.1b2c	9c 95 5c		stz  p8v_m
.1b2f	ad 67 5c		lda  p8b_main.p8v_trace
.1b32	c9 01			cmp  #1
.1b34	d0 13			bne  label_asm_141_afterif
.1b36	a9 28			lda  #$28
.1b38	20 d2 ff		jsr  txt.chrout
.1b3b	a0 00			ldy  #0
.1b3d	ad 99 5c		lda  p8v_token
.1b40	38			sec
.1b41	20 56 24		jsr  txt.print_uwhex
.1b44	a9 29			lda  #$29
.1b46	20 d2 ff		jsr  txt.chrout
.1b49			label_asm_141_afterif
.1b49	ad 99 5c		lda  p8v_token
.1b4c	c9 75			cmp  #117
.1b4e	d0 06			bne  label_asm_143_else
.1b50	20 2a 2a		jsr  p8b_runcmd.p8s_do_cls
.1b53	4c e3 1d		bra  label_asm_142_afterif
.1b56			label_asm_143_else
.1b56	ad 99 5c		lda  p8v_token
.1b59	48			pha
.1b5a	a9 e4			lda  #<p8v_auto_heap_value_6
.1b5c	a0 1d			ldy  #>p8v_auto_heap_value_6
.1b5e	85 7c			sta  P8ZP_SCRATCH_W1
.1b60	84 7d			sty  P8ZP_SCRATCH_W1+1
.1b62	68			pla
.1b63	a0 04			ldy  #4
.1b65	20 4a 5c		jsr  prog8_lib.containment_bytearray
.1b68	c9 00			cmp  #0
.1b6a	f0 08			beq  label_asm_145_else
.1b6c	a9 00			lda  #0
.1b6e	20 6c 43		jsr  p8b_runlang.p8s_do_let
.1b71	4c e3 1d		bra  label_asm_144_afterif
.1b74			label_asm_145_else
.1b74	ad 99 5c		lda  p8v_token
.1b77	48			pha
.1b78	a9 e8			lda  #<p8v_auto_heap_value_7
.1b7a	a0 1d			ldy  #>p8v_auto_heap_value_7
.1b7c	85 7c			sta  P8ZP_SCRATCH_W1
.1b7e	84 7d			sty  P8ZP_SCRATCH_W1+1
.1b80	68			pla
.1b81	a0 02			ldy  #2
.1b83	20 4a 5c		jsr  prog8_lib.containment_bytearray
.1b86	c9 00			cmp  #0
.1b88	f0 08			beq  label_asm_147_else
.1b8a	a9 01			lda  #1
.1b8c	20 6c 43		jsr  p8b_runlang.p8s_do_let
.1b8f	4c e3 1d		bra  label_asm_146_afterif
.1b92			label_asm_147_else
.1b92	ad 99 5c		lda  p8v_token
.1b95	c9 35			cmp  #53
.1b97	d0 08			bne  label_asm_149_else
.1b99	a9 02			lda  #2
.1b9b	20 6c 43		jsr  p8b_runlang.p8s_do_let
.1b9e	4c e3 1d		bra  label_asm_148_afterif
.1ba1			label_asm_149_else
.1ba1	ad 99 5c		lda  p8v_token
.1ba4	c9 34			cmp  #52
.1ba6	d0 08			bne  label_asm_151_else
.1ba8	a9 00			lda  #0
.1baa	20 f4 41		jsr  p8b_runlang.p8s_do_array
.1bad	4c e3 1d		bra  label_asm_150_afterif
.1bb0			label_asm_151_else
.1bb0	ad 99 5c		lda  p8v_token
.1bb3	c9 b4			cmp  #180
.1bb5	d0 08			bne  label_asm_153_else
.1bb7	a9 01			lda  #1
.1bb9	20 f4 41		jsr  p8b_runlang.p8s_do_array
.1bbc	4c e3 1d		bra  label_asm_152_afterif
.1bbf			label_asm_153_else
.1bbf	ad 99 5c		lda  p8v_token
.1bc2	c9 01			cmp  #1
.1bc4	d0 06			bne  label_asm_155_else
.1bc6	20 5d 40		jsr  p8b_runlang.p8s_do_func
.1bc9	4c e3 1d		bra  label_asm_154_afterif
.1bcc			label_asm_155_else
.1bcc	ad 99 5c		lda  p8v_token
.1bcf	c9 47			cmp  #71
.1bd1	d0 08			bne  label_asm_157_else
.1bd3	a9 00			lda  #0
.1bd5	20 f7 3d		jsr  p8b_runlang.p8s_do_callfunc
.1bd8	4c e3 1d		bra  label_asm_156_afterif
.1bdb			label_asm_157_else
.1bdb	ad 99 5c		lda  p8v_token
.1bde	c9 02			cmp  #2
.1be0	d0 06			bne  label_asm_159_else
.1be2	20 94 40		jsr  p8b_runlang.p8s_do_endfunc
.1be5	4c e3 1d		bra  label_asm_158_afterif
.1be8			label_asm_159_else
.1be8	ad 99 5c		lda  p8v_token
.1beb	c9 06			cmp  #6
.1bed	d0 06			bne  label_asm_161_else
.1bef	20 05 41		jsr  p8b_runlang.p8s_do_if
.1bf2	4c e3 1d		bra  label_asm_160_afterif
.1bf5			label_asm_161_else
.1bf5	ad 99 5c		lda  p8v_token
.1bf8	c9 07			cmp  #7
.1bfa	d0 06			bne  label_asm_163_else
.1bfc	20 d8 41		jsr  p8b_runlang.p8s_do_then
.1bff	4c e3 1d		bra  label_asm_162_afterif
.1c02			label_asm_163_else
.1c02	ad 99 5c		lda  p8v_token
.1c05	c9 19			cmp  #25
.1c07	d0 48			bne  label_asm_165_else
.1c09	e6 22			inc  p8b_main.p8v_pcode
.1c0b	d0 02			bne  +
.1c0d	e6 23			inc  p8b_main.p8v_pcode+1
.1c0f			+
.1c0f	ad 67 5c		lda  p8b_main.p8v_trace
.1c12	c9 01			cmp  #1
.1c14	d0 32			bne  label_asm_167_else
.1c16	b2 22			lda  (p8b_main.p8v_pcode)
.1c18	8d 92 5c		sta  p8v_l
.1c1b	e6 22			inc  p8b_main.p8v_pcode
.1c1d	d0 02			bne  +
.1c1f	e6 23			inc  p8b_main.p8v_pcode+1
.1c21			+
.1c21	b2 22			lda  (p8b_main.p8v_pcode)
.1c23	8d 95 5c		sta  p8v_m
.1c26	ad 92 5c		lda  p8v_l
.1c29	ac 95 5c		ldy  p8v_m
.1c2c	8d 93 5c		sta  p8v_line
.1c2f	8c 94 5c		sty  p8v_line+1
.1c32	a9 5b			lda  #$5b
.1c34	20 d2 ff		jsr  txt.chrout
.1c37	ac 94 5c		ldy  p8v_line+1
.1c3a	ad 93 5c		lda  p8v_line
.1c3d	38			sec
.1c3e	20 56 24		jsr  txt.print_uwhex
.1c41	a9 5d			lda  #$5d
.1c43	20 d2 ff		jsr  txt.chrout
.1c46	80 06			bra  label_asm_166_afterif
.1c48			label_asm_167_else
.1c48	e6 22			inc  p8b_main.p8v_pcode
.1c4a	d0 02			bne  +
.1c4c	e6 23			inc  p8b_main.p8v_pcode+1
.1c4e			+
.1c4e			label_asm_166_afterif
.1c4e	4c e3 1d		bra  label_asm_164_afterif
.1c51			label_asm_165_else
.1c51	ad 99 5c		lda  p8v_token
.1c54	c9 08			cmp  #8
.1c56	d0 06			bne  label_asm_169_else
.1c58	20 e0 41		jsr  p8b_runlang.p8s_do_else
.1c5b	4c e3 1d		bra  label_asm_168_afterif
.1c5e			label_asm_169_else
.1c5e	ad 99 5c		lda  p8v_token
.1c61	c9 09			cmp  #9
.1c63	d0 06			bne  label_asm_171_else
.1c65	20 79 59		jsr  p8b_ifstack.p8s_pope
.1c68	4c e3 1d		bra  label_asm_170_afterif
.1c6b			label_asm_171_else
.1c6b	ad 99 5c		lda  p8v_token
.1c6e	c9 04			cmp  #4
.1c70	d0 06			bne  label_asm_173_else
.1c72	20 ef 3b		jsr  p8b_runlang.p8s_do_for
.1c75	4c e3 1d		bra  label_asm_172_afterif
.1c78			label_asm_173_else
.1c78	ad 99 5c		lda  p8v_token
.1c7b	c9 45			cmp  #69
.1c7d	d0 06			bne  label_asm_175_else
.1c7f	20 d7 3c		jsr  p8b_runlang.p8s_do_next
.1c82	4c e3 1d		bra  label_asm_174_afterif
.1c85			label_asm_175_else
.1c85	ad 99 5c		lda  p8v_token
.1c88	c9 18			cmp  #24
.1c8a	d0 0e			bne  label_asm_177_else
.1c8c	20 f8 2f		jsr  p8b_runcmd.p8s_do_print
.1c8f	a5 22			lda  p8b_main.p8v_pcode
.1c91	d0 02			bne  +
.1c93	c6 23			dec  p8b_main.p8v_pcode+1
.1c95	c6 22		+                           dec  p8b_main.p8v_pcode
.1c97	4c e3 1d		bra  label_asm_176_afterif
.1c9a			label_asm_177_else
.1c9a	ad 99 5c		lda  p8v_token
.1c9d	c9 70			cmp  #112
.1c9f	d0 06			bne  label_asm_179_else
.1ca1	20 6d 45		jsr  p8b_rundos.p8s_do_list
.1ca4	4c e3 1d		bra  label_asm_178_afterif
.1ca7			label_asm_179_else
.1ca7	ad 99 5c		lda  p8v_token
.1caa	c9 17			cmp  #23
.1cac	d0 06			bne  label_asm_181_else
.1cae	20 c5 3d		jsr  p8b_runlang.p8s_do_goto
.1cb1	4c e3 1d		bra  label_asm_180_afterif
.1cb4			label_asm_181_else
.1cb4	ad 99 5c		lda  p8v_token
.1cb7	c9 16			cmp  #22
.1cb9	d0 09			bne  label_asm_183_else
.1cbb	e6 22			inc  p8b_main.p8v_pcode
.1cbd	d0 02			bne  +
.1cbf	e6 23			inc  p8b_main.p8v_pcode+1
.1cc1			+
.1cc1	4c e3 1d		bra  label_asm_182_afterif
.1cc4			label_asm_183_else
.1cc4	ad 99 5c		lda  p8v_token
.1cc7	c9 49			cmp  #73
.1cc9	d0 06			bne  label_asm_185_else
.1ccb	20 c2 2b		jsr  p8b_runcmd.p8s_do_poke
.1cce	4c e3 1d		bra  label_asm_184_afterif
.1cd1			label_asm_185_else
.1cd1	ad 99 5c		lda  p8v_token
.1cd4	c9 4b			cmp  #75
.1cd6	d0 06			bne  label_asm_187_else
.1cd8	20 3d 2c		jsr  p8b_runcmd.p8s_do_vpoke
.1cdb	4c e3 1d		bra  label_asm_186_afterif
.1cde			label_asm_187_else
.1cde	ad 99 5c		lda  p8v_token
.1ce1	c9 4c			cmp  #76
.1ce3	d0 06			bne  label_asm_189_else
.1ce5	20 1e 2a		jsr  p8b_runcmd.p8s_do_flupp
.1ce8	4c e3 1d		bra  label_asm_188_afterif
.1ceb			label_asm_189_else
.1ceb	ad 99 5c		lda  p8v_token
.1cee	c9 be			cmp  #190
.1cf0	d0 06			bne  label_asm_191_else
.1cf2	20 fa 2c		jsr  p8b_runcmd.p8s_do_setchr
.1cf5	4c e3 1d		bra  label_asm_190_afterif
.1cf8			label_asm_191_else
.1cf8	ad 99 5c		lda  p8v_token
.1cfb	c9 c9			cmp  #201
.1cfd	d0 06			bne  label_asm_193_else
.1cff	20 45 2d		jsr  p8b_runcmd.p8s_do_setclr
.1d02	4c e3 1d		bra  label_asm_192_afterif
.1d05			label_asm_193_else
.1d05	ad 99 5c		lda  p8v_token
.1d08	c9 bc			cmp  #188
.1d0a	d0 06			bne  label_asm_195_else
.1d0c	20 95 2c		jsr  p8b_runcmd.p8s_do_color
.1d0f	4c e3 1d		bra  label_asm_194_afterif
.1d12			label_asm_195_else
.1d12	ad 99 5c		lda  p8v_token
.1d15	c9 bd			cmp  #189
.1d17	d0 06			bne  label_asm_197_else
.1d19	20 90 2d		jsr  p8b_runcmd.p8s_do_locate
.1d1c	4c e3 1d		bra  label_asm_196_afterif
.1d1f			label_asm_197_else
.1d1f	ad 99 5c		lda  p8v_token
.1d22	c9 cb			cmp  #203
.1d24	d0 06			bne  label_asm_199_else
.1d26	20 c9 2d		jsr  p8b_runcmd.p8s_do_graph
.1d29	4c e3 1d		bra  label_asm_198_afterif
.1d2c			label_asm_199_else
.1d2c	ad 99 5c		lda  p8v_token
.1d2f	c9 cc			cmp  #204
.1d31	d0 06			bne  label_asm_201_else
.1d33	20 32 2e		jsr  p8b_runcmd.p8s_do_line
.1d36	4c e3 1d		bra  label_asm_200_afterif
.1d39			label_asm_201_else
.1d39	ad 99 5c		lda  p8v_token
.1d3c	c9 cd			cmp  #205
.1d3e	d0 06			bne  label_asm_203_else
.1d40	20 b3 2e		jsr  p8b_runcmd.p8s_do_rect
.1d43	4c e3 1d		bra  label_asm_202_afterif
.1d46			label_asm_203_else
.1d46	ad 99 5c		lda  p8v_token
.1d49	c9 ce			cmp  #206
.1d4b	d0 06			bne  label_asm_205_else
.1d4d	20 0e 2e		jsr  p8b_runcmd.p8s_do_wait
.1d50	4c e3 1d		bra  label_asm_204_afterif
.1d53			label_asm_205_else
.1d53	ad 99 5c		lda  p8v_token
.1d56	c9 76			cmp  #118
.1d58	d0 08			bne  label_asm_207_else
.1d5a	a9 01			lda  #1
.1d5c	8d 67 5c		sta  p8b_main.p8v_trace
.1d5f	4c e3 1d		bra  label_asm_206_afterif
.1d62			label_asm_207_else
.1d62	ad 99 5c		lda  p8v_token
.1d65	c9 77			cmp  #119
.1d67	d0 05			bne  label_asm_209_else
.1d69	9c 67 5c		stz  p8b_main.p8v_trace
.1d6c	80 75			bra  label_asm_208_afterif
.1d6e			label_asm_209_else
.1d6e	ad 99 5c		lda  p8v_token
.1d71	c9 cf			cmp  #207
.1d73	d0 05			bne  label_asm_211_else
.1d75	20 9f 2f		jsr  p8b_runcmd.p8s_do_plot
.1d78	80 69			bra  label_asm_210_afterif
.1d7a			label_asm_211_else
.1d7a	ad 99 5c		lda  p8v_token
.1d7d	c9 74			cmp  #116
.1d7f	d0 40			bne  label_asm_213_else
.1d81	20 b2 44		jsr  p8b_rundos.p8s_do_load
.1d84	8d 98 5c		sta  p8v_status
.1d87	ad 98 5c		lda  p8v_status
.1d8a	d0 33			bne  label_asm_214_afterif
.1d8c	20 04 1a		jsr  p8b_main.p8s_tokenize_all
.1d8f	a5 22			lda  p8b_main.p8v_pcode
.1d91	85 7c			sta  P8ZP_SCRATCH_W1
.1d93	a5 23			lda  p8b_main.p8v_pcode+1
.1d95	85 7d			sta  P8ZP_SCRATCH_W1+1
.1d97	a0 9e			ldy  #>-$6101
.1d99	a9 ff			lda  #<-$6101
.1d9b	38			sec
.1d9c	e5 7c			sbc  P8ZP_SCRATCH_W1
.1d9e	aa			tax
.1d9f	98			tya
.1da0	e5 7d			sbc  P8ZP_SCRATCH_W1+1
.1da2	a8			tay
.1da3	8a			txa
.1da4	8d 96 5c		sta  p8v_mem
.1da7	8c 97 5c		sty  p8v_mem+1
.1daa	a0 20			ldy  #>prog8_interned_strings.string_4
.1dac	a9 aa			lda  #<prog8_interned_strings.string_4
.1dae	20 32 24		jsr  txt.print
.1db1	ac 97 5c		ldy  p8v_mem+1
.1db4	ad 96 5c		lda  p8v_mem
.1db7	20 60 24		jsr  txt.print_uw
.1dba	a9 0d			lda  #13
.1dbc	20 d2 ff		jsr  txt.chrout
.1dbf			label_asm_214_afterif
.1dbf	80 22			bra  label_asm_212_afterif
.1dc1			label_asm_213_else
.1dc1	ad 99 5c		lda  p8v_token
.1dc4	c9 72			cmp  #114
.1dc6	d0 05			bne  label_asm_216_else
.1dc8	20 a2 46		jsr  p8b_rundos.p8s_do_edit
.1dcb	80 16			bra  label_asm_215_afterif
.1dcd			label_asm_216_else
.1dcd	ad 99 5c		lda  p8v_token
.1dd0	c9 73			cmp  #115
.1dd2	d0 05			bne  label_asm_218_else
.1dd4	20 f9 45		jsr  p8b_rundos.p8s_do_dir
.1dd7	80 0a			bra  label_asm_217_afterif
.1dd9			label_asm_218_else
.1dd9	ad 99 5c		lda  p8v_token
.1ddc	c9 71			cmp  #113
.1dde	d0 03			bne  label_asm_219_afterif
.1de0	20 a9 1a		jsr  p8b_main.p8s_runp
.1de3			label_asm_219_afterif
.1de3			label_asm_217_afterif
.1de3			label_asm_215_afterif
.1de3			label_asm_212_afterif
.1de3			label_asm_210_afterif
.1de3			label_asm_208_afterif
.1de3			label_asm_206_afterif
.1de3			label_asm_204_afterif
.1de3			label_asm_202_afterif
.1de3			label_asm_200_afterif
.1de3			label_asm_198_afterif
.1de3			label_asm_196_afterif
.1de3			label_asm_194_afterif
.1de3			label_asm_192_afterif
.1de3			label_asm_190_afterif
.1de3			label_asm_188_afterif
.1de3			label_asm_186_afterif
.1de3			label_asm_184_afterif
.1de3			label_asm_182_afterif
.1de3			label_asm_180_afterif
.1de3			label_asm_178_afterif
.1de3			label_asm_176_afterif
.1de3			label_asm_174_afterif
.1de3			label_asm_172_afterif
.1de3			label_asm_170_afterif
.1de3			label_asm_168_afterif
.1de3			label_asm_164_afterif
.1de3			label_asm_162_afterif
.1de3			label_asm_160_afterif
.1de3			label_asm_158_afterif
.1de3			label_asm_156_afterif
.1de3			label_asm_154_afterif
.1de3			label_asm_152_afterif
.1de3			label_asm_150_afterif
.1de3			label_asm_148_afterif
.1de3			label_asm_146_afterif
.1de3			label_asm_144_afterif
.1de3			label_asm_142_afterif
.1de3	60			rts
>5c92			p8v_l	.byte  ?
>5c93			p8v_line	.word  ?
>5c95			p8v_m	.byte  ?
>5c96			p8v_mem	.word  ?
>5c98			p8v_status	.byte  ?
>5c99			p8v_token	.byte  ?
>1de4	30 44 b0 c4	p8v_auto_heap_value_6	.byte  $30, $44, $b0, $c4
>1de8	2e ae		p8v_auto_heap_value_7	.byte  $2e, $ae
.1dea			p8s_singlechar
.1dea	8d 9a 5c		sta  p8v_ptr
.1ded	c9 0a			cmp  #10
.1def	d0 03			bne  label_asm_220_afterif
.1df1	a9 19			lda  #$19
.1df3	60			rts
.1df4			label_asm_220_afterif
.1df4	ad 9a 5c		lda  p8v_ptr
.1df7	c9 2c			cmp  #44
.1df9	d0 03			bne  label_asm_221_afterif
.1dfb	a9 1a			lda  #$1a
.1dfd	60			rts
.1dfe			label_asm_221_afterif
.1dfe	ad 9a 5c		lda  p8v_ptr
.1e01	c9 3b			cmp  #59
.1e03	d0 03			bne  label_asm_222_afterif
.1e05	a9 1b			lda  #$1b
.1e07	60			rts
.1e08			label_asm_222_afterif
.1e08	ad 9a 5c		lda  p8v_ptr
.1e0b	c9 2b			cmp  #43
.1e0d	d0 03			bne  label_asm_223_afterif
.1e0f	a9 1c			lda  #$1c
.1e11	60			rts
.1e12			label_asm_223_afterif
.1e12	ad 9a 5c		lda  p8v_ptr
.1e15	c9 2d			cmp  #45
.1e17	d0 03			bne  label_asm_224_afterif
.1e19	a9 1d			lda  #$1d
.1e1b	60			rts
.1e1c			label_asm_224_afterif
.1e1c	ad 9a 5c		lda  p8v_ptr
.1e1f	c9 7c			cmp  #124
.1e21	d0 03			bne  label_asm_225_afterif
.1e23	a9 1e			lda  #$1e
.1e25	60			rts
.1e26			label_asm_225_afterif
.1e26	ad 9a 5c		lda  p8v_ptr
.1e29	c9 2a			cmp  #42
.1e2b	d0 03			bne  label_asm_226_afterif
.1e2d	a9 1f			lda  #$1f
.1e2f	60			rts
.1e30			label_asm_226_afterif
.1e30	ad 9a 5c		lda  p8v_ptr
.1e33	c9 2f			cmp  #47
.1e35	d0 03			bne  label_asm_227_afterif
.1e37	a9 20			lda  #$20
.1e39	60			rts
.1e3a			label_asm_227_afterif
.1e3a	ad 9a 5c		lda  p8v_ptr
.1e3d	c9 25			cmp  #37
.1e3f	d0 03			bne  label_asm_228_afterif
.1e41	a9 21			lda  #$21
.1e43	60			rts
.1e44			label_asm_228_afterif
.1e44	ad 9a 5c		lda  p8v_ptr
.1e47	c9 28			cmp  #40
.1e49	d0 03			bne  label_asm_229_afterif
.1e4b	a9 22			lda  #$22
.1e4d	60			rts
.1e4e			label_asm_229_afterif
.1e4e	ad 9a 5c		lda  p8v_ptr
.1e51	c9 5b			cmp  #91
.1e53	d0 03			bne  label_asm_230_afterif
.1e55	a9 23			lda  #$23
.1e57	60			rts
.1e58			label_asm_230_afterif
.1e58	ad 9a 5c		lda  p8v_ptr
.1e5b	c9 5d			cmp  #93
.1e5d	d0 03			bne  label_asm_231_afterif
.1e5f	a9 24			lda  #$24
.1e61	60			rts
.1e62			label_asm_231_afterif
.1e62	ad 9a 5c		lda  p8v_ptr
.1e65	c9 23			cmp  #35
.1e67	d0 03			bne  label_asm_232_afterif
.1e69	a9 25			lda  #$25
.1e6b	60			rts
.1e6c			label_asm_232_afterif
.1e6c	ad 9a 5c		lda  p8v_ptr
.1e6f	c9 29			cmp  #41
.1e71	d0 03			bne  label_asm_233_afterif
.1e73	a9 26			lda  #$26
.1e75	60			rts
.1e76			label_asm_233_afterif
.1e76	ad 9a 5c		lda  p8v_ptr
.1e79	c9 3c			cmp  #60
.1e7b	d0 03			bne  label_asm_234_afterif
.1e7d	a9 27			lda  #$27
.1e7f	60			rts
.1e80			label_asm_234_afterif
.1e80	ad 9a 5c		lda  p8v_ptr
.1e83	c9 3e			cmp  #62
.1e85	d0 03			bne  label_asm_235_afterif
.1e87	a9 28			lda  #$28
.1e89	60			rts
.1e8a			label_asm_235_afterif
.1e8a	ad 9a 5c		lda  p8v_ptr
.1e8d	c9 3d			cmp  #61
.1e8f	d0 03			bne  label_asm_236_afterif
.1e91	a9 29			lda  #$29
.1e93	60			rts
.1e94			label_asm_236_afterif
.1e94	ad 9a 5c		lda  p8v_ptr
.1e97	c9 24			cmp  #36
.1e99	d0 03			bne  label_asm_237_afterif
.1e9b	a9 2a			lda  #$2a
.1e9d	60			rts
.1e9e			label_asm_237_afterif
.1e9e	a9 00			lda  #0
.1ea0	60			rts
>5c9a			p8v_ptr	.byte  ?
.1ea1			prog8_init_vars
.1ea1	64 22			stz  p8b_main.p8v_pcode
.1ea3	64 23			stz  p8b_main.p8v_pcode+1
.1ea5	a9 05			lda  #5
.1ea7	8d 5b 5c		sta  p8b_main.p8v_fgcolor
.1eaa	60			rts
.1eab			p8b_consts
.1eab			p8v_DELIMITERCHAR
>1eab	20 3d 2c 3b		.byte  $20, $3d, $2c, $3b, $23, $28, $29, $5d, $2a, $2f, $2d, $2b, $25, $26, $3e, $3c
>1eaf	23 28 29 5d 2a 2f 2d 2b 25 26 3e 3c
>1ebb	00			.byte  $00
.1ebc			p8b_statements
.1ebc			p8v_statements_table
>1ebc	07 20 70 00		.word  prog8_interned_strings.string_12, $0070, prog8_interned_strings.string_13, $0071, prog8_interned_strings.string_14, $0072, prog8_interned_strings.string_15, $0073, prog8_interned_strings.string_16, $0074, prog8_interned_strings.string_17, $0075, prog8_interned_strings.string_18, $0001, prog8_interned_strings.string_19, $0002
>1ec0	0c 20 71 00 10 20 72 00 15 20 73 00 19 20 74 00
>1ed0	1e 20 75 00 22 20 01 00 27 20 02 00
>1edc	3d 20 03 00		.word  prog8_interned_strings.string_20, $0003, prog8_interned_strings.string_21, $0004, prog8_interned_strings.string_22, $0005, prog8_interned_strings.string_23, $0006, prog8_interned_strings.string_24, $0007, prog8_interned_strings.string_25, $0008, prog8_interned_strings.string_26, $0009, prog8_interned_strings.string_27, $000a
>1ee0	43 20 04 00 47 20 05 00 4d 20 06 00 50 20 07 00
>1ef0	55 20 08 00 5a 20 09 00 60 20 0a 00
>1efc	64 20 0b 00		.word  prog8_interned_strings.string_28, $000b, prog8_interned_strings.string_29, $000c, prog8_interned_strings.string_30, $000d, prog8_interned_strings.string_31, $000e, prog8_interned_strings.string_32, $000f, prog8_interned_strings.string_33, $0010, prog8_interned_strings.string_34, $0011, prog8_interned_strings.string_35, $0012
>1f00	67 20 0c 00 79 20 0d 00 7d 20 0e 00 82 20 0f 00
>1f10	88 20 10 00 8b 20 11 00 91 20 12 00
>1f1c	98 20 13 00		.word  prog8_interned_strings.string_36, $0013, prog8_interned_strings.string_37, $0014, prog8_interned_strings.string_38, $0015, prog8_interned_strings.string_39, $0017, prog8_interned_strings.string_40, $0018, prog8_interned_strings.string_41, $002b, prog8_interned_strings.string_42, $0043, prog8_interned_strings.string_43, $0045
>1f20	9e 20 14 00 a2 20 15 00 a5 20 17 00 b8 20 18 00
>1f30	be 20 2b 00 c5 20 43 00 c8 20 45 00
>1f3c	cd 20 46 00		.word  prog8_interned_strings.string_44, $0046, prog8_interned_strings.string_45, $0048, prog8_interned_strings.string_46, $0049, prog8_interned_strings.string_47, $004a, prog8_interned_strings.string_48, $004b, prog8_interned_strings.string_49, $004c, prog8_interned_strings.string_50, $004d, prog8_interned_strings.string_51, $00ba
>1f40	d2 20 48 00 d7 20 49 00 dc 20 4a 00 e2 20 4b 00
>1f50	e8 20 4c 00 01 21 4d 00 07 21 ba 00
>1f5c	0b 21 bb 00		.word  prog8_interned_strings.string_52, $00bb, prog8_interned_strings.string_53, $00bc, prog8_interned_strings.string_54, $00bd, prog8_interned_strings.string_55, $00be, prog8_interned_strings.string_56, $00c9, prog8_interned_strings.string_57, $00bf, prog8_interned_strings.string_58, $00c0, prog8_interned_strings.string_59, $00c1
>1f60	0f 21 bc 00 15 21 bd 00 1c 21 be 00 23 21 c9 00
>1f70	2a 21 bf 00 30 21 c0 00 35 21 c1 00
>1f7c	44 21 c2 00		.word  prog8_interned_strings.string_60, $00c2, prog8_interned_strings.string_61, $00c3, prog8_interned_strings.string_62, $00ca, prog8_interned_strings.string_63, $00c5, prog8_interned_strings.string_64, $00c6, prog8_interned_strings.string_65, $00c8, prog8_interned_strings.string_62, $00ca, prog8_interned_strings.string_66, $00cb
>1f80	48 21 c3 00 4d 21 ca 00 51 21 c5 00 55 21 c6 00
>1f90	59 21 c8 00 4d 21 ca 00 5d 21 cb 00
>1f9c	63 21 cc 00		.word  prog8_interned_strings.string_67, $00cc, prog8_interned_strings.string_68, $00cd, prog8_interned_strings.string_69, $00ce, prog8_interned_strings.string_70, $00cf, prog8_interned_strings.string_71, $00d0, prog8_interned_strings.string_72, $00d1, prog8_interned_strings.string_73, $0076, prog8_interned_strings.string_74, $0077
>1fa0	68 21 cd 00 6d 21 ce 00 75 21 cf 00 7a 21 d0 00
>1fb0	80 21 d1 00 85 21 76 00 8a 21 77 00
.1fbc			p8s_get
=52			p8v_statement 	= 52 	; zp UWORD
=54			p8v_i 	= 54 	; zp UBYTE
.1fbc	85 34			sta  p8v_statement
.1fbe	84 35			sty  p8v_statement+1
.1fc0	a9 00			lda  #0
.1fc2	85 36			sta  p8v_i
.1fc4			label_asm_238_for_loop
.1fc4	a5 34			lda  p8v_statement
.1fc6	85 02			sta  cx16.r0
.1fc8	a5 35			lda  p8v_statement+1
.1fca	85 03			sta  cx16.r0+1
.1fcc	a5 36			lda  p8v_i
.1fce	0a			asl  a
.1fcf	a8			tay
.1fd0	b9 bc 1e		lda  p8b_statements.p8v_statements_table,y
.1fd3	be bd 1e		ldx  p8b_statements.p8v_statements_table+1,y
.1fd6	86 7b			stx  P8ZP_SCRATCH_REG
.1fd8	a4 7b			ldy  P8ZP_SCRATCH_REG
.1fda	20 8c 28		jsr  string.compare
.1fdd	c9 00			cmp  #0
.1fdf	d0 12			bne  label_asm_240_afterif
.1fe1	a5 36			lda  p8v_i
.1fe3	18			clc
.1fe4	69 01			adc  #1
.1fe6	0a			asl  a
.1fe7	a8			tay
.1fe8	b9 bc 1e		lda  p8b_statements.p8v_statements_table,y
.1feb	be bd 1e		ldx  p8b_statements.p8v_statements_table+1,y
.1fee	86 7b			stx  P8ZP_SCRATCH_REG
.1ff0	a4 7b			ldy  P8ZP_SCRATCH_REG
.1ff2	60			rts
.1ff3			label_asm_240_afterif
.1ff3	e6 36			inc  p8v_i
.1ff5	e6 36			inc  p8v_i
.1ff7	a5 36			lda  p8v_i
.1ff9	c9 80			cmp  #128
.1ffb	d0 c7			bne  label_asm_238_for_loop
.1ffd			label_asm_239_for_end
.1ffd	a9 00			lda  #0
.1fff	a8			tay
.2000	60			rts
.2001			prog8_interned_strings
.2001			string_1
>2001	52 65 61 64		.byte  $52, $65, $61, $64, $79, $00
>2005	79 00
.2007			string_12
>2007	6c 69 73 74		.byte  $6c, $69, $73, $74, $00
>200b	00
.200c			string_13
>200c	72 75 6e 00		.byte  $72, $75, $6e, $00
.2010			string_14
>2010	65 64 69 74		.byte  $65, $64, $69, $74, $00
>2014	00
.2015			string_15
>2015	64 69 72 00		.byte  $64, $69, $72, $00
.2019			string_16
>2019	6c 6f 61 64		.byte  $6c, $6f, $61, $64, $00
>201d	00
.201e			string_17
>201e	63 6c 73 00		.byte  $63, $6c, $73, $00
.2022			string_18
>2022	66 75 6e 63		.byte  $66, $75, $6e, $63, $00
>2026	00
.2027			string_19
>2027	65 6e 64 66		.byte  $65, $6e, $64, $66, $75, $6e, $63, $00
>202b	75 6e 63 00
.202f			string_2
>202f	42 61 73 69		.byte  $42, $61, $73, $69, $63, $20, $65, $6e, $64, $3a, $20, $20, $20, $00
>2033	63 20 65 6e 64 3a 20 20 20 00
.203d			string_20
>203d	6c 6f 63 61		.byte  $6c, $6f, $63, $61, $6c, $00
>2041	6c 00
.2043			string_21
>2043	66 6f 72 00		.byte  $66, $6f, $72, $00
.2047			string_22
>2047	62 72 65 61		.byte  $62, $72, $65, $61, $6b, $00
>204b	6b 00
.204d			string_23
>204d	69 66 00		.byte  $69, $66, $00
.2050			string_24
>2050	74 68 65 6e		.byte  $74, $68, $65, $6e, $00
>2054	00
.2055			string_25
>2055	65 6c 73 65		.byte  $65, $6c, $73, $65, $00
>2059	00
.205a			string_26
>205a	65 6e 64 69		.byte  $65, $6e, $64, $69, $66, $00
>205e	66 00
.2060			string_27
>2060	61 6e 64 00		.byte  $61, $6e, $64, $00
.2064			string_28
>2064	6f 72 00		.byte  $6f, $72, $00
.2067			string_29
>2067	6e 6f 74 00		.byte  $6e, $6f, $74, $00
.206b			string_3
>206b	50 72 6f 67		.byte  $50, $72, $6f, $67, $20, $73, $74, $61, $72, $74, $3a, $20, $20, $00
>206f	20 73 74 61 72 74 3a 20 20 00
.2079			string_30
>2079	6d 6f 64 00		.byte  $6d, $6f, $64, $00
.207d			string_31
>207d	74 72 75 65		.byte  $74, $72, $75, $65, $00
>2081	00
.2082			string_32
>2082	66 61 6c 73		.byte  $66, $61, $6c, $73, $65, $00
>2086	65 00
.2088			string_33
>2088	64 6f 00		.byte  $64, $6f, $00
.208b			string_34
>208b	77 68 69 6c		.byte  $77, $68, $69, $6c, $65, $00
>208f	65 00
.2091			string_35
>2091	72 65 70 65		.byte  $72, $65, $70, $65, $61, $74, $00
>2095	61 74 00
.2098			string_36
>2098	75 6e 74 69		.byte  $75, $6e, $74, $69, $6c, $00
>209c	6c 00
.209e			string_37
>209e	64 69 6d 00		.byte  $64, $69, $6d, $00
.20a2			string_38
>20a2	61 73 00		.byte  $61, $73, $00
.20a5			string_39
>20a5	67 6f 74 6f		.byte  $67, $6f, $74, $6f, $00
>20a9	00
.20aa			string_4
>20aa	46 72 65 65		.byte  $46, $72, $65, $65, $20, $6d, $65, $6d, $6f, $72, $79, $3a, $20, $00
>20ae	20 6d 65 6d 6f 72 79 3a 20 00
.20b8			string_40
>20b8	70 72 69 6e		.byte  $70, $72, $69, $6e, $74, $00
>20bc	74 00
.20be			string_41
>20be	72 65 74 75		.byte  $72, $65, $74, $75, $72, $6e, $00
>20c2	72 6e 00
.20c5			string_42
>20c5	74 6f 00		.byte  $74, $6f, $00
.20c8			string_43
>20c8	6e 65 78 74		.byte  $6e, $65, $78, $74, $00
>20cc	00
.20cd			string_44
>20cd	73 74 65 70		.byte  $73, $74, $65, $70, $00
>20d1	00
.20d2			string_45
>20d2	70 65 65 6b		.byte  $70, $65, $65, $6b, $00
>20d6	00
.20d7			string_46
>20d7	70 6f 6b 65		.byte  $70, $6f, $6b, $65, $00
>20db	00
.20dc			string_47
>20dc	76 70 65 65		.byte  $76, $70, $65, $65, $6b, $00
>20e0	6b 00
.20e2			string_48
>20e2	76 70 6f 6b		.byte  $76, $70, $6f, $6b, $65, $00
>20e6	65 00
.20e8			string_49
>20e8	66 6c 75 70		.byte  $66, $6c, $75, $70, $70, $00
>20ec	70 00
.20ee			string_5
>20ee	4e 65 52 65		.byte  $4e, $65, $52, $65, $4c, $61, $20, $42, $61, $73, $69, $63, $20, $76, $20, $30
>20f2	4c 61 20 42 61 73 69 63 20 76 20 30
>20fe	2e 36 00		.byte  $2e, $36, $00
.2101			string_50
>2101	69 6e 70 75		.byte  $69, $6e, $70, $75, $74, $00
>2105	74 00
.2107			string_51
>2107	67 65 74 00		.byte  $67, $65, $74, $00
.210b			string_52
>210b	6c 65 6e 00		.byte  $6c, $65, $6e, $00
.210f			string_53
>210f	63 6f 6c 6f		.byte  $63, $6f, $6c, $6f, $72, $00
>2113	72 00
.2115			string_54
>2115	6c 6f 63 61		.byte  $6c, $6f, $63, $61, $74, $65, $00
>2119	74 65 00
.211c			string_55
>211c	73 65 74 63		.byte  $73, $65, $74, $63, $68, $72, $00
>2120	68 72 00
.2123			string_56
>2123	73 65 74 63		.byte  $73, $65, $74, $63, $6c, $72, $00
>2127	6c 72 00
.212a			string_57
>212a	6a 69 66 66		.byte  $6a, $69, $66, $66, $69, $00
>212e	69 00
.2130			string_58
>2130	6c 65 66 74		.byte  $6c, $65, $66, $74, $00
>2134	00
.2135			string_59
>2135	72 69 67 68		.byte  $72, $69, $67, $68, $74, $00
>2139	74 00
.213b			string_6
>213b	28 63 29 20		.byte  $28, $63, $29, $20, $32, $30, $32, $34, $00
>213f	32 30 32 34 00
.2144			string_60
>2144	6d 69 64 00		.byte  $6d, $69, $64, $00
.2148			string_61
>2148	74 72 69 6d		.byte  $74, $72, $69, $6d, $00
>214c	00
.214d			string_62
>214d	63 68 72 00		.byte  $63, $68, $72, $00
.2151			string_63
>2151	61 73 63 00		.byte  $61, $73, $63, $00
.2155			string_64
>2155	72 6e 64 00		.byte  $72, $6e, $64, $00
.2159			string_65
>2159	6a 6f 79 00		.byte  $6a, $6f, $79, $00
.215d			string_66
>215d	67 72 61 70		.byte  $67, $72, $61, $70, $68, $00
>2161	68 00
.2163			string_67
>2163	6c 69 6e 65		.byte  $6c, $69, $6e, $65, $00
>2167	00
.2168			string_68
>2168	72 65 63 74		.byte  $72, $65, $63, $74, $00
>216c	00
.216d			string_69
>216d	63 69 72 63		.byte  $63, $69, $72, $63, $6c, $65, $00
>2171	6c 65 00
.2174			string_7
>2174	00			.byte  $00
.2175			string_70
>2175	70 6c 6f 74		.byte  $70, $6c, $6f, $74, $00
>2179	00
.217a			string_71
>217a	67 65 74 78		.byte  $67, $65, $74, $78, $79, $00
>217e	79 00
.2180			string_72
>2180	77 61 69 74		.byte  $77, $61, $69, $74, $00
>2184	00
.2185			string_73
>2185	74 72 6f 6e		.byte  $74, $72, $6f, $6e, $00
>2189	00
.218a			string_74
>218a	74 72 6f 66		.byte  $74, $72, $6f, $66, $66, $00
>218e	66 00
.2190			string_77
>2190	24 00			.byte  $24, $00
.2192			string_79
>2192	44 49 52 00		.byte  $44, $49, $52, $00
.2196			string_82
>2196	63 6f 6d 6d		.byte  $63, $6f, $6d, $6d, $61, $6e, $64, $20, $46, $4c, $55, $50, $50, $20, $74, $65
>219a	61 6e 64 20 46 4c 55 50 50 20 74 65
>21a6	73 74 63 6f		.byte  $73, $74, $63, $6f, $64, $65, $20, $68, $65, $72, $65, $2e, $00
>21aa	64 65 20 68 65 72 65 2e 00
.21b3			string_84
>21b3	20 69 6e 20		.byte  $20, $69, $6e, $20, $6c, $69, $6e, $65, $20, $00
>21b7	6c 69 6e 65 20 00
.21bd			string_85
>21bd	6e 6f 6e 65		.byte  $6e, $6f, $6e, $65, $00
>21c1	00
.21c2			string_86
>21c2	53 79 6e 74		.byte  $53, $79, $6e, $74, $61, $78, $20, $45, $72, $72, $6f, $72, $00
>21c6	61 78 20 45 72 72 6f 72 00
.21cf			string_87
>21cf	43 6f 6d 6d		.byte  $43, $6f, $6d, $6d, $61, $6e, $64, $20, $6e, $6f, $74, $20, $65, $78, $70, $65
>21d3	61 6e 64 20 6e 6f 74 20 65 78 70 65
>21df	63 74 65 64		.byte  $63, $74, $65, $64, $00
>21e3	00
.21e4			string_88
>21e4	46 61 69 6c		.byte  $46, $61, $69, $6c, $65, $64, $20, $74, $6f, $20, $6c, $6f, $61, $64, $20, $66
>21e8	65 64 20 74 6f 20 6c 6f 61 64 20 66
>21f4	69 6c 65 2e		.byte  $69, $6c, $65, $2e, $00
>21f8	00
.21f9			string_89
>21f9	49 66 20 77		.byte  $49, $66, $20, $77, $69, $74, $68, $20, $6e, $6f, $20, $65, $6e, $64, $69, $66
>21fd	69 74 68 20 6e 6f 20 65 6e 64 69 66
>2209	20 66 6f 75		.byte  $20, $66, $6f, $75, $6e, $64, $00
>220d	6e 64 00
.2210			string_90
>2210	6f 70 65 6e		.byte  $6f, $70, $65, $6e, $20, $66, $75, $6e, $63, $74, $69, $6f, $6e, $20, $66, $6f
>2214	20 66 75 6e 63 74 69 6f 6e 20 66 6f
>2220	75 6e 64 00		.byte  $75, $6e, $64, $00
.2224			string_91
>2224	6e 65 78 74		.byte  $6e, $65, $78, $74, $20, $6e, $6f, $74, $20, $6d, $61, $74, $63, $68, $69, $6e
>2228	20 6e 6f 74 20 6d 61 74 63 68 69 6e
>2234	67 20 66 6f		.byte  $67, $20, $66, $6f, $72, $00
>2238	72 00
.223a			string_92
>223a	6c 6f 61 64		.byte  $6c, $6f, $61, $64, $65, $64, $20, $74, $6f, $3a, $20, $00
>223e	65 64 20 74 6f 3a 20 00
.2246			string_93
>2246	20 62 61 6e		.byte  $20, $62, $61, $6e, $6b, $20, $00
>224a	6b 20 00
.224d			string_94
>224d	2a 00			.byte  $2a, $00
.224f			string_95
>224f	20 42 6c 6f		.byte  $20, $42, $6c, $6f, $63, $6b, $73, $20, $20, $46, $69, $6c, $65, $6e, $61, $6d
>2253	63 6b 73 20 20 46 69 6c 65 6e 61 6d
>225f	65 0d 00		.byte  $65, $0d, $00
.2262			string_96
>2262	5b 64 69 72		.byte  $5b, $64, $69, $72, $5d, $00
>2266	5d 00
.2268			string_97
>2268	42 72 65 61		.byte  $42, $72, $65, $61, $6b, $0d, $00
>226c	6b 0d 00
.226f			string_98
>226f	4e 6f 20 66		.byte  $4e, $6f, $20, $66, $69, $6c, $65, $73, $0d, $00
>2273	69 6c 65 73 0d 00
.2279			string_99
>2279	4e 6f 20 78		.byte  $4e, $6f, $20, $78, $31, $36, $65, $64, $69, $74, $20, $66, $6f, $75, $6e, $64
>227d	31 36 65 64 69 74 20 66 6f 75 6e 64
>2289	2e 00			.byte  $2e, $00
.228b			cbm
=$ff81				CINT = $ff81
=$ff84				IOINIT = $ff84
=$ff87				RAMTAS = $ff87
=$ff8a				RESTOR = $ff8a
=$ff8d				VECTOR = $ff8d
=$ff90				SETMSG = $ff90
=$ff93				SECOND = $ff93
=$ff96				TKSA = $ff96
=$ff99				MEMTOP = $ff99
=$ff9c				MEMBOT = $ff9c
=$ff9f				SCNKEY = $ff9f
=$ffa2				SETTMO = $ffa2
=$ffa5				ACPTR = $ffa5
=$ffa8				CIOUT = $ffa8
=$ffab				UNTLK = $ffab
=$ffae				UNLSN = $ffae
=$ffb1				LISTEN = $ffb1
=$ffb4				TALK = $ffb4
=$ffb7				READST = $ffb7
=$ffba				SETLFS = $ffba
=$ffbd				SETNAM = $ffbd
=$ffc0				OPEN = $ffc0
=$ffc3				CLOSE = $ffc3
=$ffc6				CHKIN = $ffc6
=$ffc9				CHKOUT = $ffc9
=$ffcc				CLRCHN = $ffcc
=$ffcf				CHRIN = $ffcf
=$ffd2				CHROUT = $ffd2
=$ffd5				LOAD = $ffd5
=$ffd8				SAVE = $ffd8
=$ffdb				SETTIM = $ffdb
=$ffde				RDTIM = $ffde
=$ffe1				STOP = $ffe1
=$ffe4				GETIN = $ffe4
=$ffe7				CLALL = $ffe7
=$ffea				UDTIM = $ffea
=$ffed				SCREEN = $ffed
=$fff0				PLOT = $fff0
=$fff3				IOBASE = $fff3
.228b			RDTIM_safe
.228b	08		        php
.228c	78		        sei
.228d	20 de ff	        jsr  cbm.RDTIM
.2290	28		        plp
.2291	60		        rts
.2292			RDTIM16
.2292	20 8b 22	        jsr  RDTIM_safe
.2295	48		        pha
.2296	8a		        txa
.2297	a8		        tay
.2298	68		        pla
.2299	60		        rts
.229a			cx16
=2				r0 = 2
=2				r0s = 2
=2				r0L = 2
=2				r0sL = 2
=3				r0H = 3
=3				r0sH = 3
=4				r1 = 4
=4				r1s = 4
=4				r1L = 4
=4				r1sL = 4
=5				r1H = 5
=5				r1sH = 5
=6				r2 = 6
=6				r2s = 6
=6				r2L = 6
=6				r2sL = 6
=7				r2H = 7
=7				r2sH = 7
=8				r3 = 8
=8				r3s = 8
=8				r3L = 8
=8				r3sL = 8
=9				r3H = 9
=9				r3sH = 9
=10				r4 = 10
=10				r4s = 10
=10				r4L = 10
=10				r4sL = 10
=11				r4H = 11
=11				r4sH = 11
=12				r5 = 12
=12				r5s = 12
=12				r5L = 12
=12				r5sL = 12
=13				r5H = 13
=13				r5sH = 13
=14				r6 = 14
=14				r6s = 14
=14				r6L = 14
=14				r6sL = 14
=15				r6H = 15
=15				r6sH = 15
=$10				r7 = $10
=$10				r7s = $10
=$10				r7L = $10
=$10				r7sL = $10
=$11				r7H = $11
=$11				r7sH = $11
=$12				r8 = $12
=$12				r8s = $12
=$12				r8L = $12
=$12				r8sL = $12
=$13				r8H = $13
=$13				r8sH = $13
=$14				r9 = $14
=$14				r9s = $14
=$14				r9L = $14
=$14				r9sL = $14
=$15				r9H = $15
=$15				r9sH = $15
=$16				r10 = $16
=$16				r10s = $16
=$16				r10L = $16
=$16				r10sL = $16
=$17				r10H = $17
=$17				r10sH = $17
=$18				r11 = $18
=$18				r11s = $18
=$18				r11L = $18
=$18				r11sL = $18
=$19				r11H = $19
=$19				r11sH = $19
=$1a				r12 = $1a
=$1a				r12s = $1a
=$1a				r12L = $1a
=$1a				r12sL = $1a
=$1b				r12H = $1b
=$1b				r12sH = $1b
=$1c				r13 = $1c
=$1c				r13s = $1c
=$1c				r13L = $1c
=$1c				r13sL = $1c
=$1d				r13H = $1d
=$1d				r13sH = $1d
=$1e				r14 = $1e
=$1e				r14s = $1e
=$1e				r14L = $1e
=$1e				r14sL = $1e
=$1f				r14H = $1f
=$1f				r14sH = $1f
=$20				r15 = $20
=$20				r15s = $20
=$20				r15L = $20
=$20				r15sL = $20
=$21				r15H = $21
=$21				r15sH = $21
=$0300				IERROR = $0300
=$0302				IMAIN = $0302
=$0304				ICRNCH = $0304
=$0306				IQPLOP = $0306
=$0308				IGONE = $0308
=$030a				IEVAL = $030a
=$030c				SAREG = $030c
=$030d				SXREG = $030d
=$030e				SYREG = $030e
=$030f				SPREG = $030f
=$0311				USRADD = $0311
=$0314				CINV = $0314
=$0316				CBINV = $0316
=$0318				NMINV = $0318
=$031a				IOPEN = $031a
=$031c				ICLOSE = $031c
=$031e				ICHKIN = $031e
=$0320				ICKOUT = $0320
=$0322				ICLRCH = $0322
=$0324				IBASIN = $0324
=$0326				IBSOUT = $0326
=$0328				ISTOP = $0328
=$032a				IGETIN = $032a
=$032c				ICLALL = $032c
=$032e				KEYHDL = $032e
=$0330				ILOAD = $0330
=$0332				ISAVE = $0332
=$9f00				via1prb = $9f00
=$9f01				via1pra = $9f01
=$9f02				via1ddrb = $9f02
=$9f03				via1ddra = $9f03
=$9f04				via1t1l = $9f04
=$9f05				via1t1h = $9f05
=$9f06				via1t1ll = $9f06
=$9f07				via1t1lh = $9f07
=$9f08				via1t2l = $9f08
=$9f09				via1t2h = $9f09
=$9f0a				via1sr = $9f0a
=$9f0b				via1acr = $9f0b
=$9f0c				via1pcr = $9f0c
=$9f0d				via1ifr = $9f0d
=$9f0e				via1ier = $9f0e
=$9f0f				via1ora = $9f0f
=$9f10				via2prb = $9f10
=$9f11				via2pra = $9f11
=$9f12				via2ddrb = $9f12
=$9f13				via2ddra = $9f13
=$9f14				via2t1l = $9f14
=$9f15				via2t1h = $9f15
=$9f16				via2t1ll = $9f16
=$9f17				via2t1lh = $9f17
=$9f18				via2t2l = $9f18
=$9f19				via2t2h = $9f19
=$9f1a				via2sr = $9f1a
=$9f1b				via2acr = $9f1b
=$9f1c				via2pcr = $9f1c
=$9f1d				via2ifr = $9f1d
=$9f1e				via2ier = $9f1e
=$9f1f				via2ora = $9f1f
=$9f20				VERA_ADDR_L = $9f20
=$9f20				VERA_ADDR = $9f20
=$9f21				VERA_ADDR_M = $9f21
=$9f22				VERA_ADDR_H = $9f22
=$9f23				VERA_DATA0 = $9f23
=$9f24				VERA_DATA1 = $9f24
=$9f25				VERA_CTRL = $9f25
=$9f26				VERA_IEN = $9f26
=$9f27				VERA_ISR = $9f27
=$9f28				VERA_IRQLINE_L = $9f28
=$9f28				VERA_SCANLINE_L = $9f28
=$9f29				VERA_DC_VIDEO = $9f29
=$9f29				VERA_DC_HSTART = $9f29
=$9f29				VERA_DC_VER0 = $9f29
=$9f29				VERA_FX_CTRL = $9f29
=$9f29				VERA_FX_X_INCR_L = $9f29
=$9f29				VERA_FX_X_INCR = $9f29
=$9f29				VERA_FX_X_POS_L = $9f29
=$9f29				VERA_FX_X_POS = $9f29
=$9f29				VERA_FX_X_POS_S = $9f29
=$9f29				VERA_FX_CACHE_L = $9f29
=$9f29				VERA_FX_ACCUM_RESET = $9f29
=$9f2a				VERA_DC_HSCALE = $9f2a
=$9f2a				VERA_DC_HSTOP = $9f2a
=$9f2a				VERA_DC_VER1 = $9f2a
=$9f2a				VERA_FX_TILEBASE = $9f2a
=$9f2a				VERA_FX_X_INCR_H = $9f2a
=$9f2a				VERA_FX_X_POS_H = $9f2a
=$9f2a				VERA_FX_Y_POS_S = $9f2a
=$9f2a				VERA_FX_CACHE_M = $9f2a
=$9f2a				VERA_FX_ACCUM = $9f2a
=$9f2b				VERA_DC_VSCALE = $9f2b
=$9f2b				VERA_DC_VSTART = $9f2b
=$9f2b				VERA_DC_VER2 = $9f2b
=$9f2b				VERA_FX_MAPBASE = $9f2b
=$9f2b				VERA_FX_Y_INCR_L = $9f2b
=$9f2b				VERA_FX_Y_INCR = $9f2b
=$9f2b				VERA_FX_Y_POS_L = $9f2b
=$9f2b				VERA_FX_Y_POS = $9f2b
=$9f2b				VERA_FX_POLY_FILL_L = $9f2b
=$9f2b				VERA_FX_POLY_FILL = $9f2b
=$9f2b				VERA_FX_CACHE_H = $9f2b
=$9f2c				VERA_DC_BORDER = $9f2c
=$9f2c				VERA_DC_VSTOP = $9f2c
=$9f2c				VERA_DC_VER3 = $9f2c
=$9f2c				VERA_FX_MULT = $9f2c
=$9f2c				VERA_FX_Y_INCR_H = $9f2c
=$9f2c				VERA_FX_Y_POS_H = $9f2c
=$9f2c				VERA_FX_POLY_FILL_H = $9f2c
=$9f2c				VERA_FX_CACHE_U = $9f2c
=$9f2d				VERA_L0_CONFIG = $9f2d
=$9f2e				VERA_L0_MAPBASE = $9f2e
=$9f2f				VERA_L0_TILEBASE = $9f2f
=$9f30				VERA_L0_HSCROLL_L = $9f30
=$9f30				VERA_L0_HSCROLL = $9f30
=$9f31				VERA_L0_HSCROLL_H = $9f31
=$9f32				VERA_L0_VSCROLL_L = $9f32
=$9f32				VERA_L0_VSCROLL = $9f32
=$9f33				VERA_L0_VSCROLL_H = $9f33
=$9f34				VERA_L1_CONFIG = $9f34
=$9f35				VERA_L1_MAPBASE = $9f35
=$9f36				VERA_L1_TILEBASE = $9f36
=$9f37				VERA_L1_HSCROLL_L = $9f37
=$9f37				VERA_L1_HSCROLL = $9f37
=$9f38				VERA_L1_HSCROLL_H = $9f38
=$9f39				VERA_L1_VSCROLL_L = $9f39
=$9f39				VERA_L1_VSCROLL = $9f39
=$9f3a				VERA_L1_VSCROLL_H = $9f3a
=$9f3b				VERA_AUDIO_CTRL = $9f3b
=$9f3c				VERA_AUDIO_RATE = $9f3c
=$9f3d				VERA_AUDIO_DATA = $9f3d
=$9f3e				VERA_SPI_DATA = $9f3e
=$9f3f				VERA_SPI_CTRL = $9f3f
=$9f40				YM_ADDRESS = $9f40
=$9f41				YM_DATA = $9f41
=$ac03				edkeyvec = $ac03
=$ac05				edkeybk = $ac05
=$fffa				NMI_VEC = $fffa
=$fffc				RESET_VEC = $fffc
=$fffe				IRQ_VEC = $fffe
=3				EXTAPI16_stack_enter_kernal_stack = 3
=4				EXTAPI16_stack_leave_kernal_stack = 4
=2				EXTAPI16_stack_pop = 2
=1				EXTAPI16_stack_push = 1
=0				EXTAPI16_test = 0
=1				EXTAPI_clear_status = 1
=10				EXTAPI_cursor_blink = 10
=2				EXTAPI_getlfs = 2
=5				EXTAPI_iso_cursor_char = 5
=4				EXTAPI_joystick_ps2_keycodes = 4
=11				EXTAPI_led_update = 11
=12				EXTAPI_mouse_set_position = 12
=3				EXTAPI_mouse_sprite_offset = 3
=7				EXTAPI_pfkey = 7
=8				EXTAPI_ps2data_fetch = 8
=9				EXTAPI_ps2data_raw = 9
=6				EXTAPI_ps2kbd_typematic = 6
=$9f20				VERA_BASE = $9f20
=$9f00				VIA1_BASE = $9f00
=$9f10				VIA2_BASE = $9f10
=$9f60				extdev = $9f60
=$ff4a				CLOSE_ALL = $ff4a
=$ff59				LKUPLA = $ff59
=$ff5c				LKUPSA = $ff5c
=$ff5f				screen_mode = $ff5f
=$ff62				screen_set_charset = $ff62
=$ff6e				JSRFAR = $ff6e
=$ff74				fetch = $ff74
=$ff77				stash = $ff77
=$ff7d				PRIMM = $ff7d
=$ff20				GRAPH_init = $ff20
=$ff23				GRAPH_clear = $ff23
=$ff26				GRAPH_set_window = $ff26
=$ff29				GRAPH_set_colors = $ff29
=$ff2c				GRAPH_draw_line = $ff2c
=$ff2f				GRAPH_draw_rect = $ff2f
=$ff32				GRAPH_move_rect = $ff32
=$ff35				GRAPH_draw_oval = $ff35
=$ff38				GRAPH_draw_image = $ff38
=$ff3b				GRAPH_set_font = $ff3b
=$ff3e				GRAPH_get_char_size = $ff3e
=$ff41				GRAPH_put_char = $ff41
=$ff41				GRAPH_put_next_char = $ff41
=$fef6				FB_init = $fef6
=$fef9				FB_get_info = $fef9
=$fefc				FB_set_palette = $fefc
=$feff				FB_cursor_position = $feff
=$ff02				FB_cursor_next_line = $ff02
=$ff05				FB_get_pixel = $ff05
=$ff08				FB_get_pixels = $ff08
=$ff0b				FB_set_pixel = $ff0b
=$ff0e				FB_set_pixels = $ff0e
=$ff11				FB_set_8_pixels = $ff11
=$ff14				FB_set_8_pixels_opaque = $ff14
=$ff17				FB_fill_pixels = $ff17
=$ff1a				FB_filter_pixels = $ff1a
=$ff1d				FB_move_pixels = $ff1d
=$fec6				i2c_read_byte = $fec6
=$fec9				i2c_write_byte = $fec9
=$feb4				i2c_batch_read = $feb4
=$feb7				i2c_batch_write = $feb7
=$fef0				sprite_set_image = $fef0
=$fef3				sprite_set_position = $fef3
=$fee4				memory_fill = $fee4
=$fee7				memory_copy = $fee7
=$feea				memory_crc = $feea
=$feed				memory_decompress = $feed
=$fedb				console_init = $fedb
=$fede				console_put_char = $fede
=$fee1				console_get_char = $fee1
=$fed8				console_put_image = $fed8
=$fed5				console_set_paging_message = $fed5
=$fecf				entropy_get = $fecf
=$feab				extapi = $feab
=$fecc				monitor = $fecc
=$ff44				MACPTR = $ff44
=$feb1				MCIOUT = $feb1
=$feba				BSAVE = $feba
=$ff47				enter_basic = $ff47
=$ff4d				clock_set_date_time = $ff4d
=$ff50				clock_get_date_time = $ff50
=$febd				kbdbuf_peek = $febd
=$fec0				kbdbuf_get_modifiers = $fec0
=$fec3				kbdbuf_put = $fec3
=$fed2				keymap = $fed2
=$ff68				mouse_config = $ff68
=$ff6b				mouse_get = $ff6b
=$ff71				mouse_scan = $ff71
=$ff53				joystick_scan = $ff53
=$ff56				joystick_get = $ff56
=$c000				x16edit_default = $c000
=$c003				x16edit_loadfile = $c003
=$c006				x16edit_loadfile_options = $c006
=$c09f				audio_init = $c09f
=$c000				bas_fmfreq = $c000
=$c003				bas_fmnote = $c003
=$c006				bas_fmplaystring = $c006
=$c009				bas_fmvib = $c009
=$c00c				bas_playstringvoice = $c00c
=$c00f				bas_psgfreq = $c00f
=$c012				bas_psgnote = $c012
=$c015				bas_psgwav = $c015
=$c018				bas_psgplaystring = $c018
=$c08d				bas_fmchordstring = $c08d
=$c090				bas_psgchordstring = $c090
=$c01b				notecon_bas2fm = $c01b
=$c01e				notecon_bas2midi = $c01e
=$c021				notecon_bas2psg = $c021
=$c024				notecon_fm2bas = $c024
=$c027				notecon_fm2midi = $c027
=$c02a				notecon_fm2psg = $c02a
=$c02d				notecon_freq2bas = $c02d
=$c030				notecon_freq2fm = $c030
=$c033				notecon_freq2midi = $c033
=$c036				notecon_freq2psg = $c036
=$c039				notecon_midi2bas = $c039
=$c03c				notecon_midi2fm = $c03c
=$c03f				notecon_midi2psg = $c03f
=$c042				notecon_psg2bas = $c042
=$c045				notecon_psg2fm = $c045
=$c048				notecon_psg2midi = $c048
=$c04b				psg_init = $c04b
=$c04e				psg_playfreq = $c04e
=$c051				psg_read = $c051
=$c054				psg_setatten = $c054
=$c057				psg_setfreq = $c057
=$c05a				psg_setpan = $c05a
=$c05d				psg_setvol = $c05d
=$c060				psg_write = $c060
=$c0a2				psg_write_fast = $c0a2
=$c093				psg_getatten = $c093
=$c096				psg_getpan = $c096
=$c063				ym_init = $c063
=$c066				ym_loaddefpatches = $c066
=$c069				ym_loadpatch = $c069
=$c06c				ym_loadpatchlfn = $c06c
=$c06f				ym_playdrum = $c06f
=$c072				ym_playnote = $c072
=$c075				ym_setatten = $c075
=$c078				ym_setdrum = $c078
=$c07b				ym_setnote = $c07b
=$c07e				ym_setpan = $c07e
=$c081				ym_read = $c081
=$c084				ym_release = $c084
=$c087				ym_trigger = $c087
=$c08a				ym_write = $c08a
=$c099				ym_getatten = $c099
=$c09c				ym_getpan = $c09c
=$c0a5				ym_get_chip_type = $c0a5
.229a			vpeek
.229a	9c 25 9f	                stz  cx16.VERA_CTRL
.229d	8d 22 9f	                sta  cx16.VERA_ADDR_H
.22a0	8c 21 9f	                sty  cx16.VERA_ADDR_M
.22a3	8e 20 9f	                stx  cx16.VERA_ADDR_L
.22a6	ad 23 9f	                lda  cx16.VERA_DATA0
.22a9	60		                rts
.22aa			search_x16edit
.22aa	a5 01		        lda  $01
.22ac	85 02			sta  cx16.r0L
.22ae	78		        sei
.22af	a9 1f			lda  #31
.22b1	85 04			sta  cx16.r1L
.22b3			label_asm_241_for_loop
.22b3	a5 04			lda  cx16.r1L
.22b5	85 01		        sta  $01
.22b7	a9 f0			lda  #<$fff0
.22b9	a0 ff			ldy  #>$fff0
.22bb	85 06			sta  cx16.r2
.22bd	84 07			sty  cx16.r2+1
.22bf	a0 00		            ldy  #0
.22c1	b9 e7 22	-           lda  signature,y
.22c4	d1 06		            cmp  (cx16.r2),y
.22c6	d0 08		            bne  +
.22c8	c8		            iny
.22c9	c0 07		            cpy #7
.22cb	d0 f4		            bne  -
.22cd	38		            sec
.22ce	b0 01		            bcs  ++
.22d0	18		+           clc
.22d1			+
.22d1	90 08			bcc  label_asm_243_branch_else
.22d3	a5 02			lda  cx16.r0L
.22d5	85 01		        sta  $01
.22d7	58		        cli
.22d8	a5 04			lda  cx16.r1L
.22da	60			rts
.22db			label_asm_243_branch_else
.22db	a5 04			lda  cx16.r1L
.22dd	f0 04			beq  label_asm_242_for_end
.22df	c6 04			dec  cx16.r1L
.22e1	80 d0			bra  label_asm_241_for_loop
.22e3			label_asm_242_for_end
.22e3	58		        cli
.22e4	a9 ff			lda  #$ff
.22e6	60			rts
.22e7			signature
>22e7	58 31 36 45		.byte  $58, $31, $36, $45, $44, $49, $54, $00
>22eb	44 49 54 00
.22ef			sys
=$10				target = $10
.22ef			init_system_phase2
.22ef	78		        sei
.22f0	ad 14 03	        lda  cx16.CINV
.22f3	8d 32 23	        sta  restore_irq._orig_irqvec
.22f6	ad 15 03	        lda  cx16.CINV+1
.22f9	8d 33 23	        sta  restore_irq._orig_irqvec+1
.22fc	a9 01		        lda  #PROG8_VARSHIGH_RAMBANK
.22fe	85 00		        sta  $00    ; select ram bank
.2300	58		        cli
.2301	60		        rts
.2302			cleanup_at_exit
.2302	a9 01		        lda  #1
.2304	85 00		        sta  $00        ; ram bank 1
.2306	a9 04		        lda  #4
.2308	85 01		        sta  $01        ; rom bank 4 (basic)
.230a	64 2d		        stz  $2d        ; hack to reset machine code monitor bank to 0
.230c	20 cc ff	        jsr  cbm.CLRCHN		; reset i/o channels
=$2310			_exitcodeCarry = *+1
.230f	a9 00		        lda  #0
.2311	4a		        lsr  a
=$2313			_exitcode = *+1
.2312	a9 00		        lda  #0        ; exit code possibly modified in exit()
=$2315			_exitcodeX = *+1
.2314	a2 00		        ldx  #0
=$2317			_exitcodeY = *+1
.2316	a0 00		        ldy  #0
.2318	60		        rts
.2319			restore_irq
.2319	78			    sei
.231a	ad 32 23		    lda  _orig_irqvec
.231d	8d 14 03		    sta  cx16.CINV
.2320	ad 33 23		    lda  _orig_irqvec+1
.2323	8d 15 03		    sta  cx16.CINV+1
.2326	ad 26 9f		    lda  cx16.VERA_IEN
.2329	29 f0			    and  #%11110000     ; disable all Vera IRQs but the vsync
.232b	09 01			    ora  #%00000001
.232d	8d 26 9f		    sta  cx16.VERA_IEN
.2330	58			    cli
.2331	60			    rts
>2332	00 00		_orig_irqvec    .word  0
.2334			reset_system
.2334	78		            sei
.2335	a2 42		            ldx #$42
.2337	a0 02		            ldy #2
.2339	a9 00		            lda #0
.233b	4c c9 fe	            jmp  cx16.i2c_write_byte
.233e			wait
.233e	85 7c		            sta  P8ZP_SCRATCH_W1
.2340	84 7d		            sty  P8ZP_SCRATCH_W1+1
.2342	a5 7c		_loop       lda  P8ZP_SCRATCH_W1
.2344	05 7d		            ora  P8ZP_SCRATCH_W1+1
.2346	d0 01		            bne  +
.2348	60		            rts
.2349	78		+           sei
.234a	20 de ff	            jsr  cbm.RDTIM
.234d	58		            cli
.234e	85 7a		            sta  P8ZP_SCRATCH_B1
.2350	78		-           sei
.2351	20 de ff	            jsr  cbm.RDTIM
.2354	58		            cli
.2355	c5 7a		            cmp  P8ZP_SCRATCH_B1
.2357	f0 f7		            beq  -
.2359	a5 7c		            lda  P8ZP_SCRATCH_W1
.235b	d0 02		            bne  +
.235d	c6 7d		            dec  P8ZP_SCRATCH_W1+1
.235f	c6 7c		+           dec  P8ZP_SCRATCH_W1
.2361	80 df		            bra  _loop
.2363			internal_stringcopy
.2363	85 7c				sta  P8ZP_SCRATCH_W1
.2365	84 7d				sty  P8ZP_SCRATCH_W1+1
.2367	a5 02				lda  cx16.r0
.2369	a4 03				ldy  cx16.r0+1
.236b	4c 12 5c			jmp  prog8_lib.strcpy
.236e			memcopy
.236e	c0 00		            cpy  #0
.2370	d0 13		            bne  _longcopy
.2372	a8		            tay
.2373	d0 01		            bne  _copyshort
.2375	60		            rts     ; nothing to copy
.2376			_copyshort
.2376	88		            dey
.2377	f0 07		            beq  +
.2379	b1 02		-           lda  (cx16.r0),y
.237b	91 04		            sta  (cx16.r1),y
.237d	88		            dey
.237e	d0 f9		            bne  -
.2380	b1 02		+           lda  (cx16.r0),y
.2382	91 04		            sta  (cx16.r1),y
.2384	60		            rts
.2385			_longcopy
.2385	48		            pha                         ; lsb(count) = remainder in last page
.2386	98		            tya
.2387	aa		            tax                         ; x = num pages (1+)
.2388	a0 00		            ldy  #0
.238a	b1 02		-           lda  (cx16.r0),y
.238c	91 04		            sta  (cx16.r1),y
.238e	c8		            iny
.238f	d0 f9		            bne  -
.2391	e6 03		            inc  cx16.r0+1
.2393	e6 05		            inc  cx16.r1+1
.2395	ca		            dex
.2396	d0 f2		            bne  -
.2398	7a		            ply
.2399	d0 db		            bne  _copyshort
.239b	60		            rts
.239c			memset
.239c	a4 02		            ldy  cx16.r0
.239e	84 7c		            sty  P8ZP_SCRATCH_W1
.23a0	a4 03		            ldy  cx16.r0+1
.23a2	84 7d		            sty  P8ZP_SCRATCH_W1+1
.23a4	a6 04		            ldx  cx16.r1
.23a6	a4 05		            ldy  cx16.r1+1
.23a8	4c f1 5b	            jmp  prog8_lib.memset
.23ab			txt
=$3c				DEFAULT_HEIGHT = $3c
=$50				DEFAULT_WIDTH = $50
=$b000				VERA_TEXTMATRIX_ADDR = $b000
=1				VERA_TEXTMATRIX_BANK = 1
>23ab	90 05 1c 9f	color_to_charcode	.byte  $90, $05, $1c, $9f, $9c, $1e, $1f, $9e, $81, $95, $96, $97, $98, $99, $9a, $9b
>23af	9c 1e 1f 9e 81 95 96 97 98 99 9a 9b
=$ffd2				chrout = $ffd2
.23bb			column
.23bb	48		        pha
.23bc	38		        sec
.23bd	20 f0 ff	        jsr  cbm.PLOT
.23c0	68		        pla
.23c1	a8		        tay
.23c2	18		        clc
.23c3	4c f0 ff	        jmp  cbm.PLOT
.23c6			color
=38			txtcol 	= 38 	; zp UBYTE
.23c6	85 26			sta  txtcol
.23c8	a9 f0			lda  #240
.23ca	14 26			trb  txtcol
.23cc	a4 26			ldy  txtcol
.23ce	b9 ab 23		lda  txt.color_to_charcode,y
.23d1	4c d2 ff		jmp  cbm.CHROUT
.23d4			color2
=36			txtcol 	= 36 	; zp UBYTE
=37			bgcol 	= 37 	; zp UBYTE
.23d4	85 24			sta  txtcol
.23d6	84 25			sty  bgcol
.23d8	a9 f0			lda  #240
.23da	14 24			trb  txtcol
.23dc	a9 f0			lda  #240
.23de	14 25			trb  bgcol
.23e0	a4 25			ldy  bgcol
.23e2	b9 ab 23		lda  txt.color_to_charcode,y
.23e5	20 d2 ff		jsr  cbm.CHROUT
.23e8	a9 01			lda  #1
.23ea	20 d2 ff		jsr  cbm.CHROUT
.23ed	a4 24			ldy  txtcol
.23ef	b9 ab 23		lda  txt.color_to_charcode,y
.23f2	4c d2 ff		jmp  cbm.CHROUT
.23f5			setchr
.23f5	48		            pha
.23f6	9c 25 9f	            stz  cx16.VERA_CTRL
.23f9	a9 01		            lda  #VERA_TEXTMATRIX_BANK
.23fb	8d 22 9f	            sta  cx16.VERA_ADDR_H
.23fe	8a		            txa
.23ff	0a		            asl  a
.2400	8d 20 9f	            sta  cx16.VERA_ADDR_L
.2403	98		            tya
.2404	69 b0		            adc  #>VERA_TEXTMATRIX_ADDR
.2406	8d 21 9f	            sta  cx16.VERA_ADDR_M
.2409	68		            pla
.240a	8d 23 9f	            sta  cx16.VERA_DATA0
.240d	60		            rts
.240e			setclr
.240e	48		            pha
.240f	9c 25 9f	            stz  cx16.VERA_CTRL
.2412	a9 01		            lda  #VERA_TEXTMATRIX_BANK
.2414	8d 22 9f	            sta  cx16.VERA_ADDR_H
.2417	8a		            txa
.2418	0a		            asl  a
.2419	1a		            ina
.241a	8d 20 9f	            sta  cx16.VERA_ADDR_L
.241d	98		            tya
.241e	69 b0		            adc  #>VERA_TEXTMATRIX_ADDR
.2420	8d 21 9f	            sta  cx16.VERA_ADDR_M
.2423	68		            pla
.2424	8d 23 9f	            sta  cx16.VERA_DATA0
.2427	60		            rts
.2428			plot
.2428	18				clc
.2429	4c f0 ff			jmp  cbm.PLOT
.242c			waitkey
.242c	20 e4 ff	-       jsr cbm.GETIN
.242f	f0 fb		        beq -
.2431	60		        rts
.2432			print
.2432	85 7e		    		sta  P8ZP_SCRATCH_W2
.2434	84 7f		    		sty  P8ZP_SCRATCH_W2+1
.2436	a0 00		    		ldy  #0
.2438	b1 7e		-	    	lda  (P8ZP_SCRATCH_W2),y
.243a	f0 06		    		beq  +
.243c	20 d2 ff	    		jsr  cbm.CHROUT
.243f	c8		    		iny
.2440	d0 f6		    		bne  -
.2442	60		+	    	rts
.2443			print_ubhex
.2443	90 07		            bcc  +
.2445	48		            pha
.2446	a9 24		            lda  #'$'
.2448	20 d2 ff	            jsr  cbm.CHROUT
.244b	68		            pla
.244c	20 c3 26	+           jsr  conv.internal_ubyte2hex
.244f	20 d2 ff	            jsr  cbm.CHROUT
.2452	98		            tya
.2453	4c d2 ff	            jmp  cbm.CHROUT
.2456			print_uwhex
.2456	48		            pha
.2457	98		            tya
.2458	20 43 24	            jsr  print_ubhex
.245b	68		            pla
.245c	18		            clc
.245d	4c 43 24	            jmp  print_ubhex
.2460			print_uw
.2460	20 f3 25	            jsr  conv.internal_uword2decimal
.2463	a0 00		            ldy  #0
.2465	b9 bd 26	-           lda  conv.internal_uword2decimal.decTenThousands,y
.2468	f0 11		            beq  _allzero
.246a	c9 30		            cmp  #'0'
.246c	d0 03		            bne  _gotdigit
.246e	c8		            iny
.246f	d0 f4		            bne  -
.2471	20 d2 ff	_gotdigit   jsr  cbm.CHROUT
.2474	c8		            iny
.2475	b9 bd 26	            lda  conv.internal_uword2decimal.decTenThousands,y
.2478	d0 f7		            bne  _gotdigit
.247a	60		            rts
.247b	a9 30		_allzero    lda  #'0'
.247d	4c d2 ff	            jmp  cbm.CHROUT
.2480			input_chars
.2480	85 7c		            sta  P8ZP_SCRATCH_W1
.2482	84 7d		            sty  P8ZP_SCRATCH_W1+1
.2484	a0 00		            ldy  #0				; char counter = 0
.2486	20 cf ff	-           jsr  cbm.CHRIN
.2489	c9 0d		            cmp  #$0d			; return (ascii 13) pressed?
.248b	f0 05		            beq  +				; yes, end.
.248d	91 7c		            sta  (P8ZP_SCRATCH_W1),y	; else store char in buffer
.248f	c8		            iny
.2490	d0 f4		            bne  -
.2492	a9 00		+           lda  #0
.2494	91 7c		            sta  (P8ZP_SCRATCH_W1),y	; finish string with 0 byte
.2496	60		            rts
.2497			print_ub
.2497	20 e1 25	            jsr  conv.internal_ubyte2decimal
.249a			_print_byte_digits
.249a	48		            pha
.249b	c0 30		            cpy  #'0'
.249d	f0 0b		            beq  +
.249f	98		            tya
.24a0	20 d2 ff	            jsr  cbm.CHROUT
.24a3	8a		            txa
.24a4	20 d2 ff	            jsr  cbm.CHROUT
.24a7	4c b2 24	            jmp  _ones
.24aa	e0 30		+           cpx  #'0'
.24ac	f0 04		            beq  _ones
.24ae	8a		            txa
.24af	20 d2 ff	            jsr  cbm.CHROUT
.24b2	68		_ones       pla
.24b3	4c d2 ff	            jmp  cbm.CHROUT
.24b6			conv
.24b6			string_out
>24b6	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>24ba	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>24c6	00			.byte  $00
.24c7			any2uword
.24c7	48			pha
.24c8	85 7c			sta  P8ZP_SCRATCH_W1
.24ca	84 7d			sty  P8ZP_SCRATCH_W1+1
.24cc	a0 00			ldy  #0
.24ce	b1 7c			lda  (P8ZP_SCRATCH_W1),y
.24d0	a4 7d			ldy  P8ZP_SCRATCH_W1+1
.24d2	c9 24			cmp  #'$'
.24d4	f0 0b			beq  _hex
.24d6	c9 25			cmp  #'%'
.24d8	f0 0e			beq  _bin
.24da	68			pla
.24db	20 f9 24		jsr  str2uword
.24de	4c ec 24		jmp  _result
.24e1	68		_hex	pla
.24e2	20 43 25		jsr  hex2uword
.24e5	4c ec 24		jmp  _result
.24e8	68		_bin	pla
.24e9	20 ae 25		jsr  bin2uword
.24ec			_result
.24ec	48		        pha
.24ed	a5 20		        lda  cx16.r15
.24ef	85 7a		        sta  P8ZP_SCRATCH_B1        ; result value
.24f1	68		        pla
.24f2	85 20		        sta  cx16.r15
.24f4	84 21		        sty  cx16.r15+1
.24f6	a5 7a		        lda  P8ZP_SCRATCH_B1
.24f8	60		        rts
.24f9			str2uword
=124			_result = P8ZP_SCRATCH_W1
.24f9	85 7e		        	sta  P8ZP_SCRATCH_W2
.24fb	84 7f		        	sty  P8ZP_SCRATCH_W2+1
.24fd	a0 00				ldy  #0
.24ff	84 7c				sty  _result
.2501	84 7d				sty  _result+1
.2503	84 21				sty  cx16.r15+1
.2505			_loop
.2505	b1 7e				lda  (P8ZP_SCRATCH_W2),y
.2507	38				sec
.2508	e9 30				sbc  #48
.250a	10 07				bpl  _digit
.250c			_done
.250c	84 20				sty  cx16.r15
.250e	a5 7c				lda  _result
.2510	a4 7d				ldy  _result+1
.2512	60				rts
.2513			_digit
.2513	c9 0a				cmp  #10
.2515	b0 f5				bcs  _done
.2517	48				pha
.2518	20 28 25			jsr  _result_times_10
.251b	68				pla
.251c	18				clc
.251d	65 7c				adc  _result
.251f	85 7c				sta  _result
.2521	90 02				bcc  +
.2523	e6 7d				inc  _result+1
.2525	c8		+		iny
.2526	d0 dd				bne  _loop
.2528			_result_times_10
.2528	a5 7d				lda  _result+1
.252a	85 7b				sta  P8ZP_SCRATCH_REG
.252c	a5 7c				lda  _result
.252e	0a				asl  a
.252f	26 7b				rol  P8ZP_SCRATCH_REG
.2531	0a				asl  a
.2532	26 7b				rol  P8ZP_SCRATCH_REG
.2534	18				clc
.2535	65 7c				adc  _result
.2537	85 7c				sta  _result
.2539	a5 7b				lda  P8ZP_SCRATCH_REG
.253b	65 7d				adc  _result+1
.253d	06 7c				asl  _result
.253f	2a				rol  a
.2540	85 7d				sta  _result+1
.2542	60				rts
.2543			hex2uword
.2543	85 7e			sta  P8ZP_SCRATCH_W2
.2545	84 7f			sty  P8ZP_SCRATCH_W2+1
.2547	a0 00			ldy  #0
.2549	84 7c			sty  P8ZP_SCRATCH_W1
.254b	84 7d			sty  P8ZP_SCRATCH_W1+1
.254d	84 21			sty  cx16.r15+1
.254f	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.2551	f0 43			beq  _stop
.2553	c9 24			cmp  #'$'
.2555	d0 01			bne  _loop
.2557	c8			iny
.2558			_loop
.2558	a9 00			lda  #0
.255a	85 7a			sta  P8ZP_SCRATCH_B1
.255c	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.255e	f0 36			beq  _stop
.2560	c9 07			cmp  #7                 ; screencode letters A-F are 1-6
.2562	90 39			bcc  _add_letter
.2564	29 7f			and  #127
.2566	c9 61			cmp  #97
.2568	b0 3c			bcs  _try_iso            ; maybe letter is iso:'a'-iso:'f' (97-102)
.256a	c9 47			cmp  #'g'
.256c	b0 28			bcs  _stop
.256e	c9 41			cmp  #'a'
.2570	b0 2b			bcs  _add_letter
.2572	c9 30			cmp  #'0'
.2574	90 20			bcc  _stop
.2576	c9 3a			cmp  #'9'+1
.2578	b0 1c			bcs  _stop
.257a			_calc
.257a	06 7c			asl  P8ZP_SCRATCH_W1
.257c	26 7d			rol  P8ZP_SCRATCH_W1+1
.257e	06 7c			asl  P8ZP_SCRATCH_W1
.2580	26 7d			rol  P8ZP_SCRATCH_W1+1
.2582	06 7c			asl  P8ZP_SCRATCH_W1
.2584	26 7d			rol  P8ZP_SCRATCH_W1+1
.2586	06 7c			asl  P8ZP_SCRATCH_W1
.2588	26 7d			rol  P8ZP_SCRATCH_W1+1
.258a	29 0f			and  #$0f
.258c	18			clc
.258d	65 7a			adc  P8ZP_SCRATCH_B1
.258f	05 7c			ora  P8ZP_SCRATCH_W1
.2591	85 7c			sta  P8ZP_SCRATCH_W1
.2593	c8			iny
.2594	d0 c2			bne  _loop
.2596			_stop
.2596	84 20			sty  cx16.r15
.2598	a5 7c			lda  P8ZP_SCRATCH_W1
.259a	a4 7d			ldy  P8ZP_SCRATCH_W1+1
.259c	60			rts
.259d			_add_letter
.259d	48			pha
.259e	a9 09			lda  #9
.25a0	85 7a			sta  P8ZP_SCRATCH_B1
.25a2	68			pla
.25a3	4c 7a 25		jmp  _calc
.25a6			_try_iso
.25a6	c9 67		        cmp  #103
.25a8	b0 ec		        bcs  _stop
.25aa	29 3f		        and  #63
.25ac	d0 ef		        bne  _add_letter
.25ae			bin2uword
.25ae	85 7e			sta  P8ZP_SCRATCH_W2
.25b0	84 7f			sty  P8ZP_SCRATCH_W2+1
.25b2	a0 00			ldy  #0
.25b4	84 7c			sty  P8ZP_SCRATCH_W1
.25b6	84 7d			sty  P8ZP_SCRATCH_W1+1
.25b8	84 21			sty  cx16.r15+1
.25ba	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.25bc	f0 1c			beq  _stop
.25be	c9 25			cmp  #'%'
.25c0	d0 01			bne  _loop
.25c2	c8			iny
.25c3			_loop
.25c3	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.25c5	c9 30			cmp  #'0'
.25c7	90 11			bcc  _stop
.25c9	c9 32			cmp  #'2'
.25cb	b0 0d			bcs  _stop
.25cd	06 7c		_first  asl  P8ZP_SCRATCH_W1
.25cf	26 7d			rol  P8ZP_SCRATCH_W1+1
.25d1	29 01			and  #1
.25d3	05 7c			ora  P8ZP_SCRATCH_W1
.25d5	85 7c			sta  P8ZP_SCRATCH_W1
.25d7	c8			iny
.25d8	d0 e9			bne  _loop
.25da			_stop
.25da	84 20			sty  cx16.r15
.25dc	a5 7c			lda  P8ZP_SCRATCH_W1
.25de	a4 7d			ldy  P8ZP_SCRATCH_W1+1
.25e0	60			rts
.25e1			internal_ubyte2decimal
.25e1	a0 2f		        ldy #'0'-1
.25e3	a2 3a		        ldx #'9'+1
.25e5	38		        sec
.25e6	c8		-       iny
.25e7	e9 64		        sbc #100
.25e9	b0 fb		        bcs -
.25eb	ca		-       dex
.25ec	69 0a		        adc #10
.25ee	30 fb		        bmi -
.25f0	69 2f		        adc #'0'-1
.25f2	60		        rts
.25f3			internal_uword2decimal
=$30			ASCII_0_OFFSET 	= $30
=122			temp       	    = P8ZP_SCRATCH_B1	; byte in zeropage
=124			hexHigh      	= P8ZP_SCRATCH_W1	; byte in zeropage
=125			hexLow       	= P8ZP_SCRATCH_W1+1	; byte in zeropage
.25f3			HexToDec65535
.25f3	84 7c		    sty    hexHigh               ;3  @9
.25f5	85 7d		    sta    hexLow                ;3  @12
.25f7	98		    tya
.25f8	aa		    tax                          ;2  @14
.25f9	4a		    lsr    a                     ;2  @16
.25fa	4a		    lsr    a                     ;2  @18   integer divide 1024 (result 0-63)
.25fb	e0 a7		    cpx    #$A7                  ;2  @20   account for overflow of multiplying 24 from 43,000 ($A7F8) onward,
.25fd	69 01		    adc    #1                    ;2  @22   we can just round it to $A700, and the divide by 1024 is fine...
.25ff	85 7a		    sta    temp                  ;3  @25
.2601	0a		    asl    a                     ;2  @27
.2602	65 7a		    adc    temp                  ;3  @30  x3
.2604	a8		    tay                          ;2  @32
.2605	4a		    lsr    a                     ;2  @34
.2606	4a		    lsr    a                     ;2  @36
.2607	4a		    lsr    a                     ;2  @38
.2608	4a		    lsr    a                     ;2  @40
.2609	4a		    lsr    a                     ;2  @42
.260a	aa		    tax                          ;2  @44
.260b	98		    tya                          ;2  @46
.260c	0a		    asl    a                     ;2  @48
.260d	0a		    asl    a                     ;2  @50
.260e	0a		    asl    a                     ;2  @52
.260f	18		    clc                          ;2  @54
.2610	65 7d		    adc    hexLow                ;3  @57
.2612	85 7d		    sta    hexLow                ;3  @60
.2614	8a		    txa                          ;2  @62
.2615	65 7c		    adc    hexHigh               ;3  @65
.2617	85 7c		    sta    hexHigh               ;3  @68
.2619	6a		    ror    a                     ;2  @70
.261a	4a		    lsr    a                     ;2  @72
.261b	a8		    tay                          ;2  @74    integer divide 1,000 (result 0-65)
.261c	4a		    lsr    a                     ;2  @76    split the 1,000 and 10,000 digit
.261d	aa		    tax                          ;2  @78
.261e	bd 8b 26	    lda    ShiftedBcdTab,x       ;4  @82
.2621	aa		    tax                          ;2  @84
.2622	2a		    rol    a                     ;2  @86
.2623	29 0f		    and    #$0F                  ;2  @88
.2625	09 30		    ora    #ASCII_0_OFFSET
.2627	8d be 26	    sta    decThousands          ;3  @91
.262a	8a		    txa                          ;2  @93
.262b	4a		    lsr    a                     ;2  @95
.262c	4a		    lsr    a                     ;2  @97
.262d	4a		    lsr    a                     ;2  @99
.262e	09 30		    ora    #ASCII_0_OFFSET
.2630	8d bd 26	    sta    decTenThousands       ;3  @102
.2633	a5 7d		    lda    hexLow                ;3  @105
.2635	c4 7a		    cpy    temp                  ;3  @108
.2637	30 04		    bmi    _doSubtract           ;2³ @110/111
.2639	f0 06		    beq    _useZero               ;2³ @112/113
.263b	69 2f		    adc    #23 + 24              ;2  @114
.263d			_doSubtract
.263d	e9 17		    sbc    #23                   ;2  @116
.263f	85 7d		    sta    hexLow                ;3  @119
.2641			_useZero
.2641	a5 7c		    lda    hexHigh               ;3  @122
.2643	e9 00		    sbc    #0                    ;2  @124
.2645			Start100s
.2645	29 03		    and    #$03                  ;2  @126
.2647	aa		    tax                          ;2  @128   0,1,2,3
.2648	c9 02		    cmp    #2                    ;2  @130
.264a	2a		    rol    a                     ;2  @132   0,2,5,7
.264b	09 30		    ora    #ASCII_0_OFFSET
.264d	a8		    tay                          ;2  @134   Y = Hundreds digit
.264e	a5 7d		    lda    hexLow                ;3  @137
.2650	7d 87 26	    adc    Mod100Tab,x           ;4  @141    adding remainder of 256, 512, and 256+512 (all mod 100)
.2653	b0 04		    bcs    hex_doSub200             ;2³ @143/144
.2655			hex_try200
.2655	c9 c8		    cmp    #200                  ;2  @145
.2657	90 04		    bcc    hex_try100               ;2³ @147/148
.2659			hex_doSub200
.2659	c8		    iny                          ;2  @149
.265a	c8		    iny                          ;2  @151
.265b	e9 c8		    sbc    #200                  ;2  @153
.265d			hex_try100
.265d	c9 64		    cmp    #100                  ;2  @155
.265f	90 03		    bcc    HexToDec99            ;2³ @157/158
.2661	c8		    iny                          ;2  @159
.2662	e9 64		    sbc    #100                  ;2  @161
.2664			HexToDec99
.2664	4a		    lsr    a                     ;2  @163
.2665	aa		    tax                          ;2  @165
.2666	bd 8b 26	    lda    ShiftedBcdTab,x       ;4  @169
.2669	aa		    tax                          ;2  @171
.266a	2a		    rol    a                     ;2  @173
.266b	29 0f		    and    #$0F                  ;2  @175
.266d	09 30		    ora    #ASCII_0_OFFSET
.266f	8d c1 26	    sta    decOnes               ;3  @178
.2672	8a		    txa                          ;2  @180
.2673	4a		    lsr    a                     ;2  @182
.2674	4a		    lsr    a                     ;2  @184
.2675	4a		    lsr    a                     ;2  @186
.2676	09 30		    ora    #ASCII_0_OFFSET
.2678	8c bf 26	    sty  decHundreds
.267b	8d c0 26	    sta  decTens
.267e	ae c1 26	    ldx  decOnes
.2681	60		    rts                          ;6  @192   Y=hundreds, A = tens digit, X=ones digit
.2682			HexToDec999
.2682	84 7d		    sty    hexLow                ;3  @9
.2684	4c 45 26	    jmp    Start100s             ;3  @12
.2687			Mod100Tab
>2687	00 38 0c 44	    .byte 0,56,12,56+12
.268b			ShiftedBcdTab
>268b	00 01 02 03	    .byte $00,$01,$02,$03,$04,$08,$09,$0A,$0B,$0C
>268f	04 08 09 0a 0b 0c
>2695	10 11 12 13	    .byte $10,$11,$12,$13,$14,$18,$19,$1A,$1B,$1C
>2699	14 18 19 1a 1b 1c
>269f	20 21 22 23	    .byte $20,$21,$22,$23,$24,$28,$29,$2A,$2B,$2C
>26a3	24 28 29 2a 2b 2c
>26a9	30 31 32 33	    .byte $30,$31,$32,$33,$34,$38,$39,$3A,$3B,$3C
>26ad	34 38 39 3a 3b 3c
>26b3	40 41 42 43	    .byte $40,$41,$42,$43,$44,$48,$49,$4A,$4B,$4C
>26b7	44 48 49 4a 4b 4c
>26bd	00		decTenThousands   	.byte  0
>26be	00		decThousands    	.byte  0
>26bf	00		decHundreds		.byte  0
>26c0	00		decTens			.byte  0
>26c1	00		decOnes   		.byte  0
>26c2	00					.byte  0		; zero-terminate the decimal output string
.26c3			internal_ubyte2hex
.26c3	48				pha
.26c4	29 0f				and  #$0f
.26c6	aa				tax
.26c7	bc d4 26			ldy  _hex_digits,x
.26ca	68				pla
.26cb	4a				lsr  a
.26cc	4a				lsr  a
.26cd	4a				lsr  a
.26ce	4a				lsr  a
.26cf	aa				tax
.26d0	bd d4 26			lda  _hex_digits,x
.26d3	60				rts
>26d4	30 31 32 33	_hex_digits	.text "0123456789abcdef"	; can probably be reused for other stuff as well
>26d8	34 35 36 37 38 39 41 42 43 44 45 46
.26e4			diskio
=12				READ_IO_CHANNEL = 12
=13				WRITE_IO_CHANNEL = 13
>5c9b			drivenumber	.byte  ?
>5c9c			iteration_in_progress	.byte  ?
>5c9d			list_blocks	.word  ?
>5c9f			list_pattern	.word  ?
>5ca1			list_skip_disk_name	.byte  ?
.26e4			list_filename
>26e4	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>26e8	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>26f4	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>26f8	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>2704	3f 3f 3f 3f		.byte  $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f, $3f
>2708	3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f 3f
>2714	3f 3f 00		.byte  $3f, $3f, $00
.2717			list_filetype
>2717	3f 3f 3f 00		.byte  $3f, $3f, $3f, $00
.271b			lf_start_list
.271b	8d a3 5c		sta  pattern_ptr
.271e	8c a4 5c		sty  pattern_ptr+1
.2721	20 56 28		jsr  diskio.lf_end_list
.2724	ad a3 5c		lda  pattern_ptr
.2727	ac a4 5c		ldy  pattern_ptr+1
.272a	8d 9f 5c		sta  diskio.list_pattern
.272d	8c a0 5c		sty  diskio.list_pattern+1
.2730	a9 01			lda  #1
.2732	8d a1 5c		sta  diskio.list_skip_disk_name
.2735	8d 9c 5c		sta  diskio.iteration_in_progress
.2738	a0 21			ldy  #>prog8_interned_strings.string_77
.273a	a2 90			ldx  #<prog8_interned_strings.string_77
.273c	a9 01			lda  #1
.273e	20 bd ff		jsr  cbm.SETNAM
.2741	a0 00			ldy  #0
.2743	ae 9b 5c		ldx  diskio.drivenumber
.2746	a9 0c			lda  #12
.2748	20 ba ff		jsr  cbm.SETLFS
.274b	20 c0 ff		jsr  cbm.OPEN
.274e	b0 1c			bcs  io_error
.2750	a2 0c			ldx  #12
.2752	20 c6 ff		jsr  cbm.CHKIN
.2755	a9 04			lda  #4
.2757	8d a2 5c		sta  label_asm_246_counter
.275a			label_asm_245_repeat
.275a	20 cf ff		jsr  cbm.CHRIN
.275d	ce a2 5c		dec  label_asm_246_counter
.2760	d0 f8			bne  label_asm_245_repeat
.2762	20 b7 ff		jsr  cbm.READST
.2765	c9 00			cmp  #0
.2767	d0 03			bne  label_asm_247_afterif
.2769	a9 01			lda  #1
.276b	60			rts
.276c			label_asm_247_afterif
.276c			io_error
.276c	a9 0c			lda  #12
.276e	20 c3 ff		jsr  cbm.CLOSE
.2771	20 56 28		jsr  diskio.lf_end_list
.2774	a9 00			lda  #0
.2776	60			rts
>5ca2			label_asm_246_counter    .byte  ?
>5ca3			pattern_ptr	.word  ?
.2777			lf_next_entry
.2777	ad 9c 5c		lda  diskio.iteration_in_progress
.277a	d0 03			bne  label_asm_248_afterif
.277c	a9 00			lda  #0
.277e	60			rts
.277f			label_asm_248_afterif
.277f			label_43_repeat
.277f	a2 0c			ldx  #12
.2781	20 c6 ff		jsr  cbm.CHKIN
.2784	a9 e4			lda  #<diskio.list_filename
.2786	a0 26			ldy  #>diskio.list_filename
.2788	8d a8 5c		sta  nameptr
.278b	8c a9 5c		sty  nameptr+1
.278e	20 cf ff		jsr  cbm.CHRIN
.2791	8d a5 5c		sta  blocks_lsb
.2794	20 cf ff		jsr  cbm.CHRIN
.2797	8d a6 5c		sta  blocks_msb
.279a	20 b7 ff		jsr  cbm.READST
.279d	c9 00			cmp  #0
.279f	f0 03			bne  close_end
.27a1	4c 50 28
.27a4	ad a5 5c		lda  blocks_lsb
.27a7	ac a6 5c		ldy  blocks_msb
.27aa	8d 9d 5c		sta  diskio.list_blocks
.27ad	8c 9e 5c		sty  diskio.list_blocks+1
.27b0			label_35_whileloop
.27b0	20 cf ff		jsr  cbm.CHRIN
.27b3	c9 22			cmp  #34
.27b5	f0 09			beq  label_36_afterwhile
.27b7	20 b7 ff		jsr  cbm.READST
.27ba	c9 00			cmp  #0
.27bc	d0 e3			bne  close_end
.27be	80 f0			bra  label_35_whileloop
.27c0			label_36_afterwhile
.27c0			label_39_repeat
.27c0	20 cf ff		jsr  cbm.CHRIN
.27c3	8d a7 5c		sta  character
.27c6	ad a7 5c		lda  character
.27c9	f0 20			beq  label_37_after
.27cb	ad a7 5c		lda  character
.27ce	c9 22			cmp  #34
.27d0	f0 19			beq  label_38_after
.27d2	ad a7 5c		lda  character
.27d5	ac a8 5c		ldy  nameptr
.27d8	84 7e			sty  P8ZP_SCRATCH_W2
.27da	ac a9 5c		ldy  nameptr+1
.27dd	84 7f			sty  P8ZP_SCRATCH_W2+1
.27df	92 7e			sta  (P8ZP_SCRATCH_W2)
.27e1	ee a8 5c		inc  nameptr
.27e4	d0 03			bne  +
.27e6	ee a9 5c		inc  nameptr+1
.27e9			+
.27e9	80 d5			bra  label_39_repeat
.27eb			label_38_after
.27eb			label_37_after
.27eb	a9 00			lda  #0
.27ed	ac a8 5c		ldy  nameptr
.27f0	84 7e			sty  P8ZP_SCRATCH_W2
.27f2	ac a9 5c		ldy  nameptr+1
.27f5	84 7f			sty  P8ZP_SCRATCH_W2+1
.27f7	92 7e			sta  (P8ZP_SCRATCH_W2)
.27f9			label_40_untilloop
.27f9	20 cf ff		jsr  cbm.CHRIN
.27fc	85 20			sta  cx16.r15L
.27fe	c9 20			cmp  #32
.2800	f0 f7			beq  label_40_untilloop
.2802	a5 20			lda  cx16.r15L
.2804	8d 17 27		sta  diskio.list_filetype+0
.2807	20 cf ff		jsr  cbm.CHRIN
.280a	8d 18 27		sta  diskio.list_filetype+1
.280d	20 cf ff		jsr  cbm.CHRIN
.2810	8d 19 27		sta  diskio.list_filetype+2
.2813			label_41_whileloop
.2813	20 cf ff		jsr  cbm.CHRIN
.2816	c9 00			cmp  #0
.2818	f0 02			beq  label_42_afterwhile
.281a	80 f7			bra  label_41_whileloop
.281c			label_42_afterwhile
.281c	20 cf ff		jsr  cbm.CHRIN
.281f	20 cf ff		jsr  cbm.CHRIN
.2822	ad a1 5c		lda  diskio.list_skip_disk_name
.2825	d0 23			bne  label_asm_249_afterif
.2827	ad 9f 5c		lda  diskio.list_pattern
.282a	0d a0 5c		ora  diskio.list_pattern+1
.282d	d0 03			bne  label_asm_250_afterif
.282f	a9 01			lda  #1
.2831	60			rts
.2832			label_asm_250_afterif
.2832	ad 9f 5c		lda  diskio.list_pattern
.2835	85 02			sta  cx16.r0
.2837	ad a0 5c		lda  diskio.list_pattern+1
.283a	85 03			sta  cx16.r0+1
.283c	a0 26			ldy  #>diskio.list_filename
.283e	a9 e4			lda  #<diskio.list_filename
.2840	20 97 28		jsr  string.pattern_match
.2843	c9 00			cmp  #0
.2845	f0 03			beq  label_asm_251_afterif
.2847	a9 01			lda  #1
.2849	60			rts
.284a			label_asm_251_afterif
.284a			label_asm_249_afterif
.284a	9c a1 5c		stz  diskio.list_skip_disk_name
.284d	4c 7f 27		bra  label_43_repeat
.2850			close_end
.2850	20 56 28		jsr  diskio.lf_end_list
.2853	a9 00			lda  #0
.2855	60			rts
>5ca5			blocks_lsb	.byte  ?
>5ca6			blocks_msb	.byte  ?
>5ca7			character	.byte  ?
>5ca8			nameptr	.word  ?
.2856			lf_end_list
.2856	ad 9c 5c		lda  diskio.iteration_in_progress
.2859	f0 0b			beq  label_asm_252_afterif
.285b	20 cc ff		jsr  cbm.CLRCHN
.285e	a9 0c			lda  #12
.2860	20 c3 ff		jsr  cbm.CLOSE
.2863	9c 9c 5c		stz  diskio.iteration_in_progress
.2866			label_asm_252_afterif
.2866	60			rts
.2867			prog8_init_vars
.2867	a9 08			lda  #8
.2869	8d 9b 5c		sta  diskio.drivenumber
.286c	9c a1 5c		stz  diskio.list_skip_disk_name
.286f	9c 9c 5c		stz  diskio.iteration_in_progress
.2872	60			rts
.2873			string
.2873			length
.2873	85 7c				sta  P8ZP_SCRATCH_W1
.2875	84 7d				sty  P8ZP_SCRATCH_W1+1
.2877	a0 00				ldy  #0
.2879	b1 7c		-		lda  (P8ZP_SCRATCH_W1),y
.287b	f0 03				beq  +
.287d	c8				iny
.287e	d0 f9				bne  -
.2880	60		+		rts
.2881			copy
.2881	85 7c				sta  P8ZP_SCRATCH_W1
.2883	84 7d				sty  P8ZP_SCRATCH_W1+1
.2885	a5 02				lda  cx16.r0
.2887	a4 03				ldy  cx16.r0+1
.2889	4c 12 5c			jmp  prog8_lib.strcpy
.288c			compare
.288c	85 7e				sta  P8ZP_SCRATCH_W2
.288e	84 7f				sty  P8ZP_SCRATCH_W2+1
.2890	a5 02				lda  cx16.r0
.2892	a4 03				ldy  cx16.r0+1
.2894	4c 20 5c			jmp  prog8_lib.strcmp_mem
.2897			pattern_match
=124			strptr = P8ZP_SCRATCH_W1
.2897	85 7c			sta  strptr
.2899	84 7d			sty  strptr+1
.289b	a5 02			lda  cx16.r0
.289d	8d b7 28		sta  modify_pattern1+1
.28a0	8d d2 28		sta  modify_pattern2+1
.28a3	a5 03			lda  cx16.r0+1
.28a5	8d b8 28		sta  modify_pattern1+2
.28a8	8d d3 28		sta  modify_pattern2+2
.28ab	20 b2 28		jsr  _match
.28ae	a9 00			lda  #0
.28b0	2a			rol  a
.28b1	60			rts
.28b2			_match
.28b2	a2 00			ldx #$00        ; x is an index in the pattern
.28b4	a0 ff			ldy #$ff        ; y is an index in the string
.28b6			modify_pattern1
.28b6	bd ff ff	next    lda $ffff,x   ; look at next pattern character    MODIFIED
.28b9	c9 2a			cmp #'*'     ; is it a star?
.28bb	f0 13			beq star        ; yes, do the complicated stuff
.28bd	c8			iny             ; no, let's look at the string
.28be	c9 3f			cmp #'?'     ; is the pattern caracter a ques?
.28c0	d0 04			bne reg         ; no, it's a regular character
.28c2	b1 7c			lda (strptr),y     ; yes, so it will match anything
.28c4	f0 22			beq fail        ;  except the end of string
.28c6	d1 7c		reg     cmp (strptr),y     ; are both characters the same?
.28c8	d0 1e			bne fail        ; no, so no match
.28ca	e8			inx             ; yes, keep checking
.28cb	c9 00			cmp #0          ; are we at end of string?
.28cd	d0 e7			bne next        ; not yet, loop
.28cf	60		found   rts             ; success, return with c=1
.28d0	e8		star    inx             ; skip star in pattern
.28d1			modify_pattern2
.28d1	dd ff ff		cmp $ffff,x   	; string of stars equals one star	MODIFIED
.28d4	f0 fa			beq star        ;  so skip them also
.28d6	8a		stloop  txa             ; we first try to match with * = ""
.28d7	48			pha             ;  and grow it by 1 character every
.28d8	98			tya             ;  time we loop
.28d9	48			pha             ; save x and y on stack
.28da	20 b6 28		jsr next        ; recursive call
.28dd	68			pla             ; restore x and y
.28de	a8			tay
.28df	68			pla
.28e0	aa			tax
.28e1	b0 ec			bcs found       ; we found a match, return with c=1
.28e3	c8			iny             ; no match yet, try to grow * string
.28e4	b1 7c			lda (strptr),y     ; are we at the end of string?
.28e6	d0 ee			bne stloop      ; not yet, add a character
.28e8	18		fail    clc             ; yes, no match found, return with c=0
.28e9	60			rts
.28ea			hash
.28ea	a9 b3		            lda  #179
.28ec	85 7b		            sta  P8ZP_SCRATCH_REG
.28ee	a0 00		            ldy  #0
.28f0	18		            clc
.28f1	b1 02		-           lda  (cx16.r0),y
.28f3	f0 09		            beq  +
.28f5	26 7b		            rol  P8ZP_SCRATCH_REG
.28f7	45 7b		            eor  P8ZP_SCRATCH_REG
.28f9	85 7b		            sta  P8ZP_SCRATCH_REG
.28fb	c8		            iny
.28fc	d0 f3		            bne  -
.28fe	a5 7b		+           lda  P8ZP_SCRATCH_REG
.2900	60		            rts
.2901			isdigit
.2901	c9 30		            cmp  #'0'
.2903	b0 01		            bcs  +
.2905	60		            rts
.2906	c9 3a		+           cmp  #'9'+1
.2908	90 02		            bcc  +
.290a	18		            clc
.290b	60		            rts
.290c	38		+           sec
.290d	60		            rts
.290e			isupper
.290e	c9 61		            cmp  #97
.2910	b0 01		            bcs  +
.2912	60		            rts
.2913	c9 7b		+           cmp  #122+1
.2915	90 0b		            bcc  _yes
.2917	c9 c1		            cmp  #193
.2919	b0 01		            bcs  +
.291b	60		            rts
.291c	c9 db		+           cmp  #218+1
.291e	90 02		            bcc  _yes
.2920	18		            clc
.2921	60		            rts
.2922	38		_yes        sec
.2923	60		            rts
.2924			islower
.2924	c9 41		            cmp  #'a'
.2926	b0 01		            bcs  +
.2928	60		            rts
.2929	c9 5b		+           cmp  #'z'+1
.292b	90 02		            bcc  +
.292d	18		            clc
.292e	60		            rts
.292f	38		+           sec
.2930	60		            rts
.2931			isletter
.2931	20 24 29	            jsr  islower
.2934	b0 03		            bcs  +
.2936	4c 0e 29	            jmp  isupper
.2939	60		+           rts
.293a			isspace
.293a	c9 20		            cmp  #32
.293c	f0 16		            beq  +
.293e	c9 0d		            cmp  #13
.2940	f0 12		            beq  +
.2942	c9 09		            cmp  #9
.2944	f0 0e		            beq  +
.2946	c9 0a		            cmp  #10
.2948	f0 0a		            beq  +
.294a	c9 8d		            cmp  #141
.294c	f0 06		            beq  +
.294e	c9 a0		            cmp  #160
.2950	f0 02		            beq  +
.2952	18		            clc
.2953	60		            rts
.2954	38		+           sec
.2955	60		            rts
.2956			isprint
.2956	c9 a0		            cmp  #160
.2958	90 01		            bcc  +
.295a	60		            rts
.295b	c9 20		+           cmp  #32
.295d	b0 01		            bcs  +
.295f	60		            rts
.2960	c9 80		+           cmp  #128
.2962	90 02		            bcc  +
.2964	18		            clc
.2965	60		            rts
.2966	38		+           sec
.2967	60		            rts
.2968			strip
=39			s 	= 39 	; zp UWORD
.2968	85 27			sta  s
.296a	84 28			sty  s+1
.296c	20 76 29		jsr  string.rstrip
.296f	a4 28			ldy  s+1
.2971	a5 27			lda  s
.2973	4c bd 29		jmp  string.lstrip
.2976			rstrip
=41			s 	= 41 	; zp UWORD
.2976	85 29			sta  s
.2978	84 2a			sty  s+1
.297a	b2 29			lda  (s)
.297c	d0 01			bne  label_asm_253_afterif
.297e	60			rts
.297f			label_asm_253_afterif
.297f	a4 2a			ldy  s+1
.2981	a5 29			lda  s
.2983	20 73 28		jsr  string.length
.2986	84 02			sty  cx16.r0L
.2988			label_69_untilloop
.2988	c6 02			dec  cx16.r0L
.298a	a4 02			ldy  cx16.r0L
.298c	b1 29			lda  (s),y
.298e	85 04			sta  cx16.r1L
.2990	a5 02			lda  cx16.r0L
.2992	f0 02			beq  +
.2994	a9 01			lda  #1
.2996	49 01		+                           eor  #1
.2998	d0 14			bne  label_asm_254_shortcut
.299a	a5 04			lda  cx16.r1L
.299c	20 56 29		jsr  string.isprint
.299f	a9 00			lda  #0
.29a1	2a			rol  a
.29a2	f0 0a			beq  label_asm_255_shortcut
.29a4	a5 04			lda  cx16.r1L
.29a6	20 3a 29		jsr  string.isspace
.29a9	a9 00			lda  #0
.29ab	2a			rol  a
.29ac	49 01			eor  #1
.29ae			label_asm_255_shortcut
.29ae			label_asm_254_shortcut
.29ae	f0 d8			beq  label_69_untilloop
.29b0	a9 00			lda  #0
.29b2	48			pha
.29b3	a5 02			lda  cx16.r0L
.29b5	18			clc
.29b6	69 01			adc  #1
.29b8	a8			tay
.29b9	68			pla
.29ba	91 29			sta  (s),y
.29bc	60			rts
.29bd			lstrip
=45			s 	= 45 	; zp UWORD
.29bd	85 2d			sta  s
.29bf	84 2e			sty  s+1
.29c1	20 da 29		jsr  string.lstripped
.29c4	85 02			sta  cx16.r0
.29c6	84 03			sty  cx16.r0+1
.29c8	c5 2d			cmp  string.lstrip.s
.29ca	d0 06			bne  +
.29cc	a5 03			lda  cx16.r0+1
.29ce	c5 2e			cmp  string.lstrip.s+1
.29d0	f0 07			beq  label_asm_256_afterif
.29d2			+
.29d2	a4 2e			ldy  s+1
.29d4	a5 2d			lda  s
.29d6	20 81 28		jsr  string.copy
.29d9			label_asm_256_afterif
.29d9	60			rts
.29da			lstripped
=43			s 	= 43 	; zp UWORD
.29da	85 2b			sta  s
.29dc	84 2c			sty  s+1
.29de	b2 2b			lda  (s)
.29e0	d0 05			bne  label_asm_257_afterif
.29e2	a4 2c			ldy  s+1
.29e4	a5 2b			lda  s
.29e6	60			rts
.29e7			label_asm_257_afterif
.29e7	a9 ff			lda  #$ff
.29e9	85 02			sta  cx16.r0L
.29eb			label_70_untilloop
.29eb	e6 02			inc  cx16.r0L
.29ed	a4 02			ldy  cx16.r0L
.29ef	b1 2b			lda  (s),y
.29f1	85 04			sta  cx16.r1L
.29f3	c9 00			cmp  #0
.29f5	f0 02			beq  +
.29f7	a9 01			lda  #1
.29f9	49 01		+                           eor  #1
.29fb	d0 14			bne  label_asm_258_shortcut
.29fd	a5 04			lda  cx16.r1L
.29ff	20 56 29		jsr  string.isprint
.2a02	a9 00			lda  #0
.2a04	2a			rol  a
.2a05	f0 0a			beq  label_asm_259_shortcut
.2a07	a5 04			lda  cx16.r1L
.2a09	20 3a 29		jsr  string.isspace
.2a0c	a9 00			lda  #0
.2a0e	2a			rol  a
.2a0f	49 01			eor  #1
.2a11			label_asm_259_shortcut
.2a11			label_asm_258_shortcut
.2a11	f0 d8			beq  label_70_untilloop
.2a13	a4 2c			ldy  s+1
.2a15	a5 2b			lda  s
.2a17	18			clc
.2a18	65 02			adc  cx16.r0L
.2a1a	90 01			bcc  +
.2a1c	c8			iny
.2a1d			+
.2a1d	60			rts
.2a1e			p8b_runcmd
.2a1e			p8s_do_flupp
.2a1e	a0 21			ldy  #>prog8_interned_strings.string_82
.2a20	a9 96			lda  #<prog8_interned_strings.string_82
.2a22	20 32 24		jsr  txt.print
.2a25	a9 0d			lda  #13
.2a27	4c d2 ff		jmp  txt.chrout
.2a2a			p8s_do_cls
.2a2a	ad 60 5c		lda  p8b_main.p8v_graphmode
.2a2d	c9 01			cmp  #1
.2a2f	d0 10			bne  label_asm_261_else
.2a31	ad 5b 5c		lda  p8b_main.p8v_fgcolor
.2a34	ac 5a 5c		ldy  p8b_main.p8v_bgcolor
.2a37	20 0f 31		jsr  p8b_graphics.p8s_clear_screen
.2a3a	a9 93			lda  #$93
.2a3c	20 d2 ff		jsr  txt.chrout
.2a3f	80 05			bra  label_asm_260_afterif
.2a41			label_asm_261_else
.2a41	a9 93			lda  #$93
.2a43	20 d2 ff		jsr  txt.chrout
.2a46			label_asm_260_afterif
.2a46	60			rts
.2a47			p8s_do_get
.2a47	9c aa 5c		stz  p8v_r
.2a4a	9c ab 5c		stz  p8v_v
.2a4d	20 f5 19		jsr  p8b_main.p8s_next
.2a50	8d aa 5c		sta  p8v_r
.2a53	20 f5 19		jsr  p8b_main.p8s_next
.2a56	8d aa 5c		sta  p8v_r
.2a59	20 2c 24		jsr  txt.waitkey
.2a5c	8d ab 5c		sta  p8v_v
.2a5f	60			rts
>5caa			p8v_r	.byte  ?
>5cab			p8v_v	.byte  ?
.2a60			p8s_do_len
.2a60	9c ac 5c		stz  p8v_r
.2a63	9c ad 5c		stz  p8v_v
.2a66	9c ae 5c		stz  p8v_v+1
.2a69	20 f5 19		jsr  p8b_main.p8s_next
.2a6c	8d ac 5c		sta  p8v_r
.2a6f	20 f5 19		jsr  p8b_main.p8s_next
.2a72	8d ac 5c		sta  p8v_r
.2a75	c9 34			cmp  #52
.2a77	d0 11			bne  label_asm_263_else
.2a79	20 f5 19		jsr  p8b_main.p8s_next
.2a7c	8d ac 5c		sta  p8v_r
.2a7f	20 9a 4f		jsr  p8b_jdarrvars.p8s_get_len
.2a82	8d ad 5c		sta  p8v_v
.2a85	8c ae 5c		sty  p8v_v+1
.2a88	80 0d			bra  label_asm_262_afterif
.2a8a			label_asm_263_else
.2a8a	ad ac 5c		lda  p8v_r
.2a8d	c9 35			cmp  #53
.2a8f	d0 06			bne  label_asm_264_afterif
.2a91	20 f5 19		jsr  p8b_main.p8s_next
.2a94	8d ac 5c		sta  p8v_r
.2a97			label_asm_264_afterif
.2a97			label_asm_262_afterif
.2a97	ac ae 5c		ldy  p8v_v+1
.2a9a	ad ad 5c		lda  p8v_v
.2a9d	60			rts
>5cac			p8v_r	.byte  ?
>5cad			p8v_v	.word  ?
.2a9e			p8s_do_joy
.2a9e	9c b0 5c		stz  p8v_r
.2aa1	9c af 5c		stz  p8v_a
.2aa4	20 f5 19		jsr  p8b_main.p8s_next
.2aa7	8d b0 5c		sta  p8v_r
.2aaa	20 f5 19		jsr  p8b_main.p8s_next
.2aad	8d b0 5c		sta  p8v_r
.2ab0	20 8c 37		jsr  p8b_apu.p8s_expr
.2ab3	8d af 5c		sta  p8v_a
.2ab6	20 56 ff		jsr  cx16.joystick_get
.2ab9	85 04			sta  cx16.r1
.2abb	86 05			stx  cx16.r1+1
.2abd	a4 05			ldy  cx16.r1+1
.2abf	60			rts
>5caf			p8v_a	.byte  ?
>5cb0			p8v_r	.byte  ?
.2ac0			p8s_do_peek
.2ac0	9c b3 5c		stz  p8v_r
.2ac3	9c b1 5c		stz  p8v_a
.2ac6	9c b2 5c		stz  p8v_a+1
.2ac9	9c b4 5c		stz  p8v_v
.2acc	9c b5 5c		stz  p8v_v+1
.2acf	20 f5 19		jsr  p8b_main.p8s_next
.2ad2	8d b3 5c		sta  p8v_r
.2ad5	20 8c 37		jsr  p8b_apu.p8s_expr
.2ad8	8d b1 5c		sta  p8v_a
.2adb	8c b2 5c		sty  p8v_a+1
.2ade	85 7c			sta  P8ZP_SCRATCH_W1
.2ae0	84 7d			sty  P8ZP_SCRATCH_W1+1
.2ae2	b2 7c			lda  (P8ZP_SCRATCH_W1)
.2ae4	8d b4 5c		sta  p8v_v
.2ae7	9c b5 5c		stz  p8v_v+1
.2aea	20 f5 19		jsr  p8b_main.p8s_next
.2aed	8d b3 5c		sta  p8v_r
.2af0	ac b5 5c		ldy  p8v_v+1
.2af3	ad b4 5c		lda  p8v_v
.2af6	60			rts
>5cb1			p8v_a	.word  ?
>5cb3			p8v_r	.byte  ?
>5cb4			p8v_v	.word  ?
.2af7			p8s_do_get_jiffi
.2af7	9c b6 5c		stz  p8v_r
.2afa	9c b7 5c		stz  p8v_v
.2afd	9c b8 5c		stz  p8v_v+1
.2b00	20 f5 19		jsr  p8b_main.p8s_next
.2b03	8d b6 5c		sta  p8v_r
.2b06	20 92 22		jsr  cbm.RDTIM16
.2b09	8d b7 5c		sta  p8v_v
.2b0c	8c b8 5c		sty  p8v_v+1
.2b0f	20 f5 19		jsr  p8b_main.p8s_next
.2b12	8d b6 5c		sta  p8v_r
.2b15	ac b8 5c		ldy  p8v_v+1
.2b18	ad b7 5c		lda  p8v_v
.2b1b	60			rts
>5cb6			p8v_r	.byte  ?
>5cb7			p8v_v	.word  ?
.2b1c			p8s_do_get_rnd
.2b1c	9c bb 5c		stz  p8v_r
.2b1f	9c b9 5c		stz  p8v_a
.2b22	9c ba 5c		stz  p8v_a+1
.2b25	9c bc 5c		stz  p8v_v
.2b28	9c bd 5c		stz  p8v_v+1
.2b2b	20 f5 19		jsr  p8b_main.p8s_next
.2b2e	8d bb 5c		sta  p8v_r
.2b31	20 f5 19		jsr  p8b_main.p8s_next
.2b34	8d bb 5c		sta  p8v_r
.2b37	c9 26			cmp  #38
.2b39	f0 19			beq  label_asm_265_afterif
.2b3b	20 8c 37		jsr  p8b_apu.p8s_expr
.2b3e	8d b9 5c		sta  p8v_a
.2b41	8c ba 5c		sty  p8v_a+1
.2b44	85 02			sta  cx16.r0
.2b46	ad ba 5c		lda  p8v_a+1
.2b49	85 03			sta  cx16.r0+1
.2b4b	ac ba 5c		ldy  p8v_a+1
.2b4e	ad b9 5c		lda  p8v_a
.2b51	20 df 5b		jsr  math.rndseed
.2b54			label_asm_265_afterif
.2b54	20 dc 5b		jsr  math.rndw
.2b57	8d bc 5c		sta  p8v_v
.2b5a	8c bd 5c		sty  p8v_v+1
.2b5d	60			rts
>5cb9			p8v_a	.word  ?
>5cbb			p8v_r	.byte  ?
>5cbc			p8v_v	.word  ?
.2b5e			p8s_do_get_pixel
.2b5e	9c c2 5c		stz  p8v_r
.2b61	9c be 5c		stz  p8v_a
.2b64	9c bf 5c		stz  p8v_a+1
.2b67	9c c0 5c		stz  p8v_b
.2b6a	9c c1 5c		stz  p8v_b+1
.2b6d	9c c3 5c		stz  p8v_v
.2b70	9c c4 5c		stz  p8v_v+1
.2b73	20 f5 19		jsr  p8b_main.p8s_next
.2b76	8d c2 5c		sta  p8v_r
.2b79	20 f5 19		jsr  p8b_main.p8s_next
.2b7c	8d c2 5c		sta  p8v_r
.2b7f	c9 26			cmp  #38
.2b81	f0 18			beq  label_asm_266_afterif
.2b83	20 8c 37		jsr  p8b_apu.p8s_expr
.2b86	8d be 5c		sta  p8v_a
.2b89	8c bf 5c		sty  p8v_a+1
.2b8c	20 f5 19		jsr  p8b_main.p8s_next
.2b8f	8d c2 5c		sta  p8v_r
.2b92	20 8c 37		jsr  p8b_apu.p8s_expr
.2b95	8d c0 5c		sta  p8v_b
.2b98	8c c1 5c		sty  p8v_b+1
.2b9b			label_asm_266_afterif
.2b9b	ad be 5c		lda  p8v_a
.2b9e	85 02			sta  cx16.r0
.2ba0	ad bf 5c		lda  p8v_a+1
.2ba3	85 03			sta  cx16.r0+1
.2ba5	ad c0 5c		lda  p8v_b
.2ba8	85 04			sta  cx16.r1
.2baa	ad c1 5c		lda  p8v_b+1
.2bad	85 05			sta  cx16.r1+1
.2baf	20 ff fe		jsr  cx16.FB_cursor_position
.2bb2	20 05 ff		jsr  cx16.FB_get_pixel
.2bb5	8d c3 5c		sta  p8v_v
.2bb8	9c c4 5c		stz  p8v_v+1
.2bbb	ac c4 5c		ldy  p8v_v+1
.2bbe	ad c3 5c		lda  p8v_v
.2bc1	60			rts
>5cbe			p8v_a	.word  ?
>5cc0			p8v_b	.word  ?
>5cc2			p8v_r	.byte  ?
>5cc3			p8v_v	.word  ?
.2bc2			p8s_do_poke
.2bc2	9c c7 5c		stz  p8v_r
.2bc5	9c c5 5c		stz  p8v_a
.2bc8	9c c6 5c		stz  p8v_a+1
.2bcb	9c c8 5c		stz  p8v_v
.2bce	9c c9 5c		stz  p8v_v+1
.2bd1	20 f5 19		jsr  p8b_main.p8s_next
.2bd4	8d c7 5c		sta  p8v_r
.2bd7	20 8c 37		jsr  p8b_apu.p8s_expr
.2bda	8d c5 5c		sta  p8v_a
.2bdd	8c c6 5c		sty  p8v_a+1
.2be0	20 f5 19		jsr  p8b_main.p8s_next
.2be3	8d c7 5c		sta  p8v_r
.2be6	20 8c 37		jsr  p8b_apu.p8s_expr
.2be9	8d c8 5c		sta  p8v_v
.2bec	8c c9 5c		sty  p8v_v+1
.2bef	ac c5 5c		ldy  p8v_a
.2bf2	84 7e			sty  P8ZP_SCRATCH_W2
.2bf4	ac c6 5c		ldy  p8v_a+1
.2bf7	84 7f			sty  P8ZP_SCRATCH_W2+1
.2bf9	92 7e			sta  (P8ZP_SCRATCH_W2)
.2bfb	a5 22			lda  p8b_main.p8v_pcode
.2bfd	d0 02			bne  +
.2bff	c6 23			dec  p8b_main.p8v_pcode+1
.2c01	c6 22		+                           dec  p8b_main.p8v_pcode
.2c03	60			rts
>5cc5			p8v_a	.word  ?
>5cc7			p8v_r	.byte  ?
>5cc8			p8v_v	.word  ?
.2c04			p8s_do_vpeek
=1				p8c_b = 1
.2c04	9c cc 5c		stz  p8v_r
.2c07	9c ca 5c		stz  p8v_a
.2c0a	9c cb 5c		stz  p8v_a+1
.2c0d	9c cd 5c		stz  p8v_v
.2c10	9c ce 5c		stz  p8v_v+1
.2c13	20 f5 19		jsr  p8b_main.p8s_next
.2c16	8d cc 5c		sta  p8v_r
.2c19	20 8c 37		jsr  p8b_apu.p8s_expr
.2c1c	8d ca 5c		sta  p8v_a
.2c1f	8c cb 5c		sty  p8v_a+1
.2c22	ae ca 5c		ldx  p8v_a
.2c25	a9 01			lda  #1
.2c27	20 9a 22		jsr  cx16.vpeek
.2c2a	8d cd 5c		sta  p8v_v
.2c2d	9c ce 5c		stz  p8v_v+1
.2c30	20 f5 19		jsr  p8b_main.p8s_next
.2c33	8d cc 5c		sta  p8v_r
.2c36	ac ce 5c		ldy  p8v_v+1
.2c39	ad cd 5c		lda  p8v_v
.2c3c	60			rts
>5cca			p8v_a	.word  ?
>5ccc			p8v_r	.byte  ?
>5ccd			p8v_v	.word  ?
.2c3d			p8s_do_vpoke
.2c3d	9c d1 5c		stz  p8v_r
.2c40	9c cf 5c		stz  p8v_a
.2c43	9c d0 5c		stz  p8v_a+1
.2c46	9c d2 5c		stz  p8v_v
.2c49	9c d3 5c		stz  p8v_v+1
.2c4c	20 f5 19		jsr  p8b_main.p8s_next
.2c4f	8d d1 5c		sta  p8v_r
.2c52	20 8c 37		jsr  p8b_apu.p8s_expr
.2c55	8d cf 5c		sta  p8v_a
.2c58	8c d0 5c		sty  p8v_a+1
.2c5b	20 f5 19		jsr  p8b_main.p8s_next
.2c5e	8d d1 5c		sta  p8v_r
.2c61	20 8c 37		jsr  p8b_apu.p8s_expr
.2c64	8d d2 5c		sta  p8v_v
.2c67	8c d3 5c		sty  p8v_v+1
.2c6a	ad cf 5c	        lda  p8v_a
.2c6d	85 02		        sta  cx16.r0
.2c6f	ad d0 5c	        lda  p8v_a+1
.2c72	85 03		        sta  cx16.r0+1
.2c74	ac d2 5c	        ldy  p8v_v
.2c77	a9 01		        lda  #1
.2c79	9c 25 9f	        stz  cx16.VERA_CTRL
.2c7c	8d 22 9f	        sta  cx16.VERA_ADDR_H
.2c7f	a5 02		        lda  cx16.r0
.2c81	8d 20 9f	        sta  cx16.VERA_ADDR_L
.2c84	a5 03		        lda  cx16.r0+1
.2c86	8d 21 9f	        sta  cx16.VERA_ADDR_M
.2c89	8c 23 9f	        sty  cx16.VERA_DATA0
.2c8c	a5 22			lda  p8b_main.p8v_pcode
.2c8e	d0 02			bne  +
.2c90	c6 23			dec  p8b_main.p8v_pcode+1
.2c92	c6 22		+                           dec  p8b_main.p8v_pcode
.2c94	60			rts
>5ccf			p8v_a	.word  ?
>5cd1			p8v_r	.byte  ?
>5cd2			p8v_v	.word  ?
.2c95			p8s_do_color
.2c95	9c d5 5c		stz  p8v_r
.2c98	9c d4 5c		stz  p8v_a
.2c9b	9c d6 5c		stz  p8v_v
.2c9e	20 f5 19		jsr  p8b_main.p8s_next
.2ca1	8d d5 5c		sta  p8v_r
.2ca4	20 8c 37		jsr  p8b_apu.p8s_expr
.2ca7	8d d4 5c		sta  p8v_a
.2caa	b2 22			lda  (p8b_main.p8v_pcode)
.2cac	c9 1a			cmp  #26
.2cae	d0 3b			bne  label_asm_268_else
.2cb0	20 f5 19		jsr  p8b_main.p8s_next
.2cb3	8d d5 5c		sta  p8v_r
.2cb6	20 8c 37		jsr  p8b_apu.p8s_expr
.2cb9	8d d6 5c		sta  p8v_v
.2cbc	ad 60 5c		lda  p8b_main.p8v_graphmode
.2cbf	d0 0b			bne  label_asm_270_else
.2cc1	ad d4 5c		lda  p8v_a
.2cc4	ac d6 5c		ldy  p8v_v
.2cc7	20 d4 23		jsr  txt.color2
.2cca	80 15			bra  label_asm_269_afterif
.2ccc			label_asm_270_else
.2ccc	ad d4 5c		lda  p8v_a
.2ccf	8d 5b 5c		sta  p8b_main.p8v_fgcolor
.2cd2	ad d6 5c		lda  p8v_v
.2cd5	8d 5a 5c		sta  p8b_main.p8v_bgcolor
.2cd8	ad d4 5c		lda  p8v_a
.2cdb	ac d6 5c		ldy  p8v_v
.2cde	20 2d 31		jsr  p8b_graphics.p8s_colors
.2ce1			label_asm_269_afterif
.2ce1	a5 22			lda  p8b_main.p8v_pcode
.2ce3	d0 02			bne  +
.2ce5	c6 23			dec  p8b_main.p8v_pcode+1
.2ce7	c6 22		+                           dec  p8b_main.p8v_pcode
.2ce9	80 0e			bra  label_asm_267_afterif
.2ceb			label_asm_268_else
.2ceb	ad d4 5c		lda  p8v_a
.2cee	20 c6 23		jsr  txt.color
.2cf1	a5 22			lda  p8b_main.p8v_pcode
.2cf3	d0 02			bne  +
.2cf5	c6 23			dec  p8b_main.p8v_pcode+1
.2cf7	c6 22		+                           dec  p8b_main.p8v_pcode
.2cf9			label_asm_267_afterif
.2cf9	60			rts
>5cd4			p8v_a	.byte  ?
>5cd5			p8v_r	.byte  ?
>5cd6			p8v_v	.byte  ?
.2cfa			p8s_do_setchr
.2cfa	9c d9 5c		stz  p8v_r
.2cfd	9c d7 5c		stz  p8v_a
.2d00	9c d8 5c		stz  p8v_b
.2d03	9c da 5c		stz  p8v_v
.2d06	20 f5 19		jsr  p8b_main.p8s_next
.2d09	8d d9 5c		sta  p8v_r
.2d0c	20 8c 37		jsr  p8b_apu.p8s_expr
.2d0f	8d d7 5c		sta  p8v_a
.2d12	b2 22			lda  (p8b_main.p8v_pcode)
.2d14	c9 1a			cmp  #26
.2d16	d0 24			bne  label_asm_271_afterif
.2d18	20 f5 19		jsr  p8b_main.p8s_next
.2d1b	8d d9 5c		sta  p8v_r
.2d1e	20 8c 37		jsr  p8b_apu.p8s_expr
.2d21	8d d8 5c		sta  p8v_b
.2d24	20 f5 19		jsr  p8b_main.p8s_next
.2d27	8d d9 5c		sta  p8v_r
.2d2a	20 8c 37		jsr  p8b_apu.p8s_expr
.2d2d	8d da 5c		sta  p8v_v
.2d30	ac d8 5c		ldy  p8v_b
.2d33	ae d7 5c		ldx  p8v_a
.2d36	ad da 5c		lda  p8v_v
.2d39	20 f5 23		jsr  txt.setchr
.2d3c			label_asm_271_afterif
.2d3c	a5 22			lda  p8b_main.p8v_pcode
.2d3e	d0 02			bne  +
.2d40	c6 23			dec  p8b_main.p8v_pcode+1
.2d42	c6 22		+                           dec  p8b_main.p8v_pcode
.2d44	60			rts
>5cd7			p8v_a	.byte  ?
>5cd8			p8v_b	.byte  ?
>5cd9			p8v_r	.byte  ?
>5cda			p8v_v	.byte  ?
.2d45			p8s_do_setclr
.2d45	9c dd 5c		stz  p8v_r
.2d48	9c db 5c		stz  p8v_a
.2d4b	9c dc 5c		stz  p8v_b
.2d4e	9c de 5c		stz  p8v_v
.2d51	20 f5 19		jsr  p8b_main.p8s_next
.2d54	8d dd 5c		sta  p8v_r
.2d57	20 8c 37		jsr  p8b_apu.p8s_expr
.2d5a	8d db 5c		sta  p8v_a
.2d5d	b2 22			lda  (p8b_main.p8v_pcode)
.2d5f	c9 1a			cmp  #26
.2d61	d0 24			bne  label_asm_272_afterif
.2d63	20 f5 19		jsr  p8b_main.p8s_next
.2d66	8d dd 5c		sta  p8v_r
.2d69	20 8c 37		jsr  p8b_apu.p8s_expr
.2d6c	8d dc 5c		sta  p8v_b
.2d6f	20 f5 19		jsr  p8b_main.p8s_next
.2d72	8d dd 5c		sta  p8v_r
.2d75	20 8c 37		jsr  p8b_apu.p8s_expr
.2d78	8d de 5c		sta  p8v_v
.2d7b	ac dc 5c		ldy  p8v_b
.2d7e	ae db 5c		ldx  p8v_a
.2d81	ad de 5c		lda  p8v_v
.2d84	20 0e 24		jsr  txt.setclr
.2d87			label_asm_272_afterif
.2d87	a5 22			lda  p8b_main.p8v_pcode
.2d89	d0 02			bne  +
.2d8b	c6 23			dec  p8b_main.p8v_pcode+1
.2d8d	c6 22		+                           dec  p8b_main.p8v_pcode
.2d8f	60			rts
>5cdb			p8v_a	.byte  ?
>5cdc			p8v_b	.byte  ?
>5cdd			p8v_r	.byte  ?
>5cde			p8v_v	.byte  ?
.2d90			p8s_do_locate
.2d90	9c e1 5c		stz  p8v_r
.2d93	9c df 5c		stz  p8v_a
.2d96	9c e0 5c		stz  p8v_b
.2d99	20 f5 19		jsr  p8b_main.p8s_next
.2d9c	8d e1 5c		sta  p8v_r
.2d9f	20 8c 37		jsr  p8b_apu.p8s_expr
.2da2	8d df 5c		sta  p8v_a
.2da5	b2 22			lda  (p8b_main.p8v_pcode)
.2da7	c9 1a			cmp  #26
.2da9	d0 15			bne  label_asm_273_afterif
.2dab	20 f5 19		jsr  p8b_main.p8s_next
.2dae	8d e1 5c		sta  p8v_r
.2db1	20 8c 37		jsr  p8b_apu.p8s_expr
.2db4	8d e0 5c		sta  p8v_b
.2db7	ac df 5c		ldy  p8v_a
.2dba	ae e0 5c		ldx  p8v_b
.2dbd	20 28 24		jsr  txt.plot
.2dc0			label_asm_273_afterif
.2dc0	a5 22			lda  p8b_main.p8v_pcode
.2dc2	d0 02			bne  +
.2dc4	c6 23			dec  p8b_main.p8v_pcode+1
.2dc6	c6 22		+                           dec  p8b_main.p8v_pcode
.2dc8	60			rts
>5cdf			p8v_a	.byte  ?
>5ce0			p8v_b	.byte  ?
>5ce1			p8v_r	.byte  ?
.2dc9			p8s_do_graph
.2dc9	9c e4 5c		stz  p8v_r
.2dcc	9c e2 5c		stz  p8v_a
.2dcf	9c e3 5c		stz  p8v_a+1
.2dd2	9c e5 5c		stz  p8v_v
.2dd5	9c e6 5c		stz  p8v_v+1
.2dd8	20 f5 19		jsr  p8b_main.p8s_next
.2ddb	8d e4 5c		sta  p8v_r
.2dde	20 8c 37		jsr  p8b_apu.p8s_expr
.2de1	8d e2 5c		sta  p8v_a
.2de4	8c e3 5c		sty  p8v_a+1
.2de7	ad e2 5c		lda  p8b_runcmd.p8s_do_graph.p8v_a
.2dea	c9 01			cmp  #<1
.2dec	d0 11			bne  label_asm_275_else
.2dee	ad e3 5c		lda  p8b_runcmd.p8s_do_graph.p8v_a+1
.2df1	c9 00			cmp  #>1
.2df3	d0 0a			bne  label_asm_275_else
.2df5	a9 01			lda  #1
.2df7	8d 60 5c		sta  p8b_main.p8v_graphmode
.2dfa	20 f0 30		jsr  p8b_graphics.p8s_enable_bitmap_mode
.2dfd	80 06			bra  label_asm_274_afterif
.2dff			label_asm_275_else
.2dff	9c 60 5c		stz  p8b_main.p8v_graphmode
.2e02	20 04 31		jsr  p8b_graphics.p8s_disable_bitmap_mode
.2e05			label_asm_274_afterif
.2e05	a5 22			lda  p8b_main.p8v_pcode
.2e07	d0 02			bne  +
.2e09	c6 23			dec  p8b_main.p8v_pcode+1
.2e0b	c6 22		+                           dec  p8b_main.p8v_pcode
.2e0d	60			rts
>5ce2			p8v_a	.word  ?
>5ce4			p8v_r	.byte  ?
>5ce5			p8v_v	.word  ?
.2e0e			p8s_do_wait
.2e0e	9c e9 5c		stz  p8v_r
.2e11	9c e7 5c		stz  p8v_a
.2e14	9c e8 5c		stz  p8v_a+1
.2e17	20 f5 19		jsr  p8b_main.p8s_next
.2e1a	8d e9 5c		sta  p8v_r
.2e1d	20 8c 37		jsr  p8b_apu.p8s_expr
.2e20	8d e7 5c		sta  p8v_a
.2e23	8c e8 5c		sty  p8v_a+1
.2e26	20 3e 23		jsr  sys.wait
.2e29	a5 22			lda  p8b_main.p8v_pcode
.2e2b	d0 02			bne  +
.2e2d	c6 23			dec  p8b_main.p8v_pcode+1
.2e2f	c6 22		+                           dec  p8b_main.p8v_pcode
.2e31	60			rts
>5ce7			p8v_a	.word  ?
>5ce9			p8v_r	.byte  ?
.2e32			p8s_do_line
.2e32	9c f0 5c		stz  p8v_r
.2e35	9c ea 5c		stz  p8v_a
.2e38	9c eb 5c		stz  p8v_a+1
.2e3b	9c ec 5c		stz  p8v_b
.2e3e	9c ed 5c		stz  p8v_c
.2e41	9c ee 5c		stz  p8v_c+1
.2e44	9c ef 5c		stz  p8v_d
.2e47	20 f5 19		jsr  p8b_main.p8s_next
.2e4a	8d f0 5c		sta  p8v_r
.2e4d	20 8c 37		jsr  p8b_apu.p8s_expr
.2e50	8d ea 5c		sta  p8v_a
.2e53	8c eb 5c		sty  p8v_a+1
.2e56	b2 22			lda  (p8b_main.p8v_pcode)
.2e58	c9 1a			cmp  #26
.2e5a	d0 4e			bne  label_asm_276_afterif
.2e5c	20 f5 19		jsr  p8b_main.p8s_next
.2e5f	8d f0 5c		sta  p8v_r
.2e62	20 8c 37		jsr  p8b_apu.p8s_expr
.2e65	8d ec 5c		sta  p8v_b
.2e68	20 f5 19		jsr  p8b_main.p8s_next
.2e6b	8d f0 5c		sta  p8v_r
.2e6e	20 8c 37		jsr  p8b_apu.p8s_expr
.2e71	8d ed 5c		sta  p8v_c
.2e74	8c ee 5c		sty  p8v_c+1
.2e77	20 f5 19		jsr  p8b_main.p8s_next
.2e7a	8d f0 5c		sta  p8v_r
.2e7d	20 8c 37		jsr  p8b_apu.p8s_expr
.2e80	8d ef 5c		sta  p8v_d
.2e83	ad ea 5c		lda  p8v_a
.2e86	ac eb 5c		ldy  p8v_a+1
.2e89	8d 0c 5d		sta  p8b_graphics.p8s_line.p8v_x1
.2e8c	8c 0d 5d		sty  p8b_graphics.p8s_line.p8v_x1+1
.2e8f	ad ec 5c		lda  p8v_b
.2e92	8d 10 5d		sta  p8b_graphics.p8s_line.p8v_y1
.2e95	ad ed 5c		lda  p8v_c
.2e98	ac ee 5c		ldy  p8v_c+1
.2e9b	8d 0e 5d		sta  p8b_graphics.p8s_line.p8v_x2
.2e9e	8c 0f 5d		sty  p8b_graphics.p8s_line.p8v_x2+1
.2ea1	ad ef 5c		lda  p8v_d
.2ea4	8d 11 5d		sta  p8b_graphics.p8s_line.p8v_y2
.2ea7	20 46 31		jsr  p8b_graphics.p8s_line
.2eaa			label_asm_276_afterif
.2eaa	a5 22			lda  p8b_main.p8v_pcode
.2eac	d0 02			bne  +
.2eae	c6 23			dec  p8b_main.p8v_pcode+1
.2eb0	c6 22		+                           dec  p8b_main.p8v_pcode
.2eb2	60			rts
>5cea			p8v_a	.word  ?
>5cec			p8v_b	.byte  ?
>5ced			p8v_c	.word  ?
>5cef			p8v_d	.byte  ?
>5cf0			p8v_r	.byte  ?
.2eb3			p8s_do_rect
.2eb3	9c fb 5c		stz  p8v_r
.2eb6	9c f1 5c		stz  p8v_a
.2eb9	9c f2 5c		stz  p8v_a+1
.2ebc	9c f3 5c		stz  p8v_b
.2ebf	9c f4 5c		stz  p8v_b+1
.2ec2	9c f5 5c		stz  p8v_c
.2ec5	9c f6 5c		stz  p8v_c+1
.2ec8	9c f7 5c		stz  p8v_d
.2ecb	9c f8 5c		stz  p8v_d+1
.2ece	9c f9 5c		stz  p8v_e
.2ed1	9c fa 5c		stz  p8v_e+1
.2ed4	20 f5 19		jsr  p8b_main.p8s_next
.2ed7	8d fb 5c		sta  p8v_r
.2eda	20 8c 37		jsr  p8b_apu.p8s_expr
.2edd	8d f1 5c		sta  p8v_a
.2ee0	8c f2 5c		sty  p8v_a+1
.2ee3	b2 22			lda  (p8b_main.p8v_pcode)
.2ee5	c9 1a			cmp  #26
.2ee7	f0 03			bne  label_asm_277_afterif
.2ee9	4c 96 2f
.2eec	20 f5 19		jsr  p8b_main.p8s_next
.2eef	8d fb 5c		sta  p8v_r
.2ef2	20 8c 37		jsr  p8b_apu.p8s_expr
.2ef5	8d f3 5c		sta  p8v_b
.2ef8	8c f4 5c		sty  p8v_b+1
.2efb	20 f5 19		jsr  p8b_main.p8s_next
.2efe	8d fb 5c		sta  p8v_r
.2f01	20 8c 37		jsr  p8b_apu.p8s_expr
.2f04	8d f5 5c		sta  p8v_c
.2f07	8c f6 5c		sty  p8v_c+1
.2f0a	20 f5 19		jsr  p8b_main.p8s_next
.2f0d	8d fb 5c		sta  p8v_r
.2f10	20 8c 37		jsr  p8b_apu.p8s_expr
.2f13	8d f7 5c		sta  p8v_d
.2f16	8c f8 5c		sty  p8v_d+1
.2f19	b2 22			lda  (p8b_main.p8v_pcode)
.2f1b	c9 1a			cmp  #26
.2f1d	d0 44			bne  label_asm_279_else
.2f1f	20 f5 19		jsr  p8b_main.p8s_next
.2f22	8d fb 5c		sta  p8v_r
.2f25	20 8c 37		jsr  p8b_apu.p8s_expr
.2f28	8d f9 5c		sta  p8v_e
.2f2b	8c fa 5c		sty  p8v_e+1
.2f2e	ad f1 5c		lda  p8v_a
.2f31	ac f2 5c		ldy  p8v_a+1
.2f34	8d 16 5d		sta  p8b_graphics.p8s_fillrect.p8v_xx
.2f37	8c 17 5d		sty  p8b_graphics.p8s_fillrect.p8v_xx+1
.2f3a	ad f3 5c		lda  p8v_b
.2f3d	ac f4 5c		ldy  p8v_b+1
.2f40	8d 18 5d		sta  p8b_graphics.p8s_fillrect.p8v_yy
.2f43	8c 19 5d		sty  p8b_graphics.p8s_fillrect.p8v_yy+1
.2f46	ad f5 5c		lda  p8v_c
.2f49	ac f6 5c		ldy  p8v_c+1
.2f4c	8d 14 5d		sta  p8b_graphics.p8s_fillrect.p8v_width
.2f4f	8c 15 5d		sty  p8b_graphics.p8s_fillrect.p8v_width+1
.2f52	ad f7 5c		lda  p8v_d
.2f55	ac f8 5c		ldy  p8v_d+1
.2f58	8d 12 5d		sta  p8b_graphics.p8s_fillrect.p8v_height
.2f5b	8c 13 5d		sty  p8b_graphics.p8s_fillrect.p8v_height+1
.2f5e	20 6b 31		jsr  p8b_graphics.p8s_fillrect
.2f61	80 33			bra  label_asm_278_afterif
.2f63			label_asm_279_else
.2f63	ad f1 5c		lda  p8v_a
.2f66	ac f2 5c		ldy  p8v_a+1
.2f69	8d 1e 5d		sta  p8b_graphics.p8s_rect.p8v_xx
.2f6c	8c 1f 5d		sty  p8b_graphics.p8s_rect.p8v_xx+1
.2f6f	ad f3 5c		lda  p8v_b
.2f72	ac f4 5c		ldy  p8v_b+1
.2f75	8d 20 5d		sta  p8b_graphics.p8s_rect.p8v_yy
.2f78	8c 21 5d		sty  p8b_graphics.p8s_rect.p8v_yy+1
.2f7b	ad f5 5c		lda  p8v_c
.2f7e	ac f6 5c		ldy  p8v_c+1
.2f81	8d 1c 5d		sta  p8b_graphics.p8s_rect.p8v_width
.2f84	8c 1d 5d		sty  p8b_graphics.p8s_rect.p8v_width+1
.2f87	ad f7 5c		lda  p8v_d
.2f8a	ac f8 5c		ldy  p8v_d+1
.2f8d	8d 1a 5d		sta  p8b_graphics.p8s_rect.p8v_height
.2f90	8c 1b 5d		sty  p8b_graphics.p8s_rect.p8v_height+1
.2f93	20 9b 31		jsr  p8b_graphics.p8s_rect
.2f96			label_asm_278_afterif
.2f96			label_asm_277_afterif
.2f96	a5 22			lda  p8b_main.p8v_pcode
.2f98	d0 02			bne  +
.2f9a	c6 23			dec  p8b_main.p8v_pcode+1
.2f9c	c6 22		+                           dec  p8b_main.p8v_pcode
.2f9e	60			rts
>5cf1			p8v_a	.word  ?
>5cf3			p8v_b	.word  ?
>5cf5			p8v_c	.word  ?
>5cf7			p8v_d	.word  ?
>5cf9			p8v_e	.word  ?
>5cfb			p8v_r	.byte  ?
.2f9f			p8s_do_plot
.2f9f	9c 00 5d		stz  p8v_r
.2fa2	9c fc 5c		stz  p8v_a
.2fa5	9c fd 5c		stz  p8v_a+1
.2fa8	9c fe 5c		stz  p8v_b
.2fab	9c ff 5c		stz  p8v_b+1
.2fae	20 f5 19		jsr  p8b_main.p8s_next
.2fb1	8d 00 5d		sta  p8v_r
.2fb4	20 8c 37		jsr  p8b_apu.p8s_expr
.2fb7	8d fc 5c		sta  p8v_a
.2fba	8c fd 5c		sty  p8v_a+1
.2fbd	b2 22			lda  (p8b_main.p8v_pcode)
.2fbf	c9 1a			cmp  #26
.2fc1	d0 2c			bne  label_asm_280_afterif
.2fc3	20 f5 19		jsr  p8b_main.p8s_next
.2fc6	8d 00 5d		sta  p8v_r
.2fc9	20 8c 37		jsr  p8b_apu.p8s_expr
.2fcc	8d fe 5c		sta  p8v_b
.2fcf	8c ff 5c		sty  p8v_b+1
.2fd2	ad fc 5c		lda  p8v_a
.2fd5	85 02			sta  cx16.r0
.2fd7	ad fd 5c		lda  p8v_a+1
.2fda	85 03			sta  cx16.r0+1
.2fdc	ad fe 5c		lda  p8v_b
.2fdf	85 04			sta  cx16.r1
.2fe1	ad ff 5c		lda  p8v_b+1
.2fe4	85 05			sta  cx16.r1+1
.2fe6	20 ff fe	            jsr  cx16.FB_cursor_position
.2fe9	ad 07 5d	            lda  p8b_graphics.p8v_stroke_color
.2fec	20 0b ff	            jsr  cx16.FB_set_pixel
.2fef			label_asm_280_afterif
.2fef	a5 22			lda  p8b_main.p8v_pcode
.2ff1	d0 02			bne  +
.2ff3	c6 23			dec  p8b_main.p8v_pcode+1
.2ff5	c6 22		+                           dec  p8b_main.p8v_pcode
.2ff7	60			rts
>5cfc			p8v_a	.word  ?
>5cfe			p8v_b	.word  ?
>5d00			p8v_r	.byte  ?
.2ff8			p8s_do_print
.2ff8	9c 03 5d		stz  p8v_r
.2ffb	a9 01			lda  #1
.2ffd	8d 02 5d		sta  p8v_nl
.3000	9c 04 5d		stz  p8v_v
.3003	9c 05 5d		stz  p8v_v+1
.3006	9c 01 5d		stz  p8v_lg
.3009	20 f5 19		jsr  p8b_main.p8s_next
.300c	8d 03 5d		sta  p8v_r
.300f			p8l_label_74_untilloop
.300f	ad 03 5d		lda  p8v_r
.3012	c9 1a			cmp  #26
.3014	d0 0e			bne  label_asm_282_else
.3016	a9 20			lda  #$20
.3018	20 d2 ff		jsr  txt.chrout
.301b	20 f5 19		jsr  p8b_main.p8s_next
.301e	8d 03 5d		sta  p8v_r
.3021	4c b9 30		bra  label_asm_281_afterif
.3024			label_asm_282_else
.3024	ad 03 5d		lda  p8v_r
.3027	c9 1b			cmp  #27
.3029	d0 0c			bne  label_asm_284_else
.302b	9c 02 5d		stz  p8v_nl
.302e	20 f5 19		jsr  p8b_main.p8s_next
.3031	8d 03 5d		sta  p8v_r
.3034	4c b9 30		bra  label_asm_283_afterif
.3037			label_asm_284_else
.3037	ad 03 5d		lda  p8v_r
.303a	48			pha
.303b	a9 dd			lda  #<p8v_auto_heap_value_10
.303d	a0 30			ldy  #>p8v_auto_heap_value_10
.303f	85 7c			sta  P8ZP_SCRATCH_W1
.3041	84 7d			sty  P8ZP_SCRATCH_W1+1
.3043	68			pla
.3044	a0 0e			ldy  #14
.3046	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3049	c9 00			cmp  #0
.304b	f0 13			beq  label_asm_286_else
.304d	20 8c 37		jsr  p8b_apu.p8s_expr
.3050	8d 04 5d		sta  p8v_v
.3053	8c 05 5d		sty  p8v_v+1
.3056	20 60 24		jsr  txt.print_uw
.3059	b2 22			lda  (p8b_main.p8v_pcode)
.305b	8d 03 5d		sta  p8v_r
.305e	80 59			bra  label_asm_285_afterif
.3060			label_asm_286_else
.3060	ad 03 5d		lda  p8v_r
.3063	c9 2d			cmp  #45
.3065	d0 2b			bne  label_asm_288_else
.3067	e6 22			inc  p8b_main.p8v_pcode
.3069	d0 02			bne  +
.306b	e6 23			inc  p8b_main.p8v_pcode+1
.306d			+
.306d	a4 23			ldy  p8b_main.p8v_pcode+1
.306f	a5 22			lda  p8b_main.p8v_pcode
.3071	20 73 28		jsr  string.length
.3074	8c 01 5d		sty  p8v_lg
.3077	a4 23			ldy  p8b_main.p8v_pcode+1
.3079	a5 22			lda  p8b_main.p8v_pcode
.307b	20 32 24		jsr  txt.print
.307e	a5 22			lda  p8b_main.p8v_pcode
.3080	18			clc
.3081	6d 01 5d		adc  p8v_lg
.3084	85 22			sta  p8b_main.p8v_pcode
.3086	90 02			bcc  +
.3088	e6 23			inc  p8b_main.p8v_pcode+1
.308a			+
.308a	20 f5 19		jsr  p8b_main.p8s_next
.308d	8d 03 5d		sta  p8v_r
.3090	80 27			bra  label_asm_287_afterif
.3092			label_asm_288_else
.3092	ad 03 5d		lda  p8v_r
.3095	48			pha
.3096	a9 eb			lda  #<p8v_auto_heap_value_11
.3098	a0 30			ldy  #>p8v_auto_heap_value_11
.309a	85 7c			sta  P8ZP_SCRATCH_W1
.309c	84 7d			sty  P8ZP_SCRATCH_W1+1
.309e	68			pla
.309f	a0 02			ldy  #2
.30a1	20 4a 5c		jsr  prog8_lib.containment_bytearray
.30a4	c9 00			cmp  #0
.30a6	f0 2a			beq  p8l_label_73_after
.30a8	20 b6 3a		jsr  p8b_apu.p8s_expr_str
.30ab	8d 04 5d		sta  p8v_v
.30ae	8c 05 5d		sty  p8v_v+1
.30b1	20 32 24		jsr  txt.print
.30b4	b2 22			lda  (p8b_main.p8v_pcode)
.30b6	8d 03 5d		sta  p8v_r
.30b9			label_asm_287_afterif
.30b9			label_asm_285_afterif
.30b9			label_asm_283_afterif
.30b9			label_asm_281_afterif
.30b9	ad 03 5d		lda  p8v_r
.30bc	48			pha
.30bd	a9 ed			lda  #<p8v_auto_heap_value_12
.30bf	a0 30			ldy  #>p8v_auto_heap_value_12
.30c1	85 7c			sta  P8ZP_SCRATCH_W1
.30c3	84 7d			sty  P8ZP_SCRATCH_W1+1
.30c5	68			pla
.30c6	a0 03			ldy  #3
.30c8	20 4a 5c		jsr  prog8_lib.containment_bytearray
.30cb	c9 00			cmp  #0
.30cd	d0 03			beq  p8l_label_74_untilloop
.30cf	4c 0f 30
.30d2			p8l_label_73_after
.30d2	ad 02 5d		lda  p8v_nl
.30d5	f0 05			beq  label_asm_289_afterif
.30d7	a9 0d			lda  #13
.30d9	20 d2 ff		jsr  txt.chrout
.30dc			label_asm_289_afterif
.30dc	60			rts
>5d01			p8v_lg	.byte  ?
>5d02			p8v_nl	.byte  ?
>5d03			p8v_r	.byte  ?
>5d04			p8v_v	.word  ?
>30dd	22 2c 2e 30	p8v_auto_heap_value_10	.byte  $22, $2c, $2e, $30, $34, $44, $47, $ae, $b0, $bb, $bf, $c4, $c6, $d0
>30e1	34 44 47 ae b0 bb bf c4 c6 d0
>30eb	35 ca		p8v_auto_heap_value_11	.byte  $35, $ca
>30ed	00 19 7f	p8v_auto_heap_value_12	.byte  $00, $19, $7f
.30f0			p8b_graphics
=$f0				p8c_HEIGHT = $f0
=$0140				p8c_WIDTH = $0140
>5d06			p8v_background_color	.byte  ?
>5d07			p8v_stroke_color	.byte  ?
=$feff				p8s_FB_cursor_position2 = $feff
.30f0			p8s_enable_bitmap_mode
.30f0	a9 80			lda  #$80
.30f2	18			clc
.30f3	20 5f ff		jsr  cx16.screen_mode
.30f6	64 02			stz  cx16.r0
.30f8	64 03			stz  cx16.r0+1
.30fa	20 20 ff		jsr  cx16.GRAPH_init
.30fd	a9 01			lda  #1
.30ff	a0 00			ldy  #0
.3101	4c 0f 31		jmp  p8b_graphics.p8s_clear_screen
.3104			p8s_disable_bitmap_mode
.3104	a9 00			lda  #0
.3106	18			clc
.3107	20 5f ff		jsr  cx16.screen_mode
.310a	a9 93			lda  #$93
.310c	4c d2 ff		jmp  txt.chrout
.310f			p8s_clear_screen
.310f	8d 09 5d		sta  p8v_pixelcolor
.3112	8c 08 5d		sty  p8v_bgcolor
.3115	8d 07 5d		sta  p8b_graphics.p8v_stroke_color
.3118	ad 08 5d		lda  p8v_bgcolor
.311b	8d 06 5d		sta  p8b_graphics.p8v_background_color
.311e	ac 08 5d		ldy  p8v_bgcolor
.3121	ae 09 5d		ldx  p8v_pixelcolor
.3124	ad 09 5d		lda  p8v_pixelcolor
.3127	20 29 ff		jsr  cx16.GRAPH_set_colors
.312a	4c 23 ff		jmp  cx16.GRAPH_clear
>5d08			p8v_bgcolor	.byte  ?
>5d09			p8v_pixelcolor	.byte  ?
.312d			p8s_colors
.312d	8d 0b 5d		sta  p8v_stroke
.3130	8c 0a 5d		sty  p8v_fill
.3133	ac 06 5d		ldy  p8b_graphics.p8v_background_color
.3136	ae 0a 5d		ldx  p8v_fill
.3139	ad 0b 5d		lda  p8v_stroke
.313c	20 29 ff		jsr  cx16.GRAPH_set_colors
.313f	ad 0b 5d		lda  p8v_stroke
.3142	8d 07 5d		sta  p8b_graphics.p8v_stroke_color
.3145	60			rts
>5d0a			p8v_fill	.byte  ?
>5d0b			p8v_stroke	.byte  ?
.3146			p8s_line
.3146	ad 0c 5d		lda  p8v_x1
.3149	85 02			sta  cx16.r0
.314b	ad 0d 5d		lda  p8v_x1+1
.314e	85 03			sta  cx16.r0+1
.3150	ad 10 5d		lda  p8v_y1
.3153	85 04			sta  cx16.r1
.3155	64 05			stz  cx16.r1+1
.3157	ad 0e 5d		lda  p8v_x2
.315a	85 06			sta  cx16.r2
.315c	ad 0f 5d		lda  p8v_x2+1
.315f	85 07			sta  cx16.r2+1
.3161	ad 11 5d		lda  p8v_y2
.3164	85 08			sta  cx16.r3
.3166	64 09			stz  cx16.r3+1
.3168	4c 2c ff		jmp  cx16.GRAPH_draw_line
>5d0c			p8v_x1	.word  ?
>5d0e			p8v_x2	.word  ?
>5d10			p8v_y1	.byte  ?
>5d11			p8v_y2	.byte  ?
.316b			p8s_fillrect
.316b	ad 16 5d		lda  p8v_xx
.316e	85 02			sta  cx16.r0
.3170	ad 17 5d		lda  p8v_xx+1
.3173	85 03			sta  cx16.r0+1
.3175	ad 18 5d		lda  p8v_yy
.3178	85 04			sta  cx16.r1
.317a	ad 19 5d		lda  p8v_yy+1
.317d	85 05			sta  cx16.r1+1
.317f	ad 14 5d		lda  p8v_width
.3182	85 06			sta  cx16.r2
.3184	ad 15 5d		lda  p8v_width+1
.3187	85 07			sta  cx16.r2+1
.3189	ad 12 5d		lda  p8v_height
.318c	85 08			sta  cx16.r3
.318e	ad 13 5d		lda  p8v_height+1
.3191	85 09			sta  cx16.r3+1
.3193	64 0a			stz  cx16.r4
.3195	64 0b			stz  cx16.r4+1
.3197	38			sec
.3198	4c 2f ff		jmp  cx16.GRAPH_draw_rect
>5d12			p8v_height	.word  ?
>5d14			p8v_width	.word  ?
>5d16			p8v_xx	.word  ?
>5d18			p8v_yy	.word  ?
.319b			p8s_rect
.319b	ad 1e 5d		lda  p8v_xx
.319e	85 02			sta  cx16.r0
.31a0	ad 1f 5d		lda  p8v_xx+1
.31a3	85 03			sta  cx16.r0+1
.31a5	ad 20 5d		lda  p8v_yy
.31a8	85 04			sta  cx16.r1
.31aa	ad 21 5d		lda  p8v_yy+1
.31ad	85 05			sta  cx16.r1+1
.31af	ad 1c 5d		lda  p8v_width
.31b2	85 06			sta  cx16.r2
.31b4	ad 1d 5d		lda  p8v_width+1
.31b7	85 07			sta  cx16.r2+1
.31b9	ad 1a 5d		lda  p8v_height
.31bc	85 08			sta  cx16.r3
.31be	ad 1b 5d		lda  p8v_height+1
.31c1	85 09			sta  cx16.r3+1
.31c3	64 0a			stz  cx16.r4
.31c5	64 0b			stz  cx16.r4+1
.31c7	18			clc
.31c8	4c 2f ff		jmp  cx16.GRAPH_draw_rect
>5d1a			p8v_height	.word  ?
>5d1c			p8v_width	.word  ?
>5d1e			p8v_xx	.word  ?
>5d20			p8v_yy	.word  ?
.31cb			prog8_init_vars
.31cb	a9 01			lda  #1
.31cd	8d 07 5d		sta  p8b_graphics.p8v_stroke_color
.31d0	60			rts
.31d1			p8b_apu
.31d1			p8v_strbuf
>31d1	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>31d5	00 00 00 00 00 00 00 00 00 00 00 00
>31e1	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>31e5	00 00 00 00 00 00 00 00 00 00 00 00
>31f1	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>31f5	00 00 00 00 00 00 00 00 00 00 00 00
>3201	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3205	00 00 00 00 00 00 00 00 00 00 00 00
>3211	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3215	00 00 00 00 00 00 00 00 00 00 00 00
>3221	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3225	00 00 00 00 00 00 00 00 00 00 00 00
>3231	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3235	00 00 00 00 00 00 00 00 00 00 00 00
>3241	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3245	00 00 00 00 00 00 00 00 00 00 00 00
>3251	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3255	00 00 00 00 00 00 00 00 00 00 00 00
>3261	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3265	00 00 00 00 00 00 00 00 00 00 00 00
>3271	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3275	00 00 00 00 00 00 00 00 00 00 00 00
>3281	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3285	00 00 00 00 00 00 00 00 00 00 00 00
>3291	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>3295	00 00 00 00 00 00 00 00 00 00 00 00
>32a1	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>32a5	00 00 00 00 00 00 00 00 00 00 00 00
>32b1	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>32b5	00 00 00 00 00 00 00 00 00 00 00 00
>32c1	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>32c5	00 00 00 00 00 00 00 00 00 00 00 00
.32d1			p8v_strchr
>32d1	00 00 00		.byte  $00, $00, $00
.32d4			p8s_relation
.32d4	9c 23 5d		stz  p8v_r1
.32d7	9c 24 5d		stz  p8v_r1+1
.32da	9c 25 5d		stz  p8v_r2
.32dd	9c 26 5d		stz  p8v_r2+1
.32e0	9c 27 5d		stz  p8v_r3
.32e3	9c 22 5d		stz  p8v_op4
.32e6	20 8c 37		jsr  p8b_apu.p8s_expr
.32e9	8d 23 5d		sta  p8v_r1
.32ec	8c 24 5d		sty  p8v_r1+1
.32ef	b2 22			lda  (p8b_main.p8v_pcode)
.32f1	8d 22 5d		sta  p8v_op4
.32f4			p8l_label_79_whileloop
.32f4	ad 22 5d		lda  p8v_op4
.32f7	48			pha
.32f8	a9 8a			lda  #<p8v_auto_heap_value_13
.32fa	a0 33			ldy  #>p8v_auto_heap_value_13
.32fc	85 7c			sta  P8ZP_SCRATCH_W1
.32fe	84 7d			sty  P8ZP_SCRATCH_W1+1
.3300	68			pla
.3301	a0 03			ldy  #3
.3303	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3306	c9 00			cmp  #0
.3308	f0 7c			beq  p8l_label_80_afterwhile
.330a	e6 22			inc  p8b_main.p8v_pcode
.330c	d0 02			bne  +
.330e	e6 23			inc  p8b_main.p8v_pcode+1
.3310			+
.3310	20 8c 37		jsr  p8b_apu.p8s_expr
.3313	8d 25 5d		sta  p8v_r2
.3316	8c 26 5d		sty  p8v_r2+1
.3319	ad 22 5d		lda  p8v_op4
.331c	c9 27			cmp  #39
.331e	d0 19			bne  label_asm_291_else
.3320	9c 27 5d		stz  p8v_r3
.3323	ac 24 5d		ldy  p8v_r1+1
.3326	ad 23 5d		lda  p8v_r1
.3329	cd 25 5d		cmp  p8v_r2
.332c	98			tya
.332d	ed 26 5d		sbc  p8v_r2+1
.3330	b0 05			bcs  label_asm_292_afterif
.3332	a9 01			lda  #1
.3334	8d 27 5d		sta  p8v_r3
.3337			label_asm_292_afterif
.3337	80 3f			bra  label_asm_290_afterif
.3339			label_asm_291_else
.3339	ad 22 5d		lda  p8v_op4
.333c	c9 28			cmp  #40
.333e	d0 19			bne  label_asm_294_else
.3340	9c 27 5d		stz  p8v_r3
.3343	ac 26 5d		ldy  p8v_r2+1
.3346	ad 25 5d		lda  p8v_r2
.3349	cd 23 5d		cmp  p8v_r1
.334c	98			tya
.334d	ed 24 5d		sbc  p8v_r1+1
.3350	b0 05			bcs  label_asm_295_afterif
.3352	a9 01			lda  #1
.3354	8d 27 5d		sta  p8v_r3
.3357			label_asm_295_afterif
.3357	80 1f			bra  label_asm_293_afterif
.3359			label_asm_294_else
.3359	ad 22 5d		lda  p8v_op4
.335c	c9 29			cmp  #41
.335e	d0 18			bne  label_asm_296_afterif
.3360	9c 27 5d		stz  p8v_r3
.3363	ad 23 5d		lda  p8b_apu.p8s_relation.p8v_r1
.3366	cd 25 5d		cmp  p8b_apu.p8s_relation.p8v_r2
.3369	d0 0d			bne  label_asm_297_afterif
.336b	ad 24 5d		lda  p8b_apu.p8s_relation.p8v_r1+1
.336e	cd 26 5d		cmp  p8b_apu.p8s_relation.p8v_r2+1
.3371	d0 05			bne  label_asm_297_afterif
.3373	a9 01			lda  #1
.3375	8d 27 5d		sta  p8v_r3
.3378			label_asm_297_afterif
.3378			label_asm_296_afterif
.3378			label_asm_293_afterif
.3378			label_asm_290_afterif
.3378	e6 22			inc  p8b_main.p8v_pcode
.337a	d0 02			bne  +
.337c	e6 23			inc  p8b_main.p8v_pcode+1
.337e			+
.337e	b2 22			lda  (p8b_main.p8v_pcode)
.3380	8d 22 5d		sta  p8v_op4
.3383	4c f4 32		bra  p8l_label_79_whileloop
.3386			p8l_label_80_afterwhile
.3386	ad 27 5d		lda  p8v_r3
.3389	60			rts
>5d22			p8v_op4	.byte  ?
>5d23			p8v_r1	.word  ?
>5d25			p8v_r2	.word  ?
>5d27			p8v_r3	.byte  ?
>338a	27 28 29	p8v_auto_heap_value_13	.byte  $27, $28, $29
.338d			p8s_get_number
.338d	9c 2a 5d		stz  p8v_n
.3390	9c 2b 5d		stz  p8v_n+1
.3393	9c 29 5d		stz  p8v_m
.3396	b2 22			lda  (p8b_main.p8v_pcode)
.3398	8d 28 5d		sta  p8v_l
.339b	e6 22			inc  p8b_main.p8v_pcode
.339d	d0 02			bne  +
.339f	e6 23			inc  p8b_main.p8v_pcode+1
.33a1			+
.33a1	b2 22			lda  (p8b_main.p8v_pcode)
.33a3	8d 29 5d		sta  p8v_m
.33a6	ad 28 5d		lda  p8v_l
.33a9	ac 29 5d		ldy  p8v_m
.33ac	8d 2a 5d		sta  p8v_n
.33af	8c 2b 5d		sty  p8v_n+1
.33b2	60			rts
>5d28			p8v_l	.byte  ?
>5d29			p8v_m	.byte  ?
>5d2a			p8v_n	.word  ?
.33b3			p8s_varfactor
.33b3	9c 2e 5d		stz  p8v_v
.33b6	9c 2f 5d		stz  p8v_v+1
.33b9	9c 30 5d		stz  p8v_v1
.33bc	9c 31 5d		stz  p8v_v1+1
.33bf	9c 2c 5d		stz  p8v_n
.33c2	b2 22			lda  (p8b_main.p8v_pcode)
.33c4	8d 2d 5d		sta  p8v_op3
.33c7	c9 2e			cmp  #46
.33c9	d0 19			bne  label_asm_299_else
.33cb	e6 22			inc  p8b_main.p8v_pcode
.33cd	d0 02			bne  +
.33cf	e6 23			inc  p8b_main.p8v_pcode+1
.33d1			+
.33d1	b2 22			lda  (p8b_main.p8v_pcode)
.33d3	85 7e			sta  P8ZP_SCRATCH_W2
.33d5	64 7f			stz  P8ZP_SCRATCH_W2+1
.33d7	b2 7e			lda  (P8ZP_SCRATCH_W2)
.33d9	a0 00			ldy  #0
.33db	8d 2e 5d		sta  p8v_v
.33de	8c 2f 5d		sty  p8v_v+1
.33e1	4c df 34		bra  label_asm_298_afterif
.33e4			label_asm_299_else
.33e4	ad 2d 5d		lda  p8v_op3
.33e7	48			pha
.33e8	a9 e6			lda  #<p8v_auto_heap_value_14
.33ea	a0 34			ldy  #>p8v_auto_heap_value_14
.33ec	85 7c			sta  P8ZP_SCRATCH_W1
.33ee	84 7d			sty  P8ZP_SCRATCH_W1+1
.33f0	68			pla
.33f1	a0 02			ldy  #2
.33f3	20 4a 5c		jsr  prog8_lib.containment_bytearray
.33f6	c9 00			cmp  #0
.33f8	f0 14			beq  label_asm_301_else
.33fa	e6 22			inc  p8b_main.p8v_pcode
.33fc	d0 02			bne  +
.33fe	e6 23			inc  p8b_main.p8v_pcode+1
.3400			+
.3400	b2 22			lda  (p8b_main.p8v_pcode)
.3402	20 36 4b		jsr  p8b_jdvars.p8s_get_value
.3405	8d 2e 5d		sta  p8v_v
.3408	8c 2f 5d		sty  p8v_v+1
.340b	4c df 34		bra  label_asm_300_afterif
.340e			label_asm_301_else
.340e	ad 2d 5d		lda  p8v_op3
.3411	c9 34			cmp  #52
.3413	d0 41			bne  label_asm_303_else
.3415	e6 22			inc  p8b_main.p8v_pcode
.3417	d0 02			bne  +
.3419	e6 23			inc  p8b_main.p8v_pcode+1
.341b			+
.341b	b2 22			lda  (p8b_main.p8v_pcode)
.341d	8d 2c 5d		sta  p8v_n
.3420	e6 22			inc  p8b_main.p8v_pcode
.3422	d0 02			bne  +
.3424	e6 23			inc  p8b_main.p8v_pcode+1
.3426			+
.3426	ad 2c 5d		lda  p8v_n
.3429	20 b1 5a		jsr  p8b_callstack_b.p8s_push
.342c	20 8c 37		jsr  p8b_apu.p8s_expr
.342f	8d 30 5d		sta  p8v_v1
.3432	8c 31 5d		sty  p8v_v1+1
.3435	20 c1 5a		jsr  p8b_callstack_b.p8s_pop
.3438	8d 2c 5d		sta  p8v_n
.343b	8d b6 62		sta  p8b_jdarrvars.p8s_get_value.p8v_nr
.343e	ad 30 5d		lda  p8v_v1
.3441	ac 31 5d		ldy  p8v_v1+1
.3444	8d b2 62		sta  p8b_jdarrvars.p8s_get_value.p8v_index
.3447	8c b3 62		sty  p8b_jdarrvars.p8s_get_value.p8v_index+1
.344a	20 a7 4e		jsr  p8b_jdarrvars.p8s_get_value
.344d	8d 2e 5d		sta  p8v_v
.3450	8c 2f 5d		sty  p8v_v+1
.3453	4c df 34		bra  label_asm_302_afterif
.3456			label_asm_303_else
.3456	ad 2d 5d		lda  p8v_op3
.3459	c9 b4			cmp  #180
.345b	d0 4f			bne  label_asm_305_else
.345d	e6 22			inc  p8b_main.p8v_pcode
.345f	d0 02			bne  +
.3461	e6 23			inc  p8b_main.p8v_pcode+1
.3463			+
.3463	a5 38			lda  p8b_runlang.p8v_funcno
.3465	8d ec 3b		sta  p8b_runlang.p8v_varname
.3468	b2 22			lda  (p8b_main.p8v_pcode)
.346a	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.346d	a0 3b			ldy  #>p8b_runlang.p8v_varname
.346f	a9 ec			lda  #<p8b_runlang.p8v_varname
.3471	20 6e 52		jsr  p8b_jdlocal.p8s_get_name
.3474	8d 2c 5d		sta  p8v_n
.3477	e6 22			inc  p8b_main.p8v_pcode
.3479	d0 02			bne  +
.347b	e6 23			inc  p8b_main.p8v_pcode+1
.347d			+
.347d	ad 2c 5d		lda  p8v_n
.3480	20 b1 5a		jsr  p8b_callstack_b.p8s_push
.3483	20 8c 37		jsr  p8b_apu.p8s_expr
.3486	8d 30 5d		sta  p8v_v1
.3489	8c 31 5d		sty  p8v_v1+1
.348c	20 c1 5a		jsr  p8b_callstack_b.p8s_pop
.348f	8d 2c 5d		sta  p8v_n
.3492	8d b6 62		sta  p8b_jdarrvars.p8s_get_value.p8v_nr
.3495	ad 30 5d		lda  p8v_v1
.3498	ac 31 5d		ldy  p8v_v1+1
.349b	8d b2 62		sta  p8b_jdarrvars.p8s_get_value.p8v_index
.349e	8c b3 62		sty  p8b_jdarrvars.p8s_get_value.p8v_index+1
.34a1	20 a7 4e		jsr  p8b_jdarrvars.p8s_get_value
.34a4	8d 2e 5d		sta  p8v_v
.34a7	8c 2f 5d		sty  p8v_v+1
.34aa	80 33			bra  label_asm_304_afterif
.34ac			label_asm_305_else
.34ac	ad 2d 5d		lda  p8v_op3
.34af	48			pha
.34b0	a9 e8			lda  #<p8v_auto_heap_value_15
.34b2	a0 34			ldy  #>p8v_auto_heap_value_15
.34b4	85 7c			sta  P8ZP_SCRATCH_W1
.34b6	84 7d			sty  P8ZP_SCRATCH_W1+1
.34b8	68			pla
.34b9	a0 03			ldy  #3
.34bb	20 4a 5c		jsr  prog8_lib.containment_bytearray
.34be	c9 00			cmp  #0
.34c0	f0 1d			beq  label_asm_306_afterif
.34c2	e6 22			inc  p8b_main.p8v_pcode
.34c4	d0 02			bne  +
.34c6	e6 23			inc  p8b_main.p8v_pcode+1
.34c8			+
.34c8	a5 38			lda  p8b_runlang.p8v_funcno
.34ca	8d ec 3b		sta  p8b_runlang.p8v_varname
.34cd	b2 22			lda  (p8b_main.p8v_pcode)
.34cf	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.34d2	a0 3b			ldy  #>p8b_runlang.p8v_varname
.34d4	a9 ec			lda  #<p8b_runlang.p8v_varname
.34d6	20 6e 52		jsr  p8b_jdlocal.p8s_get_name
.34d9	8d 2e 5d		sta  p8v_v
.34dc	8c 2f 5d		sty  p8v_v+1
.34df			label_asm_306_afterif
.34df			label_asm_304_afterif
.34df			label_asm_302_afterif
.34df			label_asm_300_afterif
.34df			label_asm_298_afterif
.34df	ac 2f 5d		ldy  p8v_v+1
.34e2	ad 2e 5d		lda  p8v_v
.34e5	60			rts
>5d2c			p8v_n	.byte  ?
>5d2d			p8v_op3	.byte  ?
>5d2e			p8v_v	.word  ?
>5d30			p8v_v1	.word  ?
>34e6	30 44		p8v_auto_heap_value_14	.byte  $30, $44
>34e8	ae b0 c4	p8v_auto_heap_value_15	.byte  $ae, $b0, $c4
.34eb			p8s_factor
.34eb	9c 35 5d		stz  p8v_r
.34ee	9c 36 5d		stz  p8v_r+1
.34f1	9c 37 5d		stz  p8v_r1
.34f4	9c 38 5d		stz  p8v_r1+1
.34f7	9c 34 5d		stz  p8v_op2
.34fa	9c 33 5d		stz  p8v_lfunc
.34fd	9c 32 5d		stz  p8v_ind
.3500	ac 36 5d		ldy  p8v_r+1
.3503	ad 35 5d		lda  p8v_r
.3506	20 d2 5a		jsr  p8b_callstack_w.p8s_push
.3509	b2 22			lda  (p8b_main.p8v_pcode)
.350b	8d 34 5d		sta  p8v_op2
.350e	c9 2c			cmp  #44
.3510	d0 12			bne  label_asm_308_else
.3512	e6 22			inc  p8b_main.p8v_pcode
.3514	d0 02			bne  +
.3516	e6 23			inc  p8b_main.p8v_pcode+1
.3518			+
.3518	20 8d 33		jsr  p8b_apu.p8s_get_number
.351b	8d 35 5d		sta  p8v_r
.351e	8c 36 5d		sty  p8v_r+1
.3521	4c 6d 36		bra  label_asm_307_afterif
.3524			label_asm_308_else
.3524	ad 34 5d		lda  p8v_op2
.3527	c9 0c			cmp  #12
.3529	d0 39			bne  label_asm_310_else
.352b	e6 22			inc  p8b_main.p8v_pcode
.352d	d0 02			bne  +
.352f	e6 23			inc  p8b_main.p8v_pcode+1
.3531			+
.3531	b2 22			lda  (p8b_main.p8v_pcode)
.3533	c9 2c			cmp  #44
.3535	d0 11			bne  label_asm_312_else
.3537	e6 22			inc  p8b_main.p8v_pcode
.3539	d0 02			bne  +
.353b	e6 23			inc  p8b_main.p8v_pcode+1
.353d			+
.353d	20 8d 33		jsr  p8b_apu.p8s_get_number
.3540	8d 35 5d		sta  p8v_r
.3543	8c 36 5d		sty  p8v_r+1
.3546	80 09			bra  label_asm_311_afterif
.3548			label_asm_312_else
.3548	20 b3 33		jsr  p8b_apu.p8s_varfactor
.354b	8d 35 5d		sta  p8v_r
.354e	8c 36 5d		sty  p8v_r+1
.3551			label_asm_311_afterif
.3551	ad 35 5d		lda  p8v_r
.3554	49 ff			eor  #255
.3556	8d 35 5d		sta  p8v_r
.3559	ad 36 5d		lda  p8v_r+1
.355c	49 ff			eor  #255
.355e	8d 36 5d		sta  p8v_r+1
.3561	4c 6d 36		bra  label_asm_309_afterif
.3564			label_asm_310_else
.3564	ad 34 5d		lda  p8v_op2
.3567	c9 22			cmp  #34
.3569	d0 18			bne  label_asm_314_else
.356b	e6 22			inc  p8b_main.p8v_pcode
.356d	d0 02			bne  +
.356f	e6 23			inc  p8b_main.p8v_pcode+1
.3571			+
.3571	20 8c 37		jsr  p8b_apu.p8s_expr
.3574	8d 35 5d		sta  p8v_r
.3577	8c 36 5d		sty  p8v_r+1
.357a	e6 22			inc  p8b_main.p8v_pcode
.357c	d0 02			bne  +
.357e	e6 23			inc  p8b_main.p8v_pcode+1
.3580			+
.3580	4c 6d 36		bra  label_asm_313_afterif
.3583			label_asm_314_else
.3583	ad 34 5d		lda  p8v_op2
.3586	c9 47			cmp  #71
.3588	d0 16			bne  label_asm_316_else
.358a	a9 00			lda  #0
.358c	20 f7 3d		jsr  p8b_runlang.p8s_do_callfunc
.358f	8d 35 5d		sta  p8v_r
.3592	8c 36 5d		sty  p8v_r+1
.3595	a5 22			lda  p8b_main.p8v_pcode
.3597	d0 02			bne  +
.3599	c6 23			dec  p8b_main.p8v_pcode+1
.359b	c6 22		+                           dec  p8b_main.p8v_pcode
.359d	4c 6d 36		bra  label_asm_315_afterif
.35a0			label_asm_316_else
.35a0	ad 34 5d		lda  p8v_op2
.35a3	c9 c7			cmp  #199
.35a5	d0 2c			bne  label_asm_318_else
.35a7	e6 22			inc  p8b_main.p8v_pcode
.35a9	d0 02			bne  +
.35ab	e6 23			inc  p8b_main.p8v_pcode+1
.35ad			+
.35ad	a5 38			lda  p8b_runlang.p8v_funcno
.35af	8d ec 3b		sta  p8b_runlang.p8v_varname
.35b2	a9 01			lda  #1
.35b4	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.35b7	a0 3b			ldy  #>p8b_runlang.p8v_varname
.35b9	a9 ec			lda  #<p8b_runlang.p8v_varname
.35bb	20 8c 53		jsr  p8b_jdlocal.p8s_get_indexbyname
.35be	8d 32 5d		sta  p8v_ind
.35c1	20 06 54		jsr  p8b_jdlocal.p8s_get_value
.35c4	8d 33 5d		sta  p8v_lfunc
.35c7	20 f7 3d		jsr  p8b_runlang.p8s_do_callfunc
.35ca	8d 35 5d		sta  p8v_r
.35cd	8c 36 5d		sty  p8v_r+1
.35d0	4c 6d 36		bra  label_asm_317_afterif
.35d3			label_asm_318_else
.35d3	ad 34 5d		lda  p8v_op2
.35d6	c9 48			cmp  #72
.35d8	d0 0c			bne  label_asm_320_else
.35da	20 c0 2a		jsr  p8b_runcmd.p8s_do_peek
.35dd	8d 35 5d		sta  p8v_r
.35e0	8c 36 5d		sty  p8v_r+1
.35e3	4c 6d 36		bra  label_asm_319_afterif
.35e6			label_asm_320_else
.35e6	ad 34 5d		lda  p8v_op2
.35e9	c9 4a			cmp  #74
.35eb	d0 0b			bne  label_asm_322_else
.35ed	20 04 2c		jsr  p8b_runcmd.p8s_do_vpeek
.35f0	8d 35 5d		sta  p8v_r
.35f3	8c 36 5d		sty  p8v_r+1
.35f6	80 75			bra  label_asm_321_afterif
.35f8			label_asm_322_else
.35f8	ad 34 5d		lda  p8v_op2
.35fb	c9 ba			cmp  #186
.35fd	d0 0b			bne  label_asm_324_else
.35ff	20 47 2a		jsr  p8b_runcmd.p8s_do_get
.3602	8d 35 5d		sta  p8v_r
.3605	9c 36 5d		stz  p8v_r+1
.3608	80 63			bra  label_asm_323_afterif
.360a			label_asm_324_else
.360a	ad 34 5d		lda  p8v_op2
.360d	c9 d0			cmp  #208
.360f	d0 0b			bne  label_asm_326_else
.3611	20 5e 2b		jsr  p8b_runcmd.p8s_do_get_pixel
.3614	8d 35 5d		sta  p8v_r
.3617	8c 36 5d		sty  p8v_r+1
.361a	80 51			bra  label_asm_325_afterif
.361c			label_asm_326_else
.361c	ad 34 5d		lda  p8v_op2
.361f	c9 bb			cmp  #187
.3621	d0 0b			bne  label_asm_328_else
.3623	20 60 2a		jsr  p8b_runcmd.p8s_do_len
.3626	8d 35 5d		sta  p8v_r
.3629	8c 36 5d		sty  p8v_r+1
.362c	80 3f			bra  label_asm_327_afterif
.362e			label_asm_328_else
.362e	ad 34 5d		lda  p8v_op2
.3631	c9 bf			cmp  #191
.3633	d0 0b			bne  label_asm_330_else
.3635	20 f7 2a		jsr  p8b_runcmd.p8s_do_get_jiffi
.3638	8d 35 5d		sta  p8v_r
.363b	8c 36 5d		sty  p8v_r+1
.363e	80 2d			bra  label_asm_329_afterif
.3640			label_asm_330_else
.3640	ad 34 5d		lda  p8v_op2
.3643	c9 c6			cmp  #198
.3645	d0 0b			bne  label_asm_332_else
.3647	20 1c 2b		jsr  p8b_runcmd.p8s_do_get_rnd
.364a	8d 35 5d		sta  p8v_r
.364d	8c 36 5d		sty  p8v_r+1
.3650	80 1b			bra  label_asm_331_afterif
.3652			label_asm_332_else
.3652	ad 34 5d		lda  p8v_op2
.3655	c9 c8			cmp  #200
.3657	d0 0b			bne  label_asm_334_else
.3659	20 9e 2a		jsr  p8b_runcmd.p8s_do_joy
.365c	8d 35 5d		sta  p8v_r
.365f	8c 36 5d		sty  p8v_r+1
.3662	80 09			bra  label_asm_333_afterif
.3664			label_asm_334_else
.3664	20 b3 33		jsr  p8b_apu.p8s_varfactor
.3667	8d 35 5d		sta  p8v_r
.366a	8c 36 5d		sty  p8v_r+1
.366d			label_asm_333_afterif
.366d			label_asm_331_afterif
.366d			label_asm_329_afterif
.366d			label_asm_327_afterif
.366d			label_asm_325_afterif
.366d			label_asm_323_afterif
.366d			label_asm_321_afterif
.366d			label_asm_319_afterif
.366d			label_asm_317_afterif
.366d			label_asm_315_afterif
.366d			label_asm_313_afterif
.366d			label_asm_309_afterif
.366d			label_asm_307_afterif
.366d	ad 35 5d		lda  p8v_r
.3670	ac 36 5d		ldy  p8v_r+1
.3673	8d 37 5d		sta  p8v_r1
.3676	8c 38 5d		sty  p8v_r1+1
.3679	20 ed 5a		jsr  p8b_callstack_w.p8s_pop
.367c	8d 35 5d		sta  p8v_r
.367f	8c 36 5d		sty  p8v_r+1
.3682	ac 38 5d		ldy  p8v_r1+1
.3685	ad 37 5d		lda  p8v_r1
.3688	60			rts
>5d32			p8v_ind	.byte  ?
>5d33			p8v_lfunc	.byte  ?
>5d34			p8v_op2	.byte  ?
>5d35			p8v_r	.word  ?
>5d37			p8v_r1	.word  ?
.3689			p8s_term
.3689	9c 39 5d		stz  p8v_f1
.368c	9c 3a 5d		stz  p8v_f1+1
.368f	9c 3b 5d		stz  p8v_f2
.3692	9c 3c 5d		stz  p8v_f2+1
.3695	9c 3d 5d		stz  p8v_f3
.3698	9c 3e 5d		stz  p8v_f3+1
.369b	9c 3f 5d		stz  p8v_op1
.369e	ac 3a 5d		ldy  p8v_f1+1
.36a1	ad 39 5d		lda  p8v_f1
.36a4	20 d2 5a		jsr  p8b_callstack_w.p8s_push
.36a7	ac 3c 5d		ldy  p8v_f2+1
.36aa	ad 3b 5d		lda  p8v_f2
.36ad	20 d2 5a		jsr  p8b_callstack_w.p8s_push
.36b0	20 eb 34		jsr  p8b_apu.p8s_factor
.36b3	8d 39 5d		sta  p8v_f1
.36b6	8c 3a 5d		sty  p8v_f1+1
.36b9	e6 22			inc  p8b_main.p8v_pcode
.36bb	d0 02			bne  +
.36bd	e6 23			inc  p8b_main.p8v_pcode+1
.36bf			+
.36bf	b2 22			lda  (p8b_main.p8v_pcode)
.36c1	8d 3f 5d		sta  p8v_op1
.36c4			p8l_label_81_whileloop
.36c4	ad 3f 5d		lda  p8v_op1
.36c7	48			pha
.36c8	a9 89			lda  #<p8v_auto_heap_value_16
.36ca	a0 37			ldy  #>p8v_auto_heap_value_16
.36cc	85 7c			sta  P8ZP_SCRATCH_W1
.36ce	84 7d			sty  P8ZP_SCRATCH_W1+1
.36d0	68			pla
.36d1	a0 03			ldy  #3
.36d3	20 4a 5c		jsr  prog8_lib.containment_bytearray
.36d6	c9 00			cmp  #0
.36d8	d0 03			beq  p8l_label_82_afterwhile
.36da	4c 64 37
.36dd	e6 22			inc  p8b_main.p8v_pcode
.36df	d0 02			bne  +
.36e1	e6 23			inc  p8b_main.p8v_pcode+1
.36e3			+
.36e3	20 eb 34		jsr  p8b_apu.p8s_factor
.36e6	8d 3b 5d		sta  p8v_f2
.36e9	8c 3c 5d		sty  p8v_f2+1
.36ec	ad 3f 5d		lda  p8v_op1
.36ef	c9 1f			cmp  #31
.36f1	d0 1d			bne  label_asm_336_else
.36f3	ad 3b 5d		lda  p8v_f2
.36f6	ac 3c 5d		ldy  p8v_f2+1
.36f9	8d 84 5b		sta  math.multiply_words.multiplier
.36fc	8c 85 5b		sty  math.multiply_words.multiplier+1
.36ff	ad 39 5d		lda  p8v_f1
.3702	ac 3a 5d		ldy  p8v_f1+1
.3705	20 09 5b		jsr  math.multiply_words
.3708	8d 39 5d		sta  p8v_f1
.370b	8c 3a 5d		sty  p8v_f1+1
.370e	80 46			bra  label_asm_335_afterif
.3710			label_asm_336_else
.3710	ad 3f 5d		lda  p8v_op1
.3713	c9 20			cmp  #32
.3715	d0 1b			bne  label_asm_338_else
.3717	ad 39 5d		lda  p8v_f1
.371a	ac 3a 5d		ldy  p8v_f1+1
.371d	85 7c			sta  P8ZP_SCRATCH_W1
.371f	84 7d			sty  P8ZP_SCRATCH_W1+1
.3721	ad 3b 5d		lda  p8v_f2
.3724	ac 3c 5d		ldy  p8v_f2+1
.3727	20 88 5b		jsr  math.divmod_uw_asm
.372a	8d 39 5d		sta  p8v_f1
.372d	8c 3a 5d		sty  p8v_f1+1
.3730	80 24			bra  label_asm_337_afterif
.3732			label_asm_338_else
.3732	ad 3f 5d		lda  p8v_op1
.3735	c9 0d			cmp  #13
.3737	d0 1d			bne  label_asm_339_afterif
.3739	ad 39 5d		lda  p8v_f1
.373c	ac 3a 5d		ldy  p8v_f1+1
.373f	85 7c			sta  P8ZP_SCRATCH_W1
.3741	84 7d			sty  P8ZP_SCRATCH_W1+1
.3743	ad 3b 5d		lda  p8v_f2
.3746	ac 3c 5d		ldy  p8v_f2+1
.3749	20 88 5b		jsr  math.divmod_uw_asm
.374c	a5 7e			lda  P8ZP_SCRATCH_W2
.374e	8d 39 5d		sta  p8v_f1
.3751	a5 7f			lda  P8ZP_SCRATCH_W2+1
.3753	8d 3a 5d		sta  p8v_f1+1
.3756			label_asm_339_afterif
.3756			label_asm_337_afterif
.3756			label_asm_335_afterif
.3756	e6 22			inc  p8b_main.p8v_pcode
.3758	d0 02			bne  +
.375a	e6 23			inc  p8b_main.p8v_pcode+1
.375c			+
.375c	b2 22			lda  (p8b_main.p8v_pcode)
.375e	8d 3f 5d		sta  p8v_op1
.3761	4c c4 36		bra  p8l_label_81_whileloop
.3764			p8l_label_82_afterwhile
.3764	ad 39 5d		lda  p8v_f1
.3767	ac 3a 5d		ldy  p8v_f1+1
.376a	8d 3d 5d		sta  p8v_f3
.376d	8c 3e 5d		sty  p8v_f3+1
.3770	20 ed 5a		jsr  p8b_callstack_w.p8s_pop
.3773	8d 3b 5d		sta  p8v_f2
.3776	8c 3c 5d		sty  p8v_f2+1
.3779	20 ed 5a		jsr  p8b_callstack_w.p8s_pop
.377c	8d 39 5d		sta  p8v_f1
.377f	8c 3a 5d		sty  p8v_f1+1
.3782	ac 3e 5d		ldy  p8v_f3+1
.3785	ad 3d 5d		lda  p8v_f3
.3788	60			rts
>5d39			p8v_f1	.word  ?
>5d3b			p8v_f2	.word  ?
>5d3d			p8v_f3	.word  ?
>5d3f			p8v_op1	.byte  ?
>3789	0d 1f 20	p8v_auto_heap_value_16	.byte  $0d, $1f, $20
.378c			p8s_expr
.378c	9c 41 5d		stz  p8v_t1
.378f	9c 42 5d		stz  p8v_t1+1
.3792	9c 43 5d		stz  p8v_t2
.3795	9c 44 5d		stz  p8v_t2+1
.3798	9c 45 5d		stz  p8v_t3
.379b	9c 46 5d		stz  p8v_t3+1
.379e	9c 40 5d		stz  p8v_op
.37a1	ac 42 5d		ldy  p8v_t1+1
.37a4	ad 41 5d		lda  p8v_t1
.37a7	20 d2 5a		jsr  p8b_callstack_w.p8s_push
.37aa	ac 44 5d		ldy  p8v_t2+1
.37ad	ad 43 5d		lda  p8v_t2
.37b0	20 d2 5a		jsr  p8b_callstack_w.p8s_push
.37b3	20 89 36		jsr  p8b_apu.p8s_term
.37b6	8d 41 5d		sta  p8v_t1
.37b9	8c 42 5d		sty  p8v_t1+1
.37bc	b2 22			lda  (p8b_main.p8v_pcode)
.37be	8d 40 5d		sta  p8v_op
.37c1			p8l_label_83_whileloop
.37c1	ad 40 5d		lda  p8v_op
.37c4	48			pha
.37c5	a9 78			lda  #<p8v_auto_heap_value_17
.37c7	a0 38			ldy  #>p8v_auto_heap_value_17
.37c9	85 7c			sta  P8ZP_SCRATCH_W1
.37cb	84 7d			sty  P8ZP_SCRATCH_W1+1
.37cd	68			pla
.37ce	a0 04			ldy  #4
.37d0	20 4a 5c		jsr  prog8_lib.containment_bytearray
.37d3	c9 00			cmp  #0
.37d5	f0 7c			beq  p8l_label_84_afterwhile
.37d7	e6 22			inc  p8b_main.p8v_pcode
.37d9	d0 02			bne  +
.37db	e6 23			inc  p8b_main.p8v_pcode+1
.37dd			+
.37dd	20 89 36		jsr  p8b_apu.p8s_term
.37e0	8d 43 5d		sta  p8v_t2
.37e3	8c 44 5d		sty  p8v_t2+1
.37e6	ad 40 5d		lda  p8v_op
.37e9	c9 1c			cmp  #$1c
.37eb	f0 0e			beq  label_asm_341_choice
.37ed	c9 1d			cmp  #$1d
.37ef	f0 1f			beq  label_asm_342_choice
.37f1	c9 0a			cmp  #10
.37f3	f0 30			beq  label_asm_343_choice
.37f5	c9 0b			cmp  #11
.37f7	f0 40			beq  label_asm_344_choice
.37f9	80 50			bra  label_asm_340_choice_end
.37fb			label_asm_341_choice
.37fb	ad 41 5d		lda  p8v_t1
.37fe	18			clc
.37ff	6d 43 5d		adc  p8v_t2
.3802	8d 41 5d		sta  p8v_t1
.3805	ad 42 5d		lda  p8v_t1+1
.3808	6d 44 5d		adc  p8v_t2+1
.380b	8d 42 5d		sta  p8v_t1+1
.380e	80 3b			bra  label_asm_340_choice_end
.3810			label_asm_342_choice
.3810	ad 41 5d		lda  p8v_t1
.3813	38			sec
.3814	ed 43 5d		sbc  p8v_t2
.3817	8d 41 5d		sta  p8v_t1
.381a	ad 42 5d		lda  p8v_t1+1
.381d	ed 44 5d		sbc  p8v_t2+1
.3820	8d 42 5d		sta  p8v_t1+1
.3823	80 26			bra  label_asm_340_choice_end
.3825			label_asm_343_choice
.3825	ad 41 5d		lda  p8v_t1
.3828	2d 43 5d		and  p8v_t2
.382b	8d 41 5d		sta  p8v_t1
.382e	ad 42 5d		lda  p8v_t1+1
.3831	2d 44 5d		and  p8v_t2+1
.3834	8d 42 5d		sta  p8v_t1+1
.3837	80 12			bra  label_asm_340_choice_end
.3839			label_asm_344_choice
.3839	ad 41 5d		lda  p8v_t1
.383c	0d 43 5d		ora  p8v_t2
.383f	8d 41 5d		sta  p8v_t1
.3842	ad 42 5d		lda  p8v_t1+1
.3845	0d 44 5d		ora  p8v_t2+1
.3848	8d 42 5d		sta  p8v_t1+1
.384b			label_asm_340_choice_end
.384b	b2 22			lda  (p8b_main.p8v_pcode)
.384d	8d 40 5d		sta  p8v_op
.3850	4c c1 37		bra  p8l_label_83_whileloop
.3853			p8l_label_84_afterwhile
.3853	ad 41 5d		lda  p8v_t1
.3856	ac 42 5d		ldy  p8v_t1+1
.3859	8d 45 5d		sta  p8v_t3
.385c	8c 46 5d		sty  p8v_t3+1
.385f	20 ed 5a		jsr  p8b_callstack_w.p8s_pop
.3862	8d 43 5d		sta  p8v_t2
.3865	8c 44 5d		sty  p8v_t2+1
.3868	20 ed 5a		jsr  p8b_callstack_w.p8s_pop
.386b	8d 41 5d		sta  p8v_t1
.386e	8c 42 5d		sty  p8v_t1+1
.3871	ac 46 5d		ldy  p8v_t3+1
.3874	ad 45 5d		lda  p8v_t3
.3877	60			rts
>5d40			p8v_op	.byte  ?
>5d41			p8v_t1	.word  ?
>5d43			p8v_t2	.word  ?
>5d45			p8v_t3	.word  ?
>3878	0a 0b 1c 1d	p8v_auto_heap_value_17	.byte  $0a, $0b, $1c, $1d
.387c			p8s_expr_f
.387c	9c 48 5d		stz  p8v_tf1
.387f	9c 49 5d		stz  p8v_tf1+1
.3882	9c 4a 5d		stz  p8v_tf2
.3885	9c 4b 5d		stz  p8v_tf2+1
.3888	9c 47 5d		stz  p8v_opf
.388b	20 89 36		jsr  p8b_apu.p8s_term
.388e	8d 48 5d		sta  p8v_tf1
.3891	8c 49 5d		sty  p8v_tf1+1
.3894	b2 22			lda  (p8b_main.p8v_pcode)
.3896	8d 47 5d		sta  p8v_opf
.3899			p8l_label_85_whileloop
.3899	ad 47 5d		lda  p8v_opf
.389c	48			pha
.389d	a9 32			lda  #<p8v_auto_heap_value_18
.389f	a0 39			ldy  #>p8v_auto_heap_value_18
.38a1	85 7c			sta  P8ZP_SCRATCH_W1
.38a3	84 7d			sty  P8ZP_SCRATCH_W1+1
.38a5	68			pla
.38a6	a0 04			ldy  #4
.38a8	20 4a 5c		jsr  prog8_lib.containment_bytearray
.38ab	c9 00			cmp  #0
.38ad	f0 7c			beq  p8l_label_86_afterwhile
.38af	e6 22			inc  p8b_main.p8v_pcode
.38b1	d0 02			bne  +
.38b3	e6 23			inc  p8b_main.p8v_pcode+1
.38b5			+
.38b5	20 89 36		jsr  p8b_apu.p8s_term
.38b8	8d 4a 5d		sta  p8v_tf2
.38bb	8c 4b 5d		sty  p8v_tf2+1
.38be	ad 47 5d		lda  p8v_opf
.38c1	c9 1c			cmp  #$1c
.38c3	f0 0e			beq  label_asm_346_choice
.38c5	c9 1d			cmp  #$1d
.38c7	f0 1f			beq  label_asm_347_choice
.38c9	c9 0a			cmp  #10
.38cb	f0 30			beq  label_asm_348_choice
.38cd	c9 0b			cmp  #11
.38cf	f0 40			beq  label_asm_349_choice
.38d1	80 50			bra  label_asm_345_choice_end
.38d3			label_asm_346_choice
.38d3	ad 48 5d		lda  p8v_tf1
.38d6	18			clc
.38d7	6d 4a 5d		adc  p8v_tf2
.38da	8d 48 5d		sta  p8v_tf1
.38dd	ad 49 5d		lda  p8v_tf1+1
.38e0	6d 4b 5d		adc  p8v_tf2+1
.38e3	8d 49 5d		sta  p8v_tf1+1
.38e6	80 3b			bra  label_asm_345_choice_end
.38e8			label_asm_347_choice
.38e8	ad 48 5d		lda  p8v_tf1
.38eb	38			sec
.38ec	ed 4a 5d		sbc  p8v_tf2
.38ef	8d 48 5d		sta  p8v_tf1
.38f2	ad 49 5d		lda  p8v_tf1+1
.38f5	ed 4b 5d		sbc  p8v_tf2+1
.38f8	8d 49 5d		sta  p8v_tf1+1
.38fb	80 26			bra  label_asm_345_choice_end
.38fd			label_asm_348_choice
.38fd	ad 48 5d		lda  p8v_tf1
.3900	2d 4a 5d		and  p8v_tf2
.3903	8d 48 5d		sta  p8v_tf1
.3906	ad 49 5d		lda  p8v_tf1+1
.3909	2d 4b 5d		and  p8v_tf2+1
.390c	8d 49 5d		sta  p8v_tf1+1
.390f	80 12			bra  label_asm_345_choice_end
.3911			label_asm_349_choice
.3911	ad 48 5d		lda  p8v_tf1
.3914	0d 4a 5d		ora  p8v_tf2
.3917	8d 48 5d		sta  p8v_tf1
.391a	ad 49 5d		lda  p8v_tf1+1
.391d	0d 4b 5d		ora  p8v_tf2+1
.3920	8d 49 5d		sta  p8v_tf1+1
.3923			label_asm_345_choice_end
.3923	b2 22			lda  (p8b_main.p8v_pcode)
.3925	8d 47 5d		sta  p8v_opf
.3928	4c 99 38		bra  p8l_label_85_whileloop
.392b			p8l_label_86_afterwhile
.392b	ac 49 5d		ldy  p8v_tf1+1
.392e	ad 48 5d		lda  p8v_tf1
.3931	60			rts
>5d47			p8v_opf	.byte  ?
>5d48			p8v_tf1	.word  ?
>5d4a			p8v_tf2	.word  ?
>3932	0a 0b 1c 1d	p8v_auto_heap_value_18	.byte  $0a, $0b, $1c, $1d
.3936			p8s_expr_l
.3936	9c 4d 5d		stz  p8v_tl1
.3939	9c 4e 5d		stz  p8v_tl1+1
.393c	9c 4f 5d		stz  p8v_tl2
.393f	9c 50 5d		stz  p8v_tl2+1
.3942	9c 4c 5d		stz  p8v_opl
.3945	20 89 36		jsr  p8b_apu.p8s_term
.3948	8d 4d 5d		sta  p8v_tl1
.394b	8c 4e 5d		sty  p8v_tl1+1
.394e	b2 22			lda  (p8b_main.p8v_pcode)
.3950	8d 4c 5d		sta  p8v_opl
.3953			p8l_label_87_whileloop
.3953	ad 4c 5d		lda  p8v_opl
.3956	48			pha
.3957	a9 ec			lda  #<p8v_auto_heap_value_19
.3959	a0 39			ldy  #>p8v_auto_heap_value_19
.395b	85 7c			sta  P8ZP_SCRATCH_W1
.395d	84 7d			sty  P8ZP_SCRATCH_W1+1
.395f	68			pla
.3960	a0 04			ldy  #4
.3962	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3965	c9 00			cmp  #0
.3967	f0 7c			beq  p8l_label_88_afterwhile
.3969	e6 22			inc  p8b_main.p8v_pcode
.396b	d0 02			bne  +
.396d	e6 23			inc  p8b_main.p8v_pcode+1
.396f			+
.396f	20 89 36		jsr  p8b_apu.p8s_term
.3972	8d 4f 5d		sta  p8v_tl2
.3975	8c 50 5d		sty  p8v_tl2+1
.3978	ad 4c 5d		lda  p8v_opl
.397b	c9 1c			cmp  #$1c
.397d	f0 0e			beq  label_asm_351_choice
.397f	c9 1d			cmp  #$1d
.3981	f0 1f			beq  label_asm_352_choice
.3983	c9 0a			cmp  #10
.3985	f0 30			beq  label_asm_353_choice
.3987	c9 0b			cmp  #11
.3989	f0 40			beq  label_asm_354_choice
.398b	80 50			bra  label_asm_350_choice_end
.398d			label_asm_351_choice
.398d	ad 4d 5d		lda  p8v_tl1
.3990	18			clc
.3991	6d 4f 5d		adc  p8v_tl2
.3994	8d 4d 5d		sta  p8v_tl1
.3997	ad 4e 5d		lda  p8v_tl1+1
.399a	6d 50 5d		adc  p8v_tl2+1
.399d	8d 4e 5d		sta  p8v_tl1+1
.39a0	80 3b			bra  label_asm_350_choice_end
.39a2			label_asm_352_choice
.39a2	ad 4d 5d		lda  p8v_tl1
.39a5	38			sec
.39a6	ed 4f 5d		sbc  p8v_tl2
.39a9	8d 4d 5d		sta  p8v_tl1
.39ac	ad 4e 5d		lda  p8v_tl1+1
.39af	ed 50 5d		sbc  p8v_tl2+1
.39b2	8d 4e 5d		sta  p8v_tl1+1
.39b5	80 26			bra  label_asm_350_choice_end
.39b7			label_asm_353_choice
.39b7	ad 4d 5d		lda  p8v_tl1
.39ba	2d 4f 5d		and  p8v_tl2
.39bd	8d 4d 5d		sta  p8v_tl1
.39c0	ad 4e 5d		lda  p8v_tl1+1
.39c3	2d 50 5d		and  p8v_tl2+1
.39c6	8d 4e 5d		sta  p8v_tl1+1
.39c9	80 12			bra  label_asm_350_choice_end
.39cb			label_asm_354_choice
.39cb	ad 4d 5d		lda  p8v_tl1
.39ce	0d 4f 5d		ora  p8v_tl2
.39d1	8d 4d 5d		sta  p8v_tl1
.39d4	ad 4e 5d		lda  p8v_tl1+1
.39d7	0d 50 5d		ora  p8v_tl2+1
.39da	8d 4e 5d		sta  p8v_tl1+1
.39dd			label_asm_350_choice_end
.39dd	b2 22			lda  (p8b_main.p8v_pcode)
.39df	8d 4c 5d		sta  p8v_opl
.39e2	4c 53 39		bra  p8l_label_87_whileloop
.39e5			p8l_label_88_afterwhile
.39e5	ac 4e 5d		ldy  p8v_tl1+1
.39e8	ad 4d 5d		lda  p8v_tl1
.39eb	60			rts
>5d4c			p8v_opl	.byte  ?
>5d4d			p8v_tl1	.word  ?
>5d4f			p8v_tl2	.word  ?
>39ec	0a 0b 1c 1d	p8v_auto_heap_value_19	.byte  $0a, $0b, $1c, $1d
.39f0			p8s_strvarfactor
.39f0	9c 52 5d		stz  p8v_v
.39f3	9c 53 5d		stz  p8v_v+1
.39f6	b2 22			lda  (p8b_main.p8v_pcode)
.39f8	8d 51 5d		sta  p8v_op6
.39fb	c9 35			cmp  #53
.39fd	d0 27			bne  label_asm_355_afterif
.39ff	e6 22			inc  p8b_main.p8v_pcode
.3a01	d0 02			bne  +
.3a03	e6 23			inc  p8b_main.p8v_pcode+1
.3a05			+
.3a05	b2 22			lda  (p8b_main.p8v_pcode)
.3a07	20 de 4c		jsr  p8b_jdstrvars.p8s_get_value
.3a0a	8d 52 5d		sta  p8v_v
.3a0d	8c 53 5d		sty  p8v_v+1
.3a10	ee 52 5d		inc  p8v_v
.3a13	d0 03			bne  +
.3a15	ee 53 5d		inc  p8v_v+1
.3a18			+
.3a18	ee 52 5d		inc  p8v_v
.3a1b	d0 03			bne  +
.3a1d	ee 53 5d		inc  p8v_v+1
.3a20			+
.3a20	e6 22			inc  p8b_main.p8v_pcode
.3a22	d0 02			bne  +
.3a24	e6 23			inc  p8b_main.p8v_pcode+1
.3a26			+
.3a26			label_asm_355_afterif
.3a26	ac 53 5d		ldy  p8v_v+1
.3a29	ad 52 5d		lda  p8v_v
.3a2c	60			rts
>5d51			p8v_op6	.byte  ?
>5d52			p8v_v	.word  ?
.3a2d			p8s_strfactor
.3a2d	9c 55 5d		stz  p8v_r
.3a30	9c 56 5d		stz  p8v_r+1
.3a33	b2 22			lda  (p8b_main.p8v_pcode)
.3a35	8d 54 5d		sta  p8v_op4
.3a38	c9 2d			cmp  #45
.3a3a	d0 31			bne  label_asm_357_else
.3a3c	e6 22			inc  p8b_main.p8v_pcode
.3a3e	d0 02			bne  +
.3a40	e6 23			inc  p8b_main.p8v_pcode+1
.3a42			+
.3a42	a5 22			lda  p8b_main.p8v_pcode
.3a44	a4 23			ldy  p8b_main.p8v_pcode+1
.3a46	8d 55 5d		sta  p8v_r
.3a49	8c 56 5d		sty  p8v_r+1
.3a4c	a4 23			ldy  p8b_main.p8v_pcode+1
.3a4e	a5 22			lda  p8b_main.p8v_pcode
.3a50	20 73 28		jsr  string.length
.3a53	98			tya
.3a54	18			clc
.3a55	69 01			adc  #1
.3a57	8d 54 5d		sta  p8v_op4
.3a5a	a5 22			lda  p8b_main.p8v_pcode
.3a5c	18			clc
.3a5d	6d 54 5d		adc  p8v_op4
.3a60	85 22			sta  p8b_main.p8v_pcode
.3a62	90 02			bcc  +
.3a64	e6 23			inc  p8b_main.p8v_pcode+1
.3a66			+
.3a66	ac 56 5d		ldy  p8v_r+1
.3a69	ad 55 5d		lda  p8v_r
.3a6c	60			rts
.3a6d			label_asm_357_else
.3a6d	ad 54 5d		lda  p8v_op4
.3a70	c9 c0			cmp  #192
.3a72	d0 08			bne  label_asm_359_else
.3a74	e6 22			inc  p8b_main.p8v_pcode
.3a76	d0 02			bne  +
.3a78	e6 23			inc  p8b_main.p8v_pcode+1
.3a7a			+
.3a7a	80 33			bra  label_asm_358_afterif
.3a7c			label_asm_359_else
.3a7c	ad 54 5d		lda  p8v_op4
.3a7f	c9 ca			cmp  #202
.3a81	d0 23			bne  label_asm_361_else
.3a83	e6 22			inc  p8b_main.p8v_pcode
.3a85	d0 02			bne  +
.3a87	e6 23			inc  p8b_main.p8v_pcode+1
.3a89			+
.3a89	e6 22			inc  p8b_main.p8v_pcode
.3a8b	d0 02			bne  +
.3a8d	e6 23			inc  p8b_main.p8v_pcode+1
.3a8f			+
.3a8f	20 8c 37		jsr  p8b_apu.p8s_expr
.3a92	8d 55 5d		sta  p8v_r
.3a95	8c 56 5d		sty  p8v_r+1
.3a98	8d d1 32		sta  p8b_apu.p8v_strchr
.3a9b	e6 22			inc  p8b_main.p8v_pcode
.3a9d	d0 02			bne  +
.3a9f	e6 23			inc  p8b_main.p8v_pcode+1
.3aa1			+
.3aa1	a0 32			ldy  #>p8b_apu.p8v_strchr
.3aa3	a9 d1			lda  #<p8b_apu.p8v_strchr
.3aa5	60			rts
.3aa6			label_asm_361_else
.3aa6	20 f0 39		jsr  p8b_apu.p8s_strvarfactor
.3aa9	8d 55 5d		sta  p8v_r
.3aac	8c 56 5d		sty  p8v_r+1
.3aaf			label_asm_360_afterif
.3aaf			label_asm_358_afterif
.3aaf			label_asm_356_afterif
.3aaf	ac 56 5d		ldy  p8v_r+1
.3ab2	ad 55 5d		lda  p8v_r
.3ab5	60			rts
>5d54			p8v_op4	.byte  ?
>5d55			p8v_r	.word  ?
.3ab6			p8s_expr_str
.3ab6	9c 5c 5d		stz  p8v_ts1
.3ab9	9c 5d 5d		stz  p8v_ts1+1
.3abc	9c 5e 5d		stz  p8v_ts2
.3abf	9c 5f 5d		stz  p8v_ts2+1
.3ac2	9c 5b 5d		stz  p8v_op5
.3ac5	9c 59 5d		stz  p8v_lp
.3ac8	9c 5a 5d		stz  p8v_lp+1
.3acb	9c 57 5d		stz  p8v_co
.3ace	9c 58 5d		stz  p8v_co+1
.3ad1	20 2d 3a		jsr  p8b_apu.p8s_strfactor
.3ad4	8d 5c 5d		sta  p8v_ts1
.3ad7	8c 5d 5d		sty  p8v_ts1+1
.3ada	a9 d1			lda  #<p8b_apu.p8v_strbuf
.3adc	a0 31			ldy  #>p8b_apu.p8v_strbuf
.3ade	8d 59 5d		sta  p8v_lp
.3ae1	8c 5a 5d		sty  p8v_lp+1
.3ae4	9c 57 5d		stz  p8v_co
.3ae7	9c 58 5d		stz  p8v_co+1
.3aea			p8l_label_89_untilloop
.3aea	ad 5c 5d		lda  p8v_ts1
.3aed	ac 5d 5d		ldy  p8v_ts1+1
.3af0	85 7c			sta  P8ZP_SCRATCH_W1
.3af2	84 7d			sty  P8ZP_SCRATCH_W1+1
.3af4	b2 7c			lda  (P8ZP_SCRATCH_W1)
.3af6	ac 59 5d		ldy  p8v_lp
.3af9	84 7e			sty  P8ZP_SCRATCH_W2
.3afb	ac 5a 5d		ldy  p8v_lp+1
.3afe	84 7f			sty  P8ZP_SCRATCH_W2+1
.3b00	92 7e			sta  (P8ZP_SCRATCH_W2)
.3b02	ee 59 5d		inc  p8v_lp
.3b05	d0 03			bne  +
.3b07	ee 5a 5d		inc  p8v_lp+1
.3b0a			+
.3b0a	ee 5c 5d		inc  p8v_ts1
.3b0d	d0 03			bne  +
.3b0f	ee 5d 5d		inc  p8v_ts1+1
.3b12			+
.3b12	ee 57 5d		inc  p8v_co
.3b15	d0 03			bne  +
.3b17	ee 58 5d		inc  p8v_co+1
.3b1a			+
.3b1a	ad 5c 5d		lda  p8v_ts1
.3b1d	ac 5d 5d		ldy  p8v_ts1+1
.3b20	85 7c			sta  P8ZP_SCRATCH_W1
.3b22	84 7d			sty  P8ZP_SCRATCH_W1+1
.3b24	b2 7c			lda  (P8ZP_SCRATCH_W1)
.3b26	f0 02			beq  +
.3b28	a9 01			lda  #1
.3b2a	49 01		+                           eor  #1
.3b2c	d0 14			bne  label_asm_362_shortcut
.3b2e	ad 57 5d		lda  p8b_apu.p8s_expr_str.p8v_co
.3b31	c9 ff			cmp  #<255
.3b33	d0 0b			bne  label_asm_364_else
.3b35	ad 58 5d		lda  p8b_apu.p8s_expr_str.p8v_co+1
.3b38	c9 00			cmp  #>255
.3b3a	d0 04			bne  label_asm_364_else
.3b3c	a9 01		  lda  #1
.3b3e	80 02			bra  label_asm_363_afterif
.3b40			label_asm_364_else
.3b40	a9 00		  lda  #0
.3b42			label_asm_363_afterif
.3b42			label_asm_362_shortcut
.3b42	f0 a6			beq  p8l_label_89_untilloop
.3b44	a9 00			lda  #0
.3b46	ac 59 5d		ldy  p8v_lp
.3b49	84 7e			sty  P8ZP_SCRATCH_W2
.3b4b	ac 5a 5d		ldy  p8v_lp+1
.3b4e	84 7f			sty  P8ZP_SCRATCH_W2+1
.3b50	92 7e			sta  (P8ZP_SCRATCH_W2)
.3b52	b2 22			lda  (p8b_main.p8v_pcode)
.3b54	8d 5b 5d		sta  p8v_op5
.3b57			p8l_label_91_whileloop
.3b57	ad 5b 5d		lda  p8v_op5
.3b5a	c9 1c			cmp  #28
.3b5c	f0 03			bne  p8l_label_92_afterwhile
.3b5e	4c e7 3b
.3b61	e6 22			inc  p8b_main.p8v_pcode
.3b63	d0 02			bne  +
.3b65	e6 23			inc  p8b_main.p8v_pcode+1
.3b67			+
.3b67	20 2d 3a		jsr  p8b_apu.p8s_strfactor
.3b6a	8d 5e 5d		sta  p8v_ts2
.3b6d	8c 5f 5d		sty  p8v_ts2+1
.3b70	ad 5b 5d		lda  p8v_op5
.3b73	c9 1c			cmp  #28
.3b75	d0 68			bne  label_asm_365_afterif
.3b77			p8l_label_90_untilloop
.3b77	ad 5e 5d		lda  p8v_ts2
.3b7a	ac 5f 5d		ldy  p8v_ts2+1
.3b7d	85 7c			sta  P8ZP_SCRATCH_W1
.3b7f	84 7d			sty  P8ZP_SCRATCH_W1+1
.3b81	b2 7c			lda  (P8ZP_SCRATCH_W1)
.3b83	ac 59 5d		ldy  p8v_lp
.3b86	84 7e			sty  P8ZP_SCRATCH_W2
.3b88	ac 5a 5d		ldy  p8v_lp+1
.3b8b	84 7f			sty  P8ZP_SCRATCH_W2+1
.3b8d	92 7e			sta  (P8ZP_SCRATCH_W2)
.3b8f	ee 59 5d		inc  p8v_lp
.3b92	d0 03			bne  +
.3b94	ee 5a 5d		inc  p8v_lp+1
.3b97			+
.3b97	ee 5e 5d		inc  p8v_ts2
.3b9a	d0 03			bne  +
.3b9c	ee 5f 5d		inc  p8v_ts2+1
.3b9f			+
.3b9f	ee 57 5d		inc  p8v_co
.3ba2	d0 03			bne  +
.3ba4	ee 58 5d		inc  p8v_co+1
.3ba7			+
.3ba7	ad 5e 5d		lda  p8v_ts2
.3baa	ac 5f 5d		ldy  p8v_ts2+1
.3bad	85 7c			sta  P8ZP_SCRATCH_W1
.3baf	84 7d			sty  P8ZP_SCRATCH_W1+1
.3bb1	b2 7c			lda  (P8ZP_SCRATCH_W1)
.3bb3	f0 02			beq  +
.3bb5	a9 01			lda  #1
.3bb7	49 01		+                           eor  #1
.3bb9	d0 14			bne  label_asm_366_shortcut
.3bbb	ad 57 5d		lda  p8b_apu.p8s_expr_str.p8v_co
.3bbe	c9 ff			cmp  #<255
.3bc0	d0 0b			bne  label_asm_368_else
.3bc2	ad 58 5d		lda  p8b_apu.p8s_expr_str.p8v_co+1
.3bc5	c9 00			cmp  #>255
.3bc7	d0 04			bne  label_asm_368_else
.3bc9	a9 01		  lda  #1
.3bcb	80 02			bra  label_asm_367_afterif
.3bcd			label_asm_368_else
.3bcd	a9 00		  lda  #0
.3bcf			label_asm_367_afterif
.3bcf			label_asm_366_shortcut
.3bcf	f0 a6			beq  p8l_label_90_untilloop
.3bd1	a9 00			lda  #0
.3bd3	ac 59 5d		ldy  p8v_lp
.3bd6	84 7e			sty  P8ZP_SCRATCH_W2
.3bd8	ac 5a 5d		ldy  p8v_lp+1
.3bdb	84 7f			sty  P8ZP_SCRATCH_W2+1
.3bdd	92 7e			sta  (P8ZP_SCRATCH_W2)
.3bdf			label_asm_365_afterif
.3bdf	b2 22			lda  (p8b_main.p8v_pcode)
.3be1	8d 5b 5d		sta  p8v_op5
.3be4	4c 57 3b		bra  p8l_label_91_whileloop
.3be7			p8l_label_92_afterwhile
.3be7	a0 31			ldy  #>p8b_apu.p8v_strbuf
.3be9	a9 d1			lda  #<p8b_apu.p8v_strbuf
.3beb	60			rts
>5d57			p8v_co	.word  ?
>5d59			p8v_lp	.word  ?
>5d5b			p8v_op5	.byte  ?
>5d5c			p8v_ts1	.word  ?
>5d5e			p8v_ts2	.word  ?
.3bec			p8b_runlang
=55			p8v_funcvar 	= 55 	; zp UBYTE
=56			p8v_funcno 	= 56 	; zp UBYTE
=57			p8v_funcit 	= 57 	; zp UBYTE
.3bec			p8v_varname
>3bec	00 00 00		.byte  $00, $00, $00
.3bef			p8s_do_for
=121			p8v_vt 	= 121 	; zp UBYTE
=212			p8v_vn 	= 212 	; zp UBYTE
=213			p8v_to_v 	= 213 	; zp UWORD
=215			p8v_step_v 	= 215 	; zp UWORD
=217			p8v_from_v 	= 217 	; zp UWORD
.3bef	64 d9			stz  p8v_from_v
.3bf1	64 da			stz  p8v_from_v+1
.3bf3	64 d5			stz  p8v_to_v
.3bf5	64 d6			stz  p8v_to_v+1
.3bf7	64 d7			stz  p8v_step_v
.3bf9	64 d8			stz  p8v_step_v+1
.3bfb	64 79			stz  p8v_vt
.3bfd	64 d4			stz  p8v_vn
.3bff	e6 22			inc  p8b_main.p8v_pcode
.3c01	d0 02			bne  +
.3c03	e6 23			inc  p8b_main.p8v_pcode+1
.3c05			+
.3c05	b2 22			lda  (p8b_main.p8v_pcode)
.3c07	85 79			sta  p8v_vt
.3c09	e6 22			inc  p8b_main.p8v_pcode
.3c0b	d0 02			bne  +
.3c0d	e6 23			inc  p8b_main.p8v_pcode+1
.3c0f			+
.3c0f	b2 22			lda  (p8b_main.p8v_pcode)
.3c11	85 d4			sta  p8v_vn
.3c13	e6 22			inc  p8b_main.p8v_pcode
.3c15	d0 02			bne  +
.3c17	e6 23			inc  p8b_main.p8v_pcode+1
.3c19			+
.3c19	e6 22			inc  p8b_main.p8v_pcode
.3c1b	d0 02			bne  +
.3c1d	e6 23			inc  p8b_main.p8v_pcode+1
.3c1f			+
.3c1f	20 8c 37		jsr  p8b_apu.p8s_expr
.3c22	85 d9			sta  p8v_from_v
.3c24	84 da			sty  p8v_from_v+1
.3c26	e6 22			inc  p8b_main.p8v_pcode
.3c28	d0 02			bne  +
.3c2a	e6 23			inc  p8b_main.p8v_pcode+1
.3c2c			+
.3c2c	20 8c 37		jsr  p8b_apu.p8s_expr
.3c2f	85 d5			sta  p8v_to_v
.3c31	84 d6			sty  p8v_to_v+1
.3c33	b2 22			lda  (p8b_main.p8v_pcode)
.3c35	85 d7			sta  p8v_step_v
.3c37	64 d8			stz  p8v_step_v+1
.3c39	a5 d7			lda  p8b_runlang.p8s_do_for.p8v_step_v
.3c3b	c9 46			cmp  #<70
.3c3d	d0 15			bne  label_asm_370_else
.3c3f	a5 d8			lda  p8b_runlang.p8s_do_for.p8v_step_v+1
.3c41	c9 00			cmp  #>70
.3c43	d0 0f			bne  label_asm_370_else
.3c45	e6 22			inc  p8b_main.p8v_pcode
.3c47	d0 02			bne  +
.3c49	e6 23			inc  p8b_main.p8v_pcode+1
.3c4b			+
.3c4b	20 8c 37		jsr  p8b_apu.p8s_expr
.3c4e	85 d7			sta  p8v_step_v
.3c50	84 d8			sty  p8v_step_v+1
.3c52	80 08			bra  label_asm_369_afterif
.3c54			label_asm_370_else
.3c54	a9 01			lda  #<1
.3c56	a0 00			ldy  #>1
.3c58	85 d7			sta  p8v_step_v
.3c5a	84 d8			sty  p8v_step_v+1
.3c5c			label_asm_369_afterif
.3c5c	a5 79			lda  p8v_vt
.3c5e	c9 2e			cmp  #46
.3c60	d0 0e			bne  label_asm_372_else
.3c62	a5 d9			lda  p8v_from_v
.3c64	48			pha
.3c65	a5 d4			lda  p8v_vn
.3c67	85 7e			sta  P8ZP_SCRATCH_W2
.3c69	64 7f			stz  P8ZP_SCRATCH_W2+1
.3c6b	68			pla
.3c6c	92 7e			sta  (P8ZP_SCRATCH_W2)
.3c6e	80 27			bra  label_asm_371_afterif
.3c70			label_asm_372_else
.3c70	a5 79			lda  p8v_vt
.3c72	48			pha
.3c73	a9 d5			lda  #<p8v_auto_heap_value_20
.3c75	a0 3c			ldy  #>p8v_auto_heap_value_20
.3c77	85 7c			sta  P8ZP_SCRATCH_W1
.3c79	84 7d			sty  P8ZP_SCRATCH_W1+1
.3c7b	68			pla
.3c7c	a0 02			ldy  #2
.3c7e	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3c81	c9 00			cmp  #0
.3c83	f0 12			beq  label_asm_373_afterif
.3c85	a5 d4			lda  p8v_vn
.3c87	8d 17 60		sta  p8b_jdvars.p8s_set_value.p8v_index
.3c8a	a5 d9			lda  p8v_from_v
.3c8c	a4 da			ldy  p8v_from_v+1
.3c8e	8d 18 60		sta  p8b_jdvars.p8s_set_value.p8v_value
.3c91	8c 19 60		sty  p8b_jdvars.p8s_set_value.p8v_value+1
.3c94	20 46 4b		jsr  p8b_jdvars.p8s_set_value
.3c97			label_asm_373_afterif
.3c97			label_asm_371_afterif
.3c97	a5 22			lda  p8b_main.p8v_pcode
.3c99	a4 23			ldy  p8b_main.p8v_pcode+1
.3c9b	8d 9d 69		sta  p8b_forstack.p8s_push.p8v_start_address_code1
.3c9e	8c 9e 69		sty  p8b_forstack.p8s_push.p8v_start_address_code1+1
.3ca1	a5 79			lda  p8v_vt
.3ca3	8d a0 69		sta  p8b_forstack.p8s_push.p8v_var_type
.3ca6	a5 d4			lda  p8v_vn
.3ca8	8d 9f 69		sta  p8b_forstack.p8s_push.p8v_var_num
.3cab	a5 d9			lda  p8v_from_v
.3cad	a4 da			ldy  p8v_from_v+1
.3caf	8d 97 69		sta  p8b_forstack.p8s_push.p8v_for_from_val
.3cb2	8c 98 69		sty  p8b_forstack.p8s_push.p8v_for_from_val+1
.3cb5	a5 d5			lda  p8v_to_v
.3cb7	a4 d6			ldy  p8v_to_v+1
.3cb9	8d 9b 69		sta  p8b_forstack.p8s_push.p8v_for_to_val
.3cbc	8c 9c 69		sty  p8b_forstack.p8s_push.p8v_for_to_val+1
.3cbf	a5 d7			lda  p8v_step_v
.3cc1	a4 d8			ldy  p8v_step_v+1
.3cc3	8d 99 69		sta  p8b_forstack.p8s_push.p8v_for_step_val
.3cc6	8c 9a 69		sty  p8b_forstack.p8s_push.p8v_for_step_val+1
.3cc9	20 cc 59		jsr  p8b_forstack.p8s_push
.3ccc	a5 22			lda  p8b_main.p8v_pcode
.3cce	d0 02			bne  +
.3cd0	c6 23			dec  p8b_main.p8v_pcode+1
.3cd2	c6 22		+                           dec  p8b_main.p8v_pcode
.3cd4	60			rts
>3cd5	30 44		p8v_auto_heap_value_20	.byte  $30, $44
.3cd7			p8s_do_next
=59			p8v_vt 	= 59 	; zp UBYTE
=60			p8v_vns 	= 60 	; zp UBYTE
=61			p8v_vn 	= 61 	; zp UBYTE
=62			p8v_value 	= 62 	; zp UWORD
=92			p8v_to_v 	= 92 	; zp UWORD
=94			p8v_step_v 	= 94 	; zp UWORD
=96			p8v_f_addr 	= 96 	; zp UWORD
.3cd7	64 3b			stz  p8v_vt
.3cd9	64 3d			stz  p8v_vn
.3cdb	64 3c			stz  p8v_vns
.3cdd	64 5c			stz  p8v_to_v
.3cdf	64 5d			stz  p8v_to_v+1
.3ce1	64 60			stz  p8v_f_addr
.3ce3	64 61			stz  p8v_f_addr+1
.3ce5	64 5e			stz  p8v_step_v
.3ce7	64 5f			stz  p8v_step_v+1
.3ce9	64 3e			stz  p8v_value
.3ceb	64 3f			stz  p8v_value+1
.3ced	e6 22			inc  p8b_main.p8v_pcode
.3cef	d0 02			bne  +
.3cf1	e6 23			inc  p8b_main.p8v_pcode+1
.3cf3			+
.3cf3	b2 22			lda  (p8b_main.p8v_pcode)
.3cf5	85 3b			sta  p8v_vt
.3cf7	e6 22			inc  p8b_main.p8v_pcode
.3cf9	d0 02			bne  +
.3cfb	e6 23			inc  p8b_main.p8v_pcode+1
.3cfd			+
.3cfd	b2 22			lda  (p8b_main.p8v_pcode)
.3cff	85 3d			sta  p8v_vn
.3d01	20 3e 5a		jsr  p8b_forstack.p8s_pop3
.3d04	85 3c			sta  p8v_vns
.3d06	c5 3d			cmp  p8v_vn
.3d08	f0 05			beq  label_asm_374_afterif
.3d0a	a9 06			lda  #6
.3d0c	20 70 44		jsr  p8b_error.p8s_set
.3d0f			label_asm_374_afterif
.3d0f	20 48 5a		jsr  p8b_forstack.p8s_pop5
.3d12	85 5c			sta  p8v_to_v
.3d14	84 5d			sty  p8v_to_v+1
.3d16	20 60 5a		jsr  p8b_forstack.p8s_pop6
.3d19	85 5e			sta  p8v_step_v
.3d1b	84 5f			sty  p8v_step_v+1
.3d1d	a5 3b			lda  p8v_vt
.3d1f	c9 2e			cmp  #46
.3d21	d0 10			bne  label_asm_376_else
.3d23	a5 3d			lda  p8v_vn
.3d25	85 7e			sta  P8ZP_SCRATCH_W2
.3d27	64 7f			stz  P8ZP_SCRATCH_W2+1
.3d29	b2 7e			lda  (P8ZP_SCRATCH_W2)
.3d2b	a0 00			ldy  #0
.3d2d	85 3e			sta  p8v_value
.3d2f	84 3f			sty  p8v_value+1
.3d31	80 1e			bra  label_asm_375_afterif
.3d33			label_asm_376_else
.3d33	a5 3b			lda  p8v_vt
.3d35	48			pha
.3d36	a9 c1			lda  #<p8v_auto_heap_value_21
.3d38	a0 3d			ldy  #>p8v_auto_heap_value_21
.3d3a	85 7c			sta  P8ZP_SCRATCH_W1
.3d3c	84 7d			sty  P8ZP_SCRATCH_W1+1
.3d3e	68			pla
.3d3f	a0 02			ldy  #2
.3d41	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3d44	c9 00			cmp  #0
.3d46	f0 09			beq  label_asm_377_afterif
.3d48	a5 3d			lda  p8v_vn
.3d4a	20 36 4b		jsr  p8b_jdvars.p8s_get_value
.3d4d	85 3e			sta  p8v_value
.3d4f	84 3f			sty  p8v_value+1
.3d51			label_asm_377_afterif
.3d51			label_asm_375_afterif
.3d51	a5 3e			lda  p8v_value
.3d53	18			clc
.3d54	65 5e			adc  p8v_step_v
.3d56	85 3e			sta  p8v_value
.3d58	a5 3f			lda  p8v_value+1
.3d5a	65 5f			adc  p8v_step_v+1
.3d5c	85 3f			sta  p8v_value+1
.3d5e	a4 5d			ldy  p8v_to_v+1
.3d60	a5 5c			lda  p8v_to_v
.3d62	c5 3e			cmp  p8v_value
.3d64	98			tya
.3d65	e5 3f			sbc  p8v_value+1
.3d67	90 50			bcc  label_asm_379_else
.3d69	a5 3b			lda  p8v_vt
.3d6b	c9 2e			cmp  #46
.3d6d	d0 0e			bne  label_asm_381_else
.3d6f	a5 3e			lda  p8v_value
.3d71	48			pha
.3d72	a5 3d			lda  p8v_vn
.3d74	85 7e			sta  P8ZP_SCRATCH_W2
.3d76	64 7f			stz  P8ZP_SCRATCH_W2+1
.3d78	68			pla
.3d79	92 7e			sta  (P8ZP_SCRATCH_W2)
.3d7b	80 27			bra  label_asm_380_afterif
.3d7d			label_asm_381_else
.3d7d	a5 3b			lda  p8v_vt
.3d7f	48			pha
.3d80	a9 c3			lda  #<p8v_auto_heap_value_22
.3d82	a0 3d			ldy  #>p8v_auto_heap_value_22
.3d84	85 7c			sta  P8ZP_SCRATCH_W1
.3d86	84 7d			sty  P8ZP_SCRATCH_W1+1
.3d88	68			pla
.3d89	a0 02			ldy  #2
.3d8b	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3d8e	c9 00			cmp  #0
.3d90	f0 12			beq  label_asm_382_afterif
.3d92	a5 3d			lda  p8v_vn
.3d94	8d 17 60		sta  p8b_jdvars.p8s_set_value.p8v_index
.3d97	a5 3e			lda  p8v_value
.3d99	a4 3f			ldy  p8v_value+1
.3d9b	8d 18 60		sta  p8b_jdvars.p8s_set_value.p8v_value
.3d9e	8c 19 60		sty  p8b_jdvars.p8s_set_value.p8v_value+1
.3da1	20 46 4b		jsr  p8b_jdvars.p8s_set_value
.3da4			label_asm_382_afterif
.3da4			label_asm_380_afterif
.3da4	20 26 5a		jsr  p8b_forstack.p8s_pop1
.3da7	85 60			sta  p8v_f_addr
.3da9	84 61			sty  p8v_f_addr+1
.3dab	85 22			sta  p8b_main.p8v_pcode
.3dad	84 23			sty  p8b_main.p8v_pcode+1
.3daf	a5 22			lda  p8b_main.p8v_pcode
.3db1	d0 02			bne  +
.3db3	c6 23			dec  p8b_main.p8v_pcode+1
.3db5	c6 22		+                           dec  p8b_main.p8v_pcode
.3db7	80 07			bra  label_asm_378_afterif
.3db9			label_asm_379_else
.3db9	20 78 5a		jsr  p8b_forstack.p8s_pope
.3dbc	85 3e			sta  p8v_value
.3dbe	84 3f			sty  p8v_value+1
.3dc0			label_asm_378_afterif
.3dc0	60			rts
>3dc1	30 44		p8v_auto_heap_value_21	.byte  $30, $44
>3dc3	30 44		p8v_auto_heap_value_22	.byte  $30, $44
.3dc5			p8s_do_goto
=112			p8v_value 	= 112 	; zp UWORD
=114			p8v_r 	= 114 	; zp UBYTE
=115			p8v_m 	= 115 	; zp UBYTE
=116			p8v_l 	= 116 	; zp UBYTE
.3dc5	64 70			stz  p8v_value
.3dc7	64 71			stz  p8v_value+1
.3dc9	64 74			stz  p8v_l
.3dcb	64 73			stz  p8v_m
.3dcd	64 72			stz  p8v_r
.3dcf	20 f5 19		jsr  p8b_main.p8s_next
.3dd2	85 72			sta  p8v_r
.3dd4	b2 22			lda  (p8b_main.p8v_pcode)
.3dd6	85 74			sta  p8v_l
.3dd8	e6 22			inc  p8b_main.p8v_pcode
.3dda	d0 02			bne  +
.3ddc	e6 23			inc  p8b_main.p8v_pcode+1
.3dde			+
.3dde	b2 22			lda  (p8b_main.p8v_pcode)
.3de0	85 73			sta  p8v_m
.3de2	a5 74			lda  p8v_l
.3de4	a4 73			ldy  p8v_m
.3de6	85 70			sta  p8v_value
.3de8	84 71			sty  p8v_value+1
.3dea	85 22			sta  p8b_main.p8v_pcode
.3dec	84 23			sty  p8b_main.p8v_pcode+1
.3dee	a5 22			lda  p8b_main.p8v_pcode
.3df0	d0 02			bne  +
.3df2	c6 23			dec  p8b_main.p8v_pcode+1
.3df4	c6 22		+                           dec  p8b_main.p8v_pcode
.3df6	60			rts
.3df7			p8s_do_callfunc
=227			p8v_token 	= 227 	; zp UBYTE
=228			p8v_toaddr 	= 228 	; zp UWORD
=230			p8v_n_t 	= 230 	; zp UBYTE
=231			p8v_n_i 	= 231 	; zp UBYTE
=232			p8v_n_funcvar 	= 232 	; zp UBYTE
=233			p8v_n_funcno 	= 233 	; zp UBYTE
=234			p8v_n_funcit 	= 234 	; zp UBYTE
=235			p8v_lfunc 	= 235 	; zp UBYTE
=236			p8v_lende 	= 236 	; zp BOOL
=237			p8v_cv 	= 237 	; zp UWORD
.3df7	85 eb			sta  p8v_lfunc
.3df9	64 ec			stz  p8v_lende
.3dfb	64 ed			stz  p8v_cv
.3dfd	64 ee			stz  p8v_cv+1
.3dff	64 e4			stz  p8v_toaddr
.3e01	64 e5			stz  p8v_toaddr+1
.3e03	64 e3			stz  p8v_token
.3e05	64 e9			stz  p8v_n_funcno
.3e07	64 e8			stz  p8v_n_funcvar
.3e09	64 ea			stz  p8v_n_funcit
.3e0b	64 e6			stz  p8v_n_t
.3e0d	64 e7			stz  p8v_n_i
.3e0f	a5 37			lda  p8b_runlang.p8v_funcvar
.3e11	20 b1 5a		jsr  p8b_callstack_b.p8s_push
.3e14	a5 38			lda  p8b_runlang.p8v_funcno
.3e16	20 b1 5a		jsr  p8b_callstack_b.p8s_push
.3e19	a9 01			lda  #1
.3e1b	85 e7			sta  p8v_n_i
.3e1d	a5 37			lda  p8b_runlang.p8v_funcvar
.3e1f	c5 e7			cmp  p8v_n_i
.3e21	90 2a			bcc  label_asm_384_for_end
.3e23	8d 46 3e		sta  label_asm_385_for_modified+1
.3e26			label_asm_383_for_loop
.3e26	a5 38			lda  p8b_runlang.p8v_funcno
.3e28	8d ec 3b		sta  p8b_runlang.p8v_varname
.3e2b	a5 e7			lda  p8v_n_i
.3e2d	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.3e30	a0 3b			ldy  #>p8b_runlang.p8v_varname
.3e32	a9 ec			lda  #<p8b_runlang.p8v_varname
.3e34	20 8c 53		jsr  p8b_jdlocal.p8s_get_indexbyname
.3e37	85 e6			sta  p8v_n_t
.3e39	20 06 54		jsr  p8b_jdlocal.p8s_get_value
.3e3c	85 ed			sta  p8v_cv
.3e3e	84 ee			sty  p8v_cv+1
.3e40	20 d2 5a		jsr  p8b_callstack_w.p8s_push
.3e43	a5 e7			lda  p8v_n_i
.3e45	c9 00		label_asm_385_for_modified          cmp  #0         ; modified
.3e47	f0 04			beq  label_asm_384_for_end
.3e49	e6 e7			inc  p8v_n_i
.3e4b	80 d9			bra  label_asm_383_for_loop
.3e4d			label_asm_384_for_end
.3e4d	64 e8			stz  p8v_n_funcvar
.3e4f	a5 eb			lda  p8v_lfunc
.3e51	f0 06			beq  label_asm_388_else
.3e53	a5 eb			lda  p8v_lfunc
.3e55	85 e9			sta  p8v_n_funcno
.3e57	80 0a			bra  label_asm_387_afterif
.3e59			label_asm_388_else
.3e59	e6 22			inc  p8b_main.p8v_pcode
.3e5b	d0 02			bne  +
.3e5d	e6 23			inc  p8b_main.p8v_pcode+1
.3e5f			+
.3e5f	b2 22			lda  (p8b_main.p8v_pcode)
.3e61	85 e9			sta  p8v_n_funcno
.3e63			label_asm_387_afterif
.3e63	a5 e9			lda  p8v_n_funcno
.3e65	20 f7 58		jsr  p8b_jdfunc.p8s_get_stack
.3e68	85 ea			sta  p8v_n_funcit
.3e6a	e6 ea			inc  p8v_n_funcit
.3e6c	a5 e9			lda  p8v_n_funcno
.3e6e	a4 ea			ldy  p8v_n_funcit
.3e70	20 01 59		jsr  p8b_jdfunc.p8s_set_stack
.3e73	e6 22			inc  p8b_main.p8v_pcode
.3e75	d0 02			bne  +
.3e77	e6 23			inc  p8b_main.p8v_pcode+1
.3e79			+
.3e79			p8l_label_93_untilloop
.3e79	b2 22			lda  (p8b_main.p8v_pcode)
.3e7b	48			pha
.3e7c	a9 4e			lda  #<p8v_auto_heap_value_23
.3e7e	a0 40			ldy  #>p8v_auto_heap_value_23
.3e80	85 7c			sta  P8ZP_SCRATCH_W1
.3e82	84 7d			sty  P8ZP_SCRATCH_W1+1
.3e84	68			pla
.3e85	a0 0a			ldy  #10
.3e87	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3e8a	c9 00			cmp  #0
.3e8c	d0 03			beq  label_asm_390_else
.3e8e	4c 6d 3f
.3e91	e6 e8			inc  p8v_n_funcvar
.3e93	b2 22			lda  (p8b_main.p8v_pcode)
.3e95	48			pha
.3e96	a9 58			lda  #<p8v_auto_heap_value_24
.3e98	a0 40			ldy  #>p8v_auto_heap_value_24
.3e9a	85 7c			sta  P8ZP_SCRATCH_W1
.3e9c	84 7d			sty  P8ZP_SCRATCH_W1+1
.3e9e	68			pla
.3e9f	a0 02			ldy  #2
.3ea1	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3ea4	c9 00			cmp  #0
.3ea6	f0 7f			beq  label_asm_392_else
.3ea8	e6 22			inc  p8b_main.p8v_pcode
.3eaa	d0 02			bne  +
.3eac	e6 23			inc  p8b_main.p8v_pcode+1
.3eae			+
.3eae	b2 22			lda  (p8b_main.p8v_pcode)
.3eb0	85 ed			sta  p8v_cv
.3eb2	64 ee			stz  p8v_cv+1
.3eb4	e6 22			inc  p8b_main.p8v_pcode
.3eb6	d0 02			bne  +
.3eb8	e6 23			inc  p8b_main.p8v_pcode+1
.3eba			+
.3eba	b2 22			lda  (p8b_main.p8v_pcode)
.3ebc	85 e6			sta  p8v_n_t
.3ebe	c9 24			cmp  #36
.3ec0	d0 23			bne  label_asm_394_else
.3ec2	a5 e9			lda  p8v_n_funcno
.3ec4	8d ec 3b		sta  p8b_runlang.p8v_varname
.3ec7	a5 e8			lda  p8v_n_funcvar
.3ec9	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.3ecc	a9 ec			lda  #<p8b_runlang.p8v_varname
.3ece	a0 3b			ldy  #>p8b_runlang.p8v_varname
.3ed0	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.3ed3	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.3ed6	a5 ed			lda  p8v_cv
.3ed8	a4 ee			ldy  p8v_cv+1
.3eda	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.3edd	8c 57 65		sty  p8b_jdlocal.p8s_insert.p8v_value+1
.3ee0	20 02 51		jsr  p8b_jdlocal.p8s_insert
.3ee3	80 40			bra  label_asm_393_afterif
.3ee5			label_asm_394_else
.3ee5	a5 22			lda  p8b_main.p8v_pcode
.3ee7	d0 02			bne  +
.3ee9	c6 23			dec  p8b_main.p8v_pcode+1
.3eeb	c6 22		+                           dec  p8b_main.p8v_pcode
.3eed	a5 22			lda  p8b_main.p8v_pcode
.3eef	d0 02			bne  +
.3ef1	c6 23			dec  p8b_main.p8v_pcode+1
.3ef3	c6 22		+                           dec  p8b_main.p8v_pcode
.3ef5	20 7c 38		jsr  p8b_apu.p8s_expr_f
.3ef8	85 ed			sta  p8v_cv
.3efa	84 ee			sty  p8v_cv+1
.3efc	a5 22			lda  p8b_main.p8v_pcode
.3efe	d0 02			bne  +
.3f00	c6 23			dec  p8b_main.p8v_pcode+1
.3f02	c6 22		+                           dec  p8b_main.p8v_pcode
.3f04	a5 e9			lda  p8v_n_funcno
.3f06	8d ec 3b		sta  p8b_runlang.p8v_varname
.3f09	a5 e8			lda  p8v_n_funcvar
.3f0b	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.3f0e	a9 ec			lda  #<p8b_runlang.p8v_varname
.3f10	a0 3b			ldy  #>p8b_runlang.p8v_varname
.3f12	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.3f15	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.3f18	a5 ed			lda  p8v_cv
.3f1a	a4 ee			ldy  p8v_cv+1
.3f1c	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.3f1f	8c 57 65		sty  p8b_jdlocal.p8s_insert.p8v_value+1
.3f22	20 02 51		jsr  p8b_jdlocal.p8s_insert
.3f25			label_asm_393_afterif
.3f25	80 44			bra  label_asm_391_afterif
.3f27			label_asm_392_else
.3f27	a5 e9			lda  p8v_n_funcno
.3f29	20 b1 5a		jsr  p8b_callstack_b.p8s_push
.3f2c	a5 e8			lda  p8v_n_funcvar
.3f2e	20 b1 5a		jsr  p8b_callstack_b.p8s_push
.3f31	20 8c 37		jsr  p8b_apu.p8s_expr
.3f34	85 ed			sta  p8v_cv
.3f36	84 ee			sty  p8v_cv+1
.3f38	20 c1 5a		jsr  p8b_callstack_b.p8s_pop
.3f3b	85 e8			sta  p8v_n_funcvar
.3f3d	20 c1 5a		jsr  p8b_callstack_b.p8s_pop
.3f40	85 e9			sta  p8v_n_funcno
.3f42	a5 22			lda  p8b_main.p8v_pcode
.3f44	d0 02			bne  +
.3f46	c6 23			dec  p8b_main.p8v_pcode+1
.3f48	c6 22		+                           dec  p8b_main.p8v_pcode
.3f4a	a5 e9			lda  p8v_n_funcno
.3f4c	8d ec 3b		sta  p8b_runlang.p8v_varname
.3f4f	a5 e8			lda  p8v_n_funcvar
.3f51	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.3f54	a9 ec			lda  #<p8b_runlang.p8v_varname
.3f56	a0 3b			ldy  #>p8b_runlang.p8v_varname
.3f58	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.3f5b	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.3f5e	a5 ed			lda  p8v_cv
.3f60	a4 ee			ldy  p8v_cv+1
.3f62	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.3f65	8c 57 65		sty  p8b_jdlocal.p8s_insert.p8v_value+1
.3f68	20 02 51		jsr  p8b_jdlocal.p8s_insert
.3f6b			label_asm_391_afterif
.3f6b	80 3b			bra  label_asm_389_afterif
.3f6d			label_asm_390_else
.3f6d	b2 22			lda  (p8b_main.p8v_pcode)
.3f6f	c9 d7			cmp  #215
.3f71	d0 35			bne  label_asm_395_afterif
.3f73	e6 e8			inc  p8v_n_funcvar
.3f75	e6 22			inc  p8b_main.p8v_pcode
.3f77	d0 02			bne  +
.3f79	e6 23			inc  p8b_main.p8v_pcode+1
.3f7b			+
.3f7b	b2 22			lda  (p8b_main.p8v_pcode)
.3f7d	85 ed			sta  p8v_cv
.3f7f	64 ee			stz  p8v_cv+1
.3f81	a5 e9			lda  p8v_n_funcno
.3f83	8d ec 3b		sta  p8b_runlang.p8v_varname
.3f86	a9 01			lda  #1
.3f88	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.3f8b	a9 ec			lda  #<p8b_runlang.p8v_varname
.3f8d	a0 3b			ldy  #>p8b_runlang.p8v_varname
.3f8f	8d 54 65		sta  p8b_jdlocal.p8s_insert.p8v_name
.3f92	8c 55 65		sty  p8b_jdlocal.p8s_insert.p8v_name+1
.3f95	a5 ed			lda  p8v_cv
.3f97	a4 ee			ldy  p8v_cv+1
.3f99	8d 56 65		sta  p8b_jdlocal.p8s_insert.p8v_value
.3f9c	8c 57 65		sty  p8b_jdlocal.p8s_insert.p8v_value+1
.3f9f	20 02 51		jsr  p8b_jdlocal.p8s_insert
.3fa2	e6 22			inc  p8b_main.p8v_pcode
.3fa4	d0 02			bne  +
.3fa6	e6 23			inc  p8b_main.p8v_pcode+1
.3fa8			+
.3fa8			label_asm_395_afterif
.3fa8			label_asm_389_afterif
.3fa8	e6 22			inc  p8b_main.p8v_pcode
.3faa	d0 02			bne  +
.3fac	e6 23			inc  p8b_main.p8v_pcode+1
.3fae			+
.3fae	b2 22			lda  (p8b_main.p8v_pcode)
.3fb0	48			pha
.3fb1	a9 5a			lda  #<p8v_auto_heap_value_25
.3fb3	a0 40			ldy  #>p8v_auto_heap_value_25
.3fb5	85 7c			sta  P8ZP_SCRATCH_W1
.3fb7	84 7d			sty  P8ZP_SCRATCH_W1+1
.3fb9	68			pla
.3fba	a0 03			ldy  #3
.3fbc	20 4a 5c		jsr  prog8_lib.containment_bytearray
.3fbf	c9 00			cmp  #0
.3fc1	f0 04			beq  label_asm_396_afterif
.3fc3	a9 01			lda  #1
.3fc5	85 ec			sta  p8v_lende
.3fc7			label_asm_396_afterif
.3fc7	a5 ec			lda  p8v_lende
.3fc9	d0 03			beq  p8l_label_93_untilloop
.3fcb	4c 79 3e
.3fce	b2 22			lda  (p8b_main.p8v_pcode)
.3fd0	c9 26			cmp  #38
.3fd2	d0 06			bne  label_asm_397_afterif
.3fd4	e6 22			inc  p8b_main.p8v_pcode
.3fd6	d0 02			bne  +
.3fd8	e6 23			inc  p8b_main.p8v_pcode+1
.3fda			+
.3fda			label_asm_397_afterif
.3fda	a5 e9			lda  p8v_n_funcno
.3fdc	85 38			sta  p8b_runlang.p8v_funcno
.3fde	a5 e8			lda  p8v_n_funcvar
.3fe0	85 37			sta  p8b_runlang.p8v_funcvar
.3fe2	a5 ea			lda  p8v_n_funcit
.3fe4	85 39			sta  p8b_runlang.p8v_funcit
.3fe6	a4 23			ldy  p8b_main.p8v_pcode+1
.3fe8	a5 22			lda  p8b_main.p8v_pcode
.3fea	20 95 59		jsr  p8b_funcstack.p8s_push
.3fed	a5 38			lda  p8b_runlang.p8v_funcno
.3fef	20 e7 58		jsr  p8b_jdfunc.p8s_get_value
.3ff2	85 e4			sta  p8v_toaddr
.3ff4	84 e5			sty  p8v_toaddr+1
.3ff6	18			clc
.3ff7	69 04			adc  #4
.3ff9	85 e4			sta  p8v_toaddr
.3ffb	90 02			bcc  +
.3ffd	e6 e5			inc  p8v_toaddr+1
.3fff			+
.3fff	b2 e4			lda  (p8v_toaddr)
.4001	48			pha
.4002	a0 01			ldy  #1
.4004	b1 e4			lda  (p8v_toaddr),y
.4006	a8			tay
.4007	68			pla
.4008	85 ed			sta  p8v_cv
.400a	84 ee			sty  p8v_cv+1
.400c	85 22			sta  p8b_main.p8v_pcode
.400e	84 23			sty  p8b_main.p8v_pcode+1
.4010			p8l_label_97_repeat
.4010	b2 22			lda  (p8b_main.p8v_pcode)
.4012	85 e3			sta  p8v_token
.4014	c9 7f			cmp  #127
.4016	f0 2e			beq  p8l_label_94_after
.4018	a5 e3			lda  p8v_token
.401a	c9 2b			cmp  #43
.401c	d0 0f			bne  label_asm_398_afterif
.401e	e6 22			inc  p8b_main.p8v_pcode
.4020	d0 02			bne  +
.4022	e6 23			inc  p8b_main.p8v_pcode+1
.4024			+
.4024	20 8c 37		jsr  p8b_apu.p8s_expr
.4027	85 ed			sta  p8v_cv
.4029	84 ee			sty  p8v_cv+1
.402b	80 19			bra  p8l_label_95_after
.402d			label_asm_398_afterif
.402d	a5 e3			lda  p8v_token
.402f	c9 02			cmp  #2
.4031	d0 06			bne  label_asm_399_afterif
.4033	64 ed			stz  p8v_cv
.4035	64 ee			stz  p8v_cv+1
.4037	80 0d			bra  p8l_label_96_after
.4039			label_asm_399_afterif
.4039	a5 e3			lda  p8v_token
.403b	20 1d 1b		jsr  p8b_main.p8s_statement
.403e	e6 22			inc  p8b_main.p8v_pcode
.4040	d0 02			bne  +
.4042	e6 23			inc  p8b_main.p8v_pcode+1
.4044			+
.4044	80 ca			bra  p8l_label_97_repeat
.4046			p8l_label_96_after
.4046			p8l_label_95_after
.4046			p8l_label_94_after
.4046	20 94 40		jsr  p8b_runlang.p8s_do_endfunc
.4049	a4 ee			ldy  p8v_cv+1
.404b	a5 ed			lda  p8v_cv
.404d	60			rts
>404e	2c 2e 30 34	p8v_auto_heap_value_23	.byte  $2c, $2e, $30, $34, $44, $47, $ae, $b0, $b4, $c4
>4052	44 47 ae b0 b4 c4
>4058	34 b4		p8v_auto_heap_value_24	.byte  $34, $b4
>405a	19 26 7f	p8v_auto_heap_value_25	.byte  $19, $26, $7f
.405d			p8s_do_func
=117			p8v_m 	= 117 	; zp UBYTE
=118			p8v_l 	= 118 	; zp UBYTE
=119			p8v_efueaddr 	= 119 	; zp UWORD
.405d	64 77			stz  p8v_efueaddr
.405f	64 78			stz  p8v_efueaddr+1
.4061	64 76			stz  p8v_l
.4063	64 75			stz  p8v_m
.4065	e6 22			inc  p8b_main.p8v_pcode
.4067	d0 02			bne  +
.4069	e6 23			inc  p8b_main.p8v_pcode+1
.406b			+
.406b	e6 22			inc  p8b_main.p8v_pcode
.406d	d0 02			bne  +
.406f	e6 23			inc  p8b_main.p8v_pcode+1
.4071			+
.4071	b2 22			lda  (p8b_main.p8v_pcode)
.4073	85 76			sta  p8v_l
.4075	e6 22			inc  p8b_main.p8v_pcode
.4077	d0 02			bne  +
.4079	e6 23			inc  p8b_main.p8v_pcode+1
.407b			+
.407b	b2 22			lda  (p8b_main.p8v_pcode)
.407d	85 75			sta  p8v_m
.407f	a5 76			lda  p8v_l
.4081	a4 75			ldy  p8v_m
.4083	85 77			sta  p8v_efueaddr
.4085	84 78			sty  p8v_efueaddr+1
.4087	85 22			sta  p8b_main.p8v_pcode
.4089	84 23			sty  p8b_main.p8v_pcode+1
.408b	a5 22			lda  p8b_main.p8v_pcode
.408d	d0 02			bne  +
.408f	c6 23			dec  p8b_main.p8v_pcode+1
.4091	c6 22		+                           dec  p8b_main.p8v_pcode
.4093	60			rts
.4094			p8s_do_endfunc
=219			p8v_toaddr 	= 219 	; zp UWORD
=221			p8v_n_t 	= 221 	; zp UBYTE
=222			p8v_n_i 	= 222 	; zp UBYTE
=223			p8v_cv 	= 223 	; zp UWORD
.4094	64 db			stz  p8v_toaddr
.4096	64 dc			stz  p8v_toaddr+1
.4098	64 df			stz  p8v_cv
.409a	64 e0			stz  p8v_cv+1
.409c	64 dd			stz  p8v_n_t
.409e	64 de			stz  p8v_n_i
.40a0	20 b0 59		jsr  p8b_funcstack.p8s_pop
.40a3	85 db			sta  p8v_toaddr
.40a5	84 dc			sty  p8v_toaddr+1
.40a7	20 c1 5a		jsr  p8b_callstack_b.p8s_pop
.40aa	85 38			sta  p8b_runlang.p8v_funcno
.40ac	20 c1 5a		jsr  p8b_callstack_b.p8s_pop
.40af	85 37			sta  p8b_runlang.p8v_funcvar
.40b1	85 de			sta  p8v_n_i
.40b3	a9 01			lda  #1
.40b5	c5 de			cmp  p8v_n_i
.40b7	f0 02			beq  +
.40b9	b0 39			bcs  label_asm_401_for_end
.40bb			+
.40bb	8d ed 40		sta  label_asm_402_for_modified+1
.40be			label_asm_400_for_loop
.40be	a5 38			lda  p8b_runlang.p8v_funcno
.40c0	8d ec 3b		sta  p8b_runlang.p8v_varname
.40c3	a5 de			lda  p8v_n_i
.40c5	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.40c8	a0 3b			ldy  #>p8b_runlang.p8v_varname
.40ca	a9 ec			lda  #<p8b_runlang.p8v_varname
.40cc	20 8c 53		jsr  p8b_jdlocal.p8s_get_indexbyname
.40cf	85 dd			sta  p8v_n_t
.40d1	20 ed 5a		jsr  p8b_callstack_w.p8s_pop
.40d4	85 df			sta  p8v_cv
.40d6	84 e0			sty  p8v_cv+1
.40d8	a5 dd			lda  p8v_n_t
.40da	8d 61 65		sta  p8b_jdlocal.p8s_set_value.p8v_index
.40dd	a5 df			lda  p8v_cv
.40df	a4 e0			ldy  p8v_cv+1
.40e1	8d 62 65		sta  p8b_jdlocal.p8s_set_value.p8v_value
.40e4	8c 63 65		sty  p8b_jdlocal.p8s_set_value.p8v_value+1
.40e7	20 16 54		jsr  p8b_jdlocal.p8s_set_value
.40ea	a5 de			lda  p8v_n_i
.40ec	c9 00		label_asm_402_for_modified          cmp  #0         ; modified
.40ee	f0 04			beq  label_asm_401_for_end
.40f0	c6 de			dec  p8v_n_i
.40f2	80 ca			bra  label_asm_400_for_loop
.40f4			label_asm_401_for_end
.40f4	a5 db			lda  p8v_toaddr
.40f6	a4 dc			ldy  p8v_toaddr+1
.40f8	85 22			sta  p8b_main.p8v_pcode
.40fa	84 23			sty  p8b_main.p8v_pcode+1
.40fc	a5 22			lda  p8b_main.p8v_pcode
.40fe	d0 02			bne  +
.4100	c6 23			dec  p8b_main.p8v_pcode+1
.4102	c6 22		+                           dec  p8b_main.p8v_pcode
.4104	60			rts
.4105			p8s_do_if
=103			p8v_thenaddr 	= 103 	; zp UWORD
=105			p8v_m 	= 105 	; zp UBYTE
=106			p8v_l 	= 106 	; zp UBYTE
=107			p8v_endifaddr 	= 107 	; zp UWORD
=109			p8v_elseaddr 	= 109 	; zp UWORD
=111			p8v_b1 	= 111 	; zp BOOL
.4105	64 6d			stz  p8v_elseaddr
.4107	64 6e			stz  p8v_elseaddr+1
.4109	64 67			stz  p8v_thenaddr
.410b	64 68			stz  p8v_thenaddr+1
.410d	64 6b			stz  p8v_endifaddr
.410f	64 6c			stz  p8v_endifaddr+1
.4111	64 6a			stz  p8v_l
.4113	64 69			stz  p8v_m
.4115	a9 01			lda  #1
.4117	85 6f			sta  p8v_b1
.4119	e6 22			inc  p8b_main.p8v_pcode
.411b	d0 02			bne  +
.411d	e6 23			inc  p8b_main.p8v_pcode+1
.411f			+
.411f	b2 22			lda  (p8b_main.p8v_pcode)
.4121	85 6a			sta  p8v_l
.4123	e6 22			inc  p8b_main.p8v_pcode
.4125	d0 02			bne  +
.4127	e6 23			inc  p8b_main.p8v_pcode+1
.4129			+
.4129	b2 22			lda  (p8b_main.p8v_pcode)
.412b	85 69			sta  p8v_m
.412d	a5 6a			lda  p8v_l
.412f	a4 69			ldy  p8v_m
.4131	85 6d			sta  p8v_elseaddr
.4133	84 6e			sty  p8v_elseaddr+1
.4135	e6 22			inc  p8b_main.p8v_pcode
.4137	d0 02			bne  +
.4139	e6 23			inc  p8b_main.p8v_pcode+1
.413b			+
.413b	b2 22			lda  (p8b_main.p8v_pcode)
.413d	85 6a			sta  p8v_l
.413f	e6 22			inc  p8b_main.p8v_pcode
.4141	d0 02			bne  +
.4143	e6 23			inc  p8b_main.p8v_pcode+1
.4145			+
.4145	b2 22			lda  (p8b_main.p8v_pcode)
.4147	85 69			sta  p8v_m
.4149	a5 6a			lda  p8v_l
.414b	a4 69			ldy  p8v_m
.414d	85 67			sta  p8v_thenaddr
.414f	84 68			sty  p8v_thenaddr+1
.4151	e6 22			inc  p8b_main.p8v_pcode
.4153	d0 02			bne  +
.4155	e6 23			inc  p8b_main.p8v_pcode+1
.4157			+
.4157	b2 22			lda  (p8b_main.p8v_pcode)
.4159	85 6a			sta  p8v_l
.415b	e6 22			inc  p8b_main.p8v_pcode
.415d	d0 02			bne  +
.415f	e6 23			inc  p8b_main.p8v_pcode+1
.4161			+
.4161	b2 22			lda  (p8b_main.p8v_pcode)
.4163	85 69			sta  p8v_m
.4165	a5 6a			lda  p8v_l
.4167	a4 69			ldy  p8v_m
.4169	85 6b			sta  p8v_endifaddr
.416b	84 6c			sty  p8v_endifaddr+1
.416d	a5 6d			lda  p8v_elseaddr
.416f	a4 6e			ldy  p8v_elseaddr+1
.4171	8d a8 68		sta  p8b_ifstack.p8s_push.p8v_elseaddress
.4174	8c a9 68		sty  p8b_ifstack.p8s_push.p8v_elseaddress+1
.4177	a5 67			lda  p8v_thenaddr
.4179	a4 68			ldy  p8v_thenaddr+1
.417b	8d ac 68		sta  p8b_ifstack.p8s_push.p8v_thenaddress
.417e	8c ad 68		sty  p8b_ifstack.p8s_push.p8v_thenaddress+1
.4181	a5 6b			lda  p8v_endifaddr
.4183	a4 6c			ldy  p8v_endifaddr+1
.4185	8d aa 68		sta  p8b_ifstack.p8s_push.p8v_endifaddress
.4188	8c ab 68		sty  p8b_ifstack.p8s_push.p8v_endifaddress+1
.418b	20 12 59		jsr  p8b_ifstack.p8s_push
.418e	e6 22			inc  p8b_main.p8v_pcode
.4190	d0 02			bne  +
.4192	e6 23			inc  p8b_main.p8v_pcode+1
.4194			+
.4194	20 d4 32		jsr  p8b_apu.p8s_relation
.4197	85 6f			sta  p8v_b1
.4199	a5 6f			lda  p8v_b1
.419b	f0 12			beq  label_asm_405_else
.419d	a5 67			lda  p8v_thenaddr
.419f	a4 68			ldy  p8v_thenaddr+1
.41a1	85 22			sta  p8b_main.p8v_pcode
.41a3	84 23			sty  p8b_main.p8v_pcode+1
.41a5	a5 22			lda  p8b_main.p8v_pcode
.41a7	d0 02			bne  +
.41a9	c6 23			dec  p8b_main.p8v_pcode+1
.41ab	c6 22		+                           dec  p8b_main.p8v_pcode
.41ad	80 28			bra  label_asm_404_afterif
.41af			label_asm_405_else
.41af	a5 6d			lda  p8v_elseaddr
.41b1	05 6e			ora  p8v_elseaddr+1
.41b3	d0 12			bne  label_asm_407_else
.41b5	a5 6b			lda  p8v_endifaddr
.41b7	a4 6c			ldy  p8v_endifaddr+1
.41b9	85 22			sta  p8b_main.p8v_pcode
.41bb	84 23			sty  p8b_main.p8v_pcode+1
.41bd	a5 22			lda  p8b_main.p8v_pcode
.41bf	d0 02			bne  +
.41c1	c6 23			dec  p8b_main.p8v_pcode+1
.41c3	c6 22		+                           dec  p8b_main.p8v_pcode
.41c5	80 10			bra  label_asm_406_afterif
.41c7			label_asm_407_else
.41c7	a5 6d			lda  p8v_elseaddr
.41c9	a4 6e			ldy  p8v_elseaddr+1
.41cb	85 22			sta  p8b_main.p8v_pcode
.41cd	84 23			sty  p8b_main.p8v_pcode+1
.41cf	a5 22			lda  p8b_main.p8v_pcode
.41d1	d0 02			bne  +
.41d3	c6 23			dec  p8b_main.p8v_pcode+1
.41d5	c6 22		+                           dec  p8b_main.p8v_pcode
.41d7			label_asm_406_afterif
.41d7			label_asm_404_afterif
.41d7	60			rts
.41d8			p8s_do_then
=58			p8v_r 	= 58 	; zp UBYTE
.41d8	64 3a			stz  p8v_r
.41da	20 f5 19		jsr  p8b_main.p8s_next
.41dd	85 3a			sta  p8v_r
.41df	60			rts
.41e0			p8s_do_else
=225			p8v_endifaddr 	= 225 	; zp UWORD
.41e0	20 79 59		jsr  p8b_ifstack.p8s_pope
.41e3	85 e1			sta  p8v_endifaddr
.41e5	84 e2			sty  p8v_endifaddr+1
.41e7	85 22			sta  p8b_main.p8v_pcode
.41e9	84 23			sty  p8b_main.p8v_pcode+1
.41eb	a5 22			lda  p8b_main.p8v_pcode
.41ed	d0 02			bne  +
.41ef	c6 23			dec  p8b_main.p8v_pcode+1
.41f1	c6 22		+                           dec  p8b_main.p8v_pcode
.41f3	60			rts
.41f4			p8s_do_array
=239			p8v_vartype 	= 239 	; zp UBYTE
=240			p8v_value 	= 240 	; zp UWORD
=242			p8v_t 	= 242 	; zp UWORD
=244			p8v_r 	= 244 	; zp UBYTE
=245			p8v_n 	= 245 	; zp UBYTE
=246			p8v_j 	= 246 	; zp UWORD
=248			p8v_ind 	= 248 	; zp UWORD
=250			p8v_i 	= 250 	; zp UBYTE
.41f4	85 ef			sta  p8v_vartype
.41f6	64 f4			stz  p8v_r
.41f8	64 fa			stz  p8v_i
.41fa	64 f5			stz  p8v_n
.41fc	64 f8			stz  p8v_ind
.41fe	64 f9			stz  p8v_ind+1
.4200	64 f0			stz  p8v_value
.4202	64 f1			stz  p8v_value+1
.4204	64 f2			stz  p8v_t
.4206	64 f3			stz  p8v_t+1
.4208	64 f6			stz  p8v_j
.420a	64 f7			stz  p8v_j+1
.420c	20 f5 19		jsr  p8b_main.p8s_next
.420f	85 fa			sta  p8v_i
.4211	20 f5 19		jsr  p8b_main.p8s_next
.4214	85 f4			sta  p8v_r
.4216	c9 24			cmp  #36
.4218	f0 03			bne  label_asm_409_else
.421a	4c 0d 43
.421d	20 f5 19		jsr  p8b_main.p8s_next
.4220	85 f4			sta  p8v_r
.4222	b2 22			lda  (p8b_main.p8v_pcode)
.4224	c9 29			cmp  #41
.4226	f0 03			bne  label_asm_410_afterif
.4228	4c 0b 43
.422b	20 f5 19		jsr  p8b_main.p8s_next
.422e	85 f4			sta  p8v_r
.4230	b2 22			lda  (p8b_main.p8v_pcode)
.4232	c9 23			cmp  #35
.4234	d0 f2			bne  label_asm_411_afterif
.4236	a5 fa			lda  p8v_i
.4238	20 17 48		jsr  p8b_jdheap.p8s_init_list
.423b	85 f0			sta  p8v_value
.423d	84 f1			sty  p8v_value+1
.423f	a5 fa			lda  p8v_i
.4241	0a			asl  a
.4242	a8			tay
.4243	a5 f0			lda  p8v_value
.4245	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4248	a5 f1			lda  p8v_value+1
.424a	99 6a 61		sta  p8b_jdarrvars.p8v_arrvars_addr+1,y
.424d			p8l_label_98_untilloop
.424d	e6 22			inc  p8b_main.p8v_pcode
.424f	d0 02			bne  +
.4251	e6 23			inc  p8b_main.p8v_pcode+1
.4253			+
.4253	e6 22			inc  p8b_main.p8v_pcode
.4255	d0 02			bne  +
.4257	e6 23			inc  p8b_main.p8v_pcode+1
.4259			+
.4259	20 8d 33		jsr  p8b_apu.p8s_get_number
.425c	85 f0			sta  p8v_value
.425e	84 f1			sty  p8v_value+1
.4260	20 91 48		jsr  p8b_jdheap.p8s_add_list
.4263	e6 22			inc  p8b_main.p8v_pcode
.4265	d0 02			bne  +
.4267	e6 23			inc  p8b_main.p8v_pcode+1
.4269			+
.4269	b2 22			lda  (p8b_main.p8v_pcode)
.426b	48			pha
.426c	a9 69			lda  #<p8v_auto_heap_value_26
.426e	a0 43			ldy  #>p8v_auto_heap_value_26
.4270	85 7c			sta  P8ZP_SCRATCH_W1
.4272	84 7d			sty  P8ZP_SCRATCH_W1+1
.4274	68			pla
.4275	a0 03			ldy  #3
.4277	20 4a 5c		jsr  prog8_lib.containment_bytearray
.427a	c9 00			cmp  #0
.427c	f0 cf			beq  p8l_label_98_untilloop
.427e	b2 22			lda  (p8b_main.p8v_pcode)
.4280	c9 24			cmp  #36
.4282	d0 a4			bne  label_asm_412_afterif
.4284	e6 22			inc  p8b_main.p8v_pcode
.4286	d0 02			bne  +
.4288	e6 23			inc  p8b_main.p8v_pcode+1
.428a			+
.428a	b2 22			lda  (p8b_main.p8v_pcode)
.428c	c9 1f			cmp  #31
.428e	d0 04			bne  label_asm_415_else
.4290	a9 01		  lda  #1
.4292	80 02			bra  label_asm_414_afterif
.4294			label_asm_415_else
.4294	a9 00		  lda  #0
.4296			label_asm_414_afterif
.4296	f0 14			beq  label_asm_413_shortcut
.4298	ad 7f 5d		lda  p8b_jdheap.p8v_ll
.429b	c9 01			cmp  #<1
.429d	d0 0b			bne  label_asm_417_else
.429f	ad 80 5d		lda  p8b_jdheap.p8v_ll+1
.42a2	c9 00			cmp  #>1
.42a4	d0 04			bne  label_asm_417_else
.42a6	a9 01		  lda  #1
.42a8	80 02			bra  label_asm_416_afterif
.42aa			label_asm_417_else
.42aa	a9 00		  lda  #0
.42ac			label_asm_416_afterif
.42ac			label_asm_413_shortcut
.42ac	f0 52			beq  label_asm_419_else
.42ae	e6 22			inc  p8b_main.p8v_pcode
.42b0	d0 02			bne  +
.42b2	e6 23			inc  p8b_main.p8v_pcode+1
.42b4			+
.42b4	b2 22			lda  (p8b_main.p8v_pcode)
.42b6	c9 2c			cmp  #44
.42b8	d0 44			bne  label_asm_420_afterif
.42ba	e6 22			inc  p8b_main.p8v_pcode
.42bc	d0 02			bne  +
.42be	e6 23			inc  p8b_main.p8v_pcode+1
.42c0			+
.42c0	20 8d 33		jsr  p8b_apu.p8s_get_number
.42c3	85 f2			sta  p8v_t
.42c5	84 f3			sty  p8v_t+1
.42c7	a9 01			lda  #<1
.42c9	a0 00			ldy  #>1
.42cb	85 f6			sta  p8v_j
.42cd	84 f7			sty  p8v_j+1
.42cf	a4 f3			ldy  p8v_t+1
.42d1	a5 f2			lda  p8v_t
.42d3	c4 f7			cpy  p8v_j+1
.42d5	90 27			                bcc  label_asm_422_for_end
.42d7	d0 04			                bne  +
.42d9	c5 f6			                cmp  p8v_j
.42db	90 21			                bcc  label_asm_422_for_end
.42dd			+
.42dd	8c ed 42		sty  label_asm_423_for_modified+1
.42e0	8d f3 42		sta  label_asm_424_for_modifiedb+1
.42e3			label_asm_421_for_loop
.42e3	a4 f1			ldy  p8v_value+1
.42e5	a5 f0			lda  p8v_value
.42e7	20 91 48		jsr  p8b_jdheap.p8s_add_list
.42ea	a5 f7			lda  p8v_j+1
.42ec	c9 00		label_asm_423_for_modified  cmp  #0    ; modified
.42ee	d0 06			bne  +
.42f0	a5 f6			lda  p8v_j
.42f2	c9 00		label_asm_424_for_modifiedb cmp  #0    ; modified
.42f4	f0 08			beq  label_asm_422_for_end
.42f6	e6 f6		+               inc  p8v_j
.42f8	d0 e9			bne  label_asm_421_for_loop
.42fa	e6 f7			inc  p8v_j+1
.42fc	80 e5			bra  label_asm_421_for_loop
.42fe			label_asm_422_for_end
.42fe			label_asm_420_afterif
.42fe	80 08			bra  label_asm_418_afterif
.4300			label_asm_419_else
.4300	a5 22			lda  p8b_main.p8v_pcode
.4302	d0 02			bne  +
.4304	c6 23			dec  p8b_main.p8v_pcode+1
.4306	c6 22		+                           dec  p8b_main.p8v_pcode
.4308			label_asm_418_afterif
.4308	20 f1 48		jsr  p8b_jdheap.p8s_close_list
.430b			label_asm_412_afterif
.430b			label_asm_411_afterif
.430b			label_asm_410_afterif
.430b	80 5b			bra  label_asm_408_afterif
.430d			label_asm_409_else
.430d	20 8c 37		jsr  p8b_apu.p8s_expr
.4310	85 f8			sta  p8v_ind
.4312	84 f9			sty  p8v_ind+1
.4314	20 f5 19		jsr  p8b_main.p8s_next
.4317	85 f4			sta  p8v_r
.4319	b2 22			lda  (p8b_main.p8v_pcode)
.431b	c9 29			cmp  #41
.431d	d0 49			bne  label_asm_425_afterif
.431f	20 f5 19		jsr  p8b_main.p8s_next
.4322	85 f4			sta  p8v_r
.4324	20 8c 37		jsr  p8b_apu.p8s_expr
.4327	85 f0			sta  p8v_value
.4329	84 f1			sty  p8v_value+1
.432b	a5 ef			lda  p8v_vartype
.432d	c9 01			cmp  #1
.432f	d0 15			bne  label_asm_426_afterif
.4331	a5 38			lda  p8b_runlang.p8v_funcno
.4333	8d ec 3b		sta  p8b_runlang.p8v_varname
.4336	a5 fa			lda  p8v_i
.4338	8d ed 3b		sta  p8b_runlang.p8v_varname+1
.433b	a0 3b			ldy  #>p8b_runlang.p8v_varname
.433d	a9 ec			lda  #<p8b_runlang.p8v_varname
.433f	20 6e 52		jsr  p8b_jdlocal.p8s_get_name
.4342	85 f5			sta  p8v_n
.4344	85 fa			sta  p8v_i
.4346			label_asm_426_afterif
.4346	a5 fa			lda  p8v_i
.4348	8d c8 62		sta  p8b_jdarrvars.p8s_set_value.p8v_nr
.434b	a5 f8			lda  p8v_ind
.434d	a4 f9			ldy  p8v_ind+1
.434f	8d c4 62		sta  p8b_jdarrvars.p8s_set_value.p8v_index
.4352	8c c5 62		sty  p8b_jdarrvars.p8s_set_value.p8v_index+1
.4355	a5 f0			lda  p8v_value
.4357	a4 f1			ldy  p8v_value+1
.4359	8d cd 62		sta  p8b_jdarrvars.p8s_set_value.p8v_value
.435c	8c ce 62		sty  p8b_jdarrvars.p8s_set_value.p8v_value+1
.435f	20 14 50		jsr  p8b_jdarrvars.p8s_set_value
.4362	e6 22			inc  p8b_main.p8v_pcode
.4364	d0 02			bne  +
.4366	e6 23			inc  p8b_main.p8v_pcode+1
.4368			+
.4368			label_asm_425_afterif
.4368			label_asm_408_afterif
.4368	60			rts
>4369	00 19 24	p8v_auto_heap_value_26	.byte  $00, $19, $24
.436c			p8s_do_let
=64			p8v_vartype 	= 64 	; zp UBYTE
=98			p8v_value 	= 98 	; zp UWORD
=100			p8v_r 	= 100 	; zp UBYTE
=101			p8v_mt 	= 101 	; zp UBYTE
=102			p8v_i 	= 102 	; zp UBYTE
.436c	85 40			sta  p8v_vartype
.436e	64 64			stz  p8v_r
.4370	64 66			stz  p8v_i
.4372	b2 22			lda  (p8b_main.p8v_pcode)
.4374	85 65			sta  p8v_mt
.4376	64 62			stz  p8v_value
.4378	64 63			stz  p8v_value+1
.437a	20 f5 19		jsr  p8b_main.p8s_next
.437d	85 66			sta  p8v_i
.437f	20 f5 19		jsr  p8b_main.p8s_next
.4382	85 64			sta  p8v_r
.4384	c9 29			cmp  #41
.4386	f0 03			bne  label_asm_428_else
.4388	4c 52 44
.438b	20 f5 19		jsr  p8b_main.p8s_next
.438e	a0 00			ldy  #0
.4390	a5 40			lda  p8v_vartype
.4392	20 80 5a		jsr  p8b_varstack.p8s_push
.4395	a0 00			ldy  #0
.4397	a5 66			lda  p8v_i
.4399	20 80 5a		jsr  p8b_varstack.p8s_push
.439c	b2 22			lda  (p8b_main.p8v_pcode)
.439e	c9 47			cmp  #71
.43a0	d0 09			bne  label_asm_430_else
.43a2	20 36 39		jsr  p8b_apu.p8s_expr_l
.43a5	85 62			sta  p8v_value
.43a7	84 63			sty  p8v_value+1
.43a9	80 16			bra  label_asm_429_afterif
.43ab			label_asm_430_else
.43ab	a5 40			lda  p8v_vartype
.43ad	c9 02			cmp  #2
.43af	d0 09			bne  label_asm_432_else
.43b1	20 b6 3a		jsr  p8b_apu.p8s_expr_str
.43b4	85 62			sta  p8v_value
.43b6	84 63			sty  p8v_value+1
.43b8	80 07			bra  label_asm_431_afterif
.43ba			label_asm_432_else
.43ba	20 8c 37		jsr  p8b_apu.p8s_expr
.43bd	85 62			sta  p8v_value
.43bf	84 63			sty  p8v_value+1
.43c1			label_asm_431_afterif
.43c1			label_asm_429_afterif
.43c1	20 95 5a		jsr  p8b_varstack.p8s_pop
.43c4	85 66			sta  p8v_i
.43c6	20 95 5a		jsr  p8b_varstack.p8s_pop
.43c9	85 40			sta  p8v_vartype
.43cb	c9 01			cmp  #1
.43cd	d0 28			bne  label_asm_434_else
.43cf	a5 65			lda  p8v_mt
.43d1	c9 ae			cmp  #174
.43d3	d0 14			bne  label_asm_436_else
.43d5	a5 66			lda  p8v_i
.43d7	8d 61 65		sta  p8b_jdlocal.p8s_set_value.p8v_index
.43da	a5 62			lda  p8v_value
.43dc	a4 63			ldy  p8v_value+1
.43de	8d 62 65		sta  p8b_jdlocal.p8s_set_value.p8v_value
.43e1	8c 63 65		sty  p8b_jdlocal.p8s_set_value.p8v_value+1
.43e4	20 16 54		jsr  p8b_jdlocal.p8s_set_value
.43e7	80 0c			bra  label_asm_435_afterif
.43e9			label_asm_436_else
.43e9	a5 62			lda  p8v_value
.43eb	48			pha
.43ec	a5 66			lda  p8v_i
.43ee	85 7e			sta  P8ZP_SCRATCH_W2
.43f0	64 7f			stz  P8ZP_SCRATCH_W2+1
.43f2	68			pla
.43f3	92 7e			sta  (P8ZP_SCRATCH_W2)
.43f5			label_asm_435_afterif
.43f5	80 59			bra  label_asm_433_afterif
.43f7			label_asm_434_else
.43f7	a5 40			lda  p8v_vartype
.43f9	d0 3d			bne  label_asm_438_else
.43fb	a5 65			lda  p8v_mt
.43fd	48			pha
.43fe	a9 60			lda  #<p8v_auto_heap_value_27
.4400	a0 44			ldy  #>p8v_auto_heap_value_27
.4402	85 7c			sta  P8ZP_SCRATCH_W1
.4404	84 7d			sty  P8ZP_SCRATCH_W1+1
.4406	68			pla
.4407	a0 02			ldy  #2
.4409	20 4a 5c		jsr  prog8_lib.containment_bytearray
.440c	c9 00			cmp  #0
.440e	f0 14			beq  label_asm_440_else
.4410	a5 66			lda  p8v_i
.4412	8d 61 65		sta  p8b_jdlocal.p8s_set_value.p8v_index
.4415	a5 62			lda  p8v_value
.4417	a4 63			ldy  p8v_value+1
.4419	8d 62 65		sta  p8b_jdlocal.p8s_set_value.p8v_value
.441c	8c 63 65		sty  p8b_jdlocal.p8s_set_value.p8v_value+1
.441f	20 16 54		jsr  p8b_jdlocal.p8s_set_value
.4422	80 12			bra  label_asm_439_afterif
.4424			label_asm_440_else
.4424	a5 66			lda  p8v_i
.4426	8d 17 60		sta  p8b_jdvars.p8s_set_value.p8v_index
.4429	a5 62			lda  p8v_value
.442b	a4 63			ldy  p8v_value+1
.442d	8d 18 60		sta  p8b_jdvars.p8s_set_value.p8v_value
.4430	8c 19 60		sty  p8b_jdvars.p8s_set_value.p8v_value+1
.4433	20 46 4b		jsr  p8b_jdvars.p8s_set_value
.4436			label_asm_439_afterif
.4436	80 18			bra  label_asm_437_afterif
.4438			label_asm_438_else
.4438	a5 40			lda  p8v_vartype
.443a	c9 02			cmp  #2
.443c	d0 12			bne  label_asm_441_afterif
.443e	a5 66			lda  p8v_i
.4440	8d 64 61		sta  p8b_jdstrvars.p8s_set_value.p8v_index
.4443	a5 62			lda  p8v_value
.4445	a4 63			ldy  p8v_value+1
.4447	8d 67 61		sta  p8b_jdstrvars.p8s_set_value.p8v_value
.444a	8c 68 61		sty  p8b_jdstrvars.p8s_set_value.p8v_value+1
.444d	20 ee 4c		jsr  p8b_jdstrvars.p8s_set_value
.4450			label_asm_441_afterif
.4450			label_asm_437_afterif
.4450			label_asm_433_afterif
.4450	80 05			bra  label_asm_427_afterif
.4452			label_asm_428_else
.4452	a9 01			lda  #1
.4454	20 70 44		jsr  p8b_error.p8s_set
.4457			label_asm_427_afterif
.4457	a5 22			lda  p8b_main.p8v_pcode
.4459	d0 02			bne  +
.445b	c6 23			dec  p8b_main.p8v_pcode+1
.445d	c6 22		+                           dec  p8b_main.p8v_pcode
.445f	60			rts
>4460	b0 c4		p8v_auto_heap_value_27	.byte  $b0, $c4
.4462			prog8_init_vars
.4462	64 38			stz  p8b_runlang.p8v_funcno
.4464	64 37			stz  p8b_runlang.p8v_funcvar
.4466	64 39			stz  p8b_runlang.p8v_funcit
.4468	60			rts
.4469			p8b_error
>5d60			p8v_number	.byte  ?
>5d61			p8v_state	.byte  ?
.4469			p8s_clear
.4469	9c 60 5d		stz  p8b_error.p8v_number
.446c	9c 61 5d		stz  p8b_error.p8v_state
.446f	60			rts
.4470			p8s_set
.4470	8d 62 5d		sta  p8v_rnumber
.4473	8d 60 5d		sta  p8b_error.p8v_number
.4476	a9 01			lda  #1
.4478	8d 61 5d		sta  p8b_error.p8v_state
.447b	60			rts
>5d62			p8v_rnumber	.byte  ?
.447c			p8s_print
.447c	ad 60 5d		lda  p8b_error.p8v_number
.447f	0a			asl  a
.4480	a8			tay
.4481	b9 a4 44		lda  p8b_errtext.p8v_txttable,y
.4484	be a5 44		ldx  p8b_errtext.p8v_txttable+1,y
.4487	86 7b			stx  P8ZP_SCRATCH_REG
.4489	a4 7b			ldy  P8ZP_SCRATCH_REG
.448b	20 32 24		jsr  txt.print
.448e	a0 21			ldy  #>prog8_interned_strings.string_84
.4490	a9 b3			lda  #<prog8_interned_strings.string_84
.4492	20 32 24		jsr  txt.print
.4495	ac 62 5c		ldy  p8b_main.p8v_linenr+1
.4498	ad 61 5c		lda  p8b_main.p8v_linenr
.449b	20 60 24		jsr  txt.print_uw
.449e	a9 0d			lda  #13
.44a0	4c d2 ff		jmp  txt.chrout
.44a3			prog8_init_vars
.44a3	60			rts
.44a4			p8b_errtext
>44a4	bd 21 c2 21	p8v_txttable	.word  prog8_interned_strings.string_85, prog8_interned_strings.string_86, prog8_interned_strings.string_87, prog8_interned_strings.string_88, prog8_interned_strings.string_89, prog8_interned_strings.string_90, prog8_interned_strings.string_91
>44a8	cf 21 e4 21 f9 21 10 22 24 22
.44b2			p8b_rundos
.44b2			p8s_do_load
=251			p8v_sbank 	= 251 	; zp UBYTE
=252			p8v_r 	= 252 	; zp UBYTE
=253			p8v_fname_len 	= 253 	; zp UBYTE
=254			p8v_flag 	= 254 	; zp BOOL
=255			p8v_end_bank 	= 255 	; zp UBYTE
.44b2	64 fc			stz  p8v_r
.44b4	64 fd			stz  p8v_fname_len
.44b6	64 ff			stz  p8v_end_bank
.44b8	9c 63 5d		stz  p8v_end_address
.44bb	9c 64 5d		stz  p8v_end_address+1
.44be	64 fb			stz  p8v_sbank
.44c0	64 fe			stz  p8v_flag
.44c2	20 f5 19		jsr  p8b_main.p8s_next
.44c5	85 fc			sta  p8v_r
.44c7	c9 2d			cmp  #45
.44c9	d0 07			bne  label_asm_442_afterif
.44cb	a0 08			ldy  #>p8b_main.p8v_filename
.44cd	a9 67			lda  #<p8b_main.p8v_filename
.44cf	20 b4 19		jsr  p8b_main.p8s_get_string
.44d2			label_asm_442_afterif
.44d2	a0 08			ldy  #>p8b_main.p8v_filename
.44d4	a9 67			lda  #<p8b_main.p8v_filename
.44d6	20 73 28		jsr  string.length
.44d9	84 fd			sty  p8v_fname_len
.44db	a5 fd			lda  p8v_fname_len
.44dd	d0 03			beq  label_asm_444_else
.44df	4c 69 45
.44e2	a0 02			ldy  #2
.44e4	a2 08			ldx  #8
.44e6	a9 01			lda  #1
.44e8	20 ba ff		jsr  cbm.SETLFS
.44eb	a0 08			ldy  #>p8b_main.p8v_filename
.44ed	a2 67			ldx  #<p8b_main.p8v_filename
.44ef	a5 fd			lda  p8v_fname_len
.44f1	20 bd ff		jsr  cbm.SETNAM
.44f4	a5 00		        lda  $00
.44f6	85 fb			sta  p8v_sbank
.44f8	a9 02			lda  #2
.44fa	85 00		        sta  $00
.44fc	a0 a0			ldy  #>$a000
.44fe	a2 00			ldx  #<$a000
.4500	a9 00			lda  #0
.4502	20 d5 ff		jsr  cbm.LOAD
.4505	85 ff			sta  p8v_end_bank
.4507	8e 63 5d		stx  p8v_end_address
.450a	8c 64 5d		sty  p8v_end_address+1
.450d	a9 00			lda  #0
.450f	2a			rol  a
.4510	85 fe			sta  p8v_flag
.4512	a5 fe			lda  p8v_flag
.4514	f0 07			beq  label_asm_446_else
.4516	a9 03			lda  #3
.4518	20 70 44		jsr  p8b_error.p8s_set
.451b	80 45			bra  label_asm_445_afterif
.451d			label_asm_446_else
.451d	a9 7f			lda  #$7f
.451f	ac 63 5d		ldy  p8v_end_address
.4522	84 7e			sty  P8ZP_SCRATCH_W2
.4524	ac 64 5d		ldy  p8v_end_address+1
.4527	84 7f			sty  P8ZP_SCRATCH_W2+1
.4529	92 7e			sta  (P8ZP_SCRATCH_W2)
.452b	a9 00			lda  #0
.452d	48			pha
.452e	ad 63 5d		lda  p8v_end_address
.4531	ac 64 5d		ldy  p8v_end_address+1
.4534	85 7e			sta  P8ZP_SCRATCH_W2
.4536	84 7f			sty  P8ZP_SCRATCH_W2+1
.4538	a0 01			ldy  #1
.453a	68			pla
.453b	91 7e			sta  (P8ZP_SCRATCH_W2),y
.453d	a0 22			ldy  #>prog8_interned_strings.string_92
.453f	a9 3a			lda  #<prog8_interned_strings.string_92
.4541	20 32 24		jsr  txt.print
.4544	ac 64 5d		ldy  p8v_end_address+1
.4547	ad 63 5d		lda  p8v_end_address
.454a	38			sec
.454b	20 56 24		jsr  txt.print_uwhex
.454e	a0 22			ldy  #>prog8_interned_strings.string_93
.4550	a9 46			lda  #<prog8_interned_strings.string_93
.4552	20 32 24		jsr  txt.print
.4555	a5 00		        lda  $00
.4557	18			clc
.4558	65 ff			adc  p8v_end_bank
.455a	20 97 24		jsr  txt.print_ub
.455d	a9 0d			lda  #13
.455f	20 d2 ff		jsr  txt.chrout
.4562			label_asm_445_afterif
.4562	a5 fb			lda  p8v_sbank
.4564	85 00		        sta  $00
.4566	a9 00			lda  #0
.4568	60			rts
.4569			label_asm_444_else
.4569	a9 01			lda  #1
.456b	60			rts
.456c			label_asm_443_afterif
.456c	60			rts
>5d63			p8v_end_address	.word  ?
.456d			p8s_do_list
.456d	9c 68 5d		stz  p8v_sbank
.4570	9c 65 5d		stz  p8v_lende
.4573	a5 00		        lda  $00
.4575	8d 68 5d		sta  p8v_sbank
.4578	a9 02			lda  #2
.457a	85 00		        sta  $00
.457c	a9 00			lda  #<$a000
.457e	a0 a0			ldy  #>$a000
.4580	8d 66 5d		sta  p8v_lptr
.4583	8c 67 5d		sty  p8v_lptr+1
.4586			p8l_label_99_untilloop
.4586	ad 66 5d		lda  p8v_lptr
.4589	ac 67 5d		ldy  p8v_lptr+1
.458c	85 7c			sta  P8ZP_SCRATCH_W1
.458e	84 7d			sty  P8ZP_SCRATCH_W1+1
.4590	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4592	c9 0a			cmp  #10
.4594	d0 07			bne  label_asm_448_else
.4596	a9 0d			lda  #13
.4598	20 d2 ff		jsr  txt.chrout
.459b	80 0f			bra  label_asm_447_afterif
.459d			label_asm_448_else
.459d	ad 66 5d		lda  p8v_lptr
.45a0	ac 67 5d		ldy  p8v_lptr+1
.45a3	85 7c			sta  P8ZP_SCRATCH_W1
.45a5	84 7d			sty  P8ZP_SCRATCH_W1+1
.45a7	b2 7c			lda  (P8ZP_SCRATCH_W1)
.45a9	20 d2 ff		jsr  txt.chrout
.45ac			label_asm_447_afterif
.45ac	ee 66 5d		inc  p8v_lptr
.45af	d0 03			bne  +
.45b1	ee 67 5d		inc  p8v_lptr+1
.45b4			+
.45b4	ad 66 5d		lda  p8v_lptr
.45b7	ac 67 5d		ldy  p8v_lptr+1
.45ba	85 7c			sta  P8ZP_SCRATCH_W1
.45bc	84 7d			sty  P8ZP_SCRATCH_W1+1
.45be	b2 7c			lda  (P8ZP_SCRATCH_W1)
.45c0	c9 7f			cmp  #127
.45c2	d0 04			bne  label_asm_451_else
.45c4	a9 01		  lda  #1
.45c6	80 02			bra  label_asm_450_afterif
.45c8			label_asm_451_else
.45c8	a9 00		  lda  #0
.45ca			label_asm_450_afterif
.45ca	f0 14			beq  label_asm_449_shortcut
.45cc	ad 66 5d		lda  p8v_lptr
.45cf	ac 67 5d		ldy  p8v_lptr+1
.45d2	85 7e			sta  P8ZP_SCRATCH_W2
.45d4	84 7f			sty  P8ZP_SCRATCH_W2+1
.45d6	a0 01			ldy  #1
.45d8	b1 7e			lda  (P8ZP_SCRATCH_W2),y
.45da	f0 02			beq  +
.45dc	a9 01			lda  #1
.45de	49 01		+                           eor  #1
.45e0			label_asm_449_shortcut
.45e0	f0 05			beq  label_asm_452_afterif
.45e2	a9 01			lda  #1
.45e4	8d 65 5d		sta  p8v_lende
.45e7			label_asm_452_afterif
.45e7	ad 65 5d		lda  p8v_lende
.45ea	f0 9a			beq  p8l_label_99_untilloop
.45ec	ad 68 5d		lda  p8v_sbank
.45ef	85 00		        sta  $00
.45f1	a9 0d			lda  #13
.45f3	20 d2 ff		jsr  txt.chrout
.45f6	a9 00			lda  #0
.45f8	60			rts
>5d65			p8v_lende	.byte  ?
>5d66			p8v_lptr	.word  ?
>5d68			p8v_sbank	.byte  ?
.45f9			p8s_do_dir
.45f9	9c 69 5d		stz  p8v_num_files
.45fc	9c 6a 5d		stz  p8v_r
.45ff	20 f5 19		jsr  p8b_main.p8s_next
.4602	8d 6a 5d		sta  p8v_r
.4605	c9 2d			cmp  #45
.4607	d0 09			bne  label_asm_454_else
.4609	a0 08			ldy  #>p8b_main.p8v_buffer
.460b	a9 26			lda  #<p8b_main.p8v_buffer
.460d	20 b4 19		jsr  p8b_main.p8s_get_string
.4610	80 0f			bra  label_asm_453_afterif
.4612			label_asm_454_else
.4612	a9 4d			lda  #<prog8_interned_strings.string_94
.4614	a0 22			ldy  #>prog8_interned_strings.string_94
.4616	85 02			sta  cx16.r0
.4618	84 03			sty  cx16.r0+1
.461a	a0 08			ldy  #>p8b_main.p8v_buffer
.461c	a9 26			lda  #<p8b_main.p8v_buffer
.461e	20 63 23		jsr  sys.internal_stringcopy
.4621			label_asm_453_afterif
.4621	a0 08			ldy  #>p8b_main.p8v_buffer
.4623	a9 26			lda  #<p8b_main.p8v_buffer
.4625	20 1b 27		jsr  diskio.lf_start_list
.4628	c9 00			cmp  #0
.462a	f0 73			beq  label_asm_455_afterif
.462c	a0 22			ldy  #>prog8_interned_strings.string_95
.462e	a9 4f			lda  #<prog8_interned_strings.string_95
.4630	20 32 24		jsr  txt.print
.4633			p8l_label_101_whileloop
.4633	20 77 27		jsr  diskio.lf_next_entry
.4636	c9 00			cmp  #0
.4638	f0 53			beq  p8l_label_102_afterwhile
.463a	ee 69 5d		inc  p8v_num_files
.463d	a9 20			lda  #$20
.463f	20 d2 ff		jsr  txt.chrout
.4642	a9 20			lda  #$20
.4644	20 d2 ff		jsr  txt.chrout
.4647	a9 92			lda  #<prog8_interned_strings.string_79
.4649	a0 21			ldy  #>prog8_interned_strings.string_79
.464b	85 7e			sta  P8ZP_SCRATCH_W2
.464d	84 7f			sty  P8ZP_SCRATCH_W2+1
.464f	a0 27			ldy  #>diskio.list_filetype
.4651	a9 17			lda  #<diskio.list_filetype
.4653	20 20 5c		jsr  prog8_lib.strcmp_mem
.4656	c9 00			cmp  #0
.4658	d0 09			bne  label_asm_457_else
.465a	a0 22			ldy  #>prog8_interned_strings.string_96
.465c	a9 62			lda  #<prog8_interned_strings.string_96
.465e	20 32 24		jsr  txt.print
.4661	80 09			bra  label_asm_456_afterif
.4663			label_asm_457_else
.4663	ac 9e 5c		ldy  diskio.list_blocks+1
.4666	ad 9d 5c		lda  diskio.list_blocks
.4669	20 60 24		jsr  txt.print_uw
.466c			label_asm_456_afterif
.466c	a9 09			lda  #9
.466e	20 bb 23		jsr  txt.column
.4671	a0 26			ldy  #>diskio.list_filename
.4673	a9 e4			lda  #<diskio.list_filename
.4675	20 32 24		jsr  txt.print
.4678	a9 0d			lda  #13
.467a	20 d2 ff		jsr  txt.chrout
.467d	20 e1 ff		jsr  cbm.STOP
.4680	d0 09			bne  label_asm_458_branch_else
.4682	a0 22			ldy  #>prog8_interned_strings.string_97
.4684	a9 68			lda  #<prog8_interned_strings.string_97
.4686	20 32 24		jsr  txt.print
.4689	80 02			bra  p8l_label_100_after
.468b			label_asm_458_branch_else
.468b	80 a6			bra  p8l_label_101_whileloop
.468d			p8l_label_102_afterwhile
.468d			p8l_label_100_after
.468d	20 56 28		jsr  diskio.lf_end_list
.4690	ad 69 5d		lda  p8v_num_files
.4693	d0 07			bne  label_asm_459_afterif
.4695	a0 22			ldy  #>prog8_interned_strings.string_98
.4697	a9 6f			lda  #<prog8_interned_strings.string_98
.4699	20 32 24		jsr  txt.print
.469c			label_asm_459_afterif
.469c	a9 01			lda  #1
.469e	60			rts
.469f			label_asm_455_afterif
.469f	a9 00			lda  #0
.46a1	60			rts
>5d69			p8v_num_files	.byte  ?
>5d6a			p8v_r	.byte  ?
.46a2			p8s_do_edit
.46a2	9c 6c 5d		stz  p8v_r
.46a5	9c 6b 5d		stz  p8v_fname_len
.46a8	20 f5 19		jsr  p8b_main.p8s_next
.46ab	8d 6c 5d		sta  p8v_r
.46ae	c9 2d			cmp  #45
.46b0	d0 13			bne  label_asm_461_else
.46b2	a0 08			ldy  #>p8b_main.p8v_filename
.46b4	a9 67			lda  #<p8b_main.p8v_filename
.46b6	20 b4 19		jsr  p8b_main.p8s_get_string
.46b9	a0 08			ldy  #>p8b_main.p8v_filename
.46bb	a9 67			lda  #<p8b_main.p8v_filename
.46bd	20 73 28		jsr  string.length
.46c0	8c 6b 5d		sty  p8v_fname_len
.46c3	80 0a			bra  label_asm_460_afterif
.46c5			label_asm_461_else
.46c5	a0 08			ldy  #>p8b_main.p8v_filename
.46c7	a9 67			lda  #<p8b_main.p8v_filename
.46c9	20 73 28		jsr  string.length
.46cc	8c 6b 5d		sty  p8v_fname_len
.46cf			label_asm_460_afterif
.46cf	20 aa 22		jsr  cx16.search_x16edit
.46d2	8d 6e 5d		sta  p8v_x16edit_bank
.46d5	c9 ff			cmp  #255
.46d7	b0 2a			bcs  label_asm_463_else
.46d9	a5 01		        lda  $01
.46db	8d 6d 5d		sta  p8v_sbank
.46de	ad 6e 5d		lda  p8v_x16edit_bank
.46e1	85 01		        sta  $01
.46e3	a9 67			lda  #<p8b_main.p8v_filename
.46e5	a0 08			ldy  #>p8b_main.p8v_filename
.46e7	85 02			sta  cx16.r0
.46e9	84 03			sty  cx16.r0+1
.46eb	ad 6b 5d		lda  p8v_fname_len
.46ee	85 04			sta  cx16.r1
.46f0	a9 00			lda  #0
.46f2	85 05			sta  cx16.r1+1
.46f4	a0 fe			ldy  #$fe
.46f6	a2 02			ldx  #2
.46f8	20 03 c0		jsr  cx16.x16edit_loadfile
.46fb	ad 6d 5d		lda  p8v_sbank
.46fe	85 01		        sta  $01
.4700	a9 01			lda  #1
.4702	60			rts
.4703			label_asm_463_else
.4703	a0 22			ldy  #>prog8_interned_strings.string_99
.4705	a9 79			lda  #<prog8_interned_strings.string_99
.4707	20 32 24		jsr  txt.print
.470a	a9 00			lda  #0
.470c	60			rts
.470d			label_asm_462_afterif
.470d	60			rts
>5d6b			p8v_fname_len	.byte  ?
>5d6c			p8v_r	.byte  ?
>5d6d			p8v_sbank	.byte  ?
>5d6e			p8v_x16edit_bank	.byte  ?
.470e			p8b_jdstr
=$60				p8c_vbank = $60
>5d6f			p8v_lini	.word  ?
>5d71			p8v_r	.word  ?
>5d73			p8v_sbank	.byte  ?
>5d74			p8v_start	.word  ?
.470e			p8s_add
.470e	8d 76 5d		sta  p8v_name
.4711	8c 77 5d		sty  p8v_name+1
.4714	a5 00		        lda  $00
.4716	8d 73 5d		sta  p8b_jdstr.p8v_sbank
.4719	a9 60			lda  #$60
.471b	85 00		        sta  $00
.471d	ac 77 5d		ldy  p8v_name+1
.4720	ad 76 5d		lda  p8v_name
.4723	20 73 28		jsr  string.length
.4726	98			tya
.4727	18			clc
.4728	69 01			adc  #1
.472a	8d 6f 5d		sta  p8b_jdstr.p8v_lini
.472d	9c 70 5d		stz  p8b_jdstr.p8v_lini+1
.4730	a0 00			ldy  #>$11
.4732	a9 11			lda  #<$11
.4734	cd 6f 5d		cmp  p8b_jdstr.p8v_lini
.4737	98			tya
.4738	ed 70 5d		sbc  p8b_jdstr.p8v_lini+1
.473b	b0 0a			bcs  label_asm_464_afterif
.473d	a9 11			lda  #<$11
.473f	a0 00			ldy  #>$11
.4741	8d 6f 5d		sta  p8b_jdstr.p8v_lini
.4744	8c 70 5d		sty  p8b_jdstr.p8v_lini+1
.4747			label_asm_464_afterif
.4747	ad 74 5d		lda  p8b_jdstr.p8v_start
.474a	ac 75 5d		ldy  p8b_jdstr.p8v_start+1
.474d	8d 71 5d		sta  p8b_jdstr.p8v_r
.4750	8c 72 5d		sty  p8b_jdstr.p8v_r+1
.4753	ad 76 5d		lda  p8v_name
.4756	85 02			sta  cx16.r0
.4758	ad 77 5d		lda  p8v_name+1
.475b	85 03			sta  cx16.r0+1
.475d	ad 71 5d		lda  p8b_jdstr.p8v_r
.4760	85 04			sta  cx16.r1
.4762	ad 72 5d		lda  p8b_jdstr.p8v_r+1
.4765	85 05			sta  cx16.r1+1
.4767	ac 70 5d		ldy  p8b_jdstr.p8v_lini+1
.476a	ad 6f 5d		lda  p8b_jdstr.p8v_lini
.476d	20 6e 23		jsr  sys.memcopy
.4770	ad 74 5d		lda  p8b_jdstr.p8v_start
.4773	18			clc
.4774	6d 6f 5d		adc  p8b_jdstr.p8v_lini
.4777	8d 74 5d		sta  p8b_jdstr.p8v_start
.477a	ad 75 5d		lda  p8b_jdstr.p8v_start+1
.477d	6d 70 5d		adc  p8b_jdstr.p8v_lini+1
.4780	8d 75 5d		sta  p8b_jdstr.p8v_start+1
.4783	ad 73 5d		lda  p8b_jdstr.p8v_sbank
.4786	85 00		        sta  $00
.4788	ac 72 5d		ldy  p8b_jdstr.p8v_r+1
.478b	ad 71 5d		lda  p8b_jdstr.p8v_r
.478e	60			rts
>5d76			p8v_name	.word  ?
.478f			p8s_get
.478f	9c 7a 5d		stz  p8v_lp
.4792	9c 7b 5d		stz  p8v_lp+1
.4795	a5 00		        lda  $00
.4797	8d 73 5d		sta  p8b_jdstr.p8v_sbank
.479a	a9 60			lda  #$60
.479c	85 00		        sta  $00
.479e	ad 7c 5d		lda  p8v_prt
.47a1	0d 7d 5d		ora  p8v_prt+1
.47a4	d0 10			bne  label_asm_466_else
.47a6	a9 00			lda  #0
.47a8	ac 78 5d		ldy  p8v_buf
.47ab	84 7e			sty  P8ZP_SCRATCH_W2
.47ad	ac 79 5d		ldy  p8v_buf+1
.47b0	84 7f			sty  P8ZP_SCRATCH_W2+1
.47b2	92 7e			sta  (P8ZP_SCRATCH_W2)
.47b4	80 50			bra  label_asm_465_afterif
.47b6			label_asm_466_else
.47b6	ad 78 5d		lda  p8v_buf
.47b9	ac 79 5d		ldy  p8v_buf+1
.47bc	8d 7a 5d		sta  p8v_lp
.47bf	8c 7b 5d		sty  p8v_lp+1
.47c2			p8l_label_103_untilloop
.47c2	ad 7c 5d		lda  p8v_prt
.47c5	ac 7d 5d		ldy  p8v_prt+1
.47c8	85 7c			sta  P8ZP_SCRATCH_W1
.47ca	84 7d			sty  P8ZP_SCRATCH_W1+1
.47cc	b2 7c			lda  (P8ZP_SCRATCH_W1)
.47ce	ac 7a 5d		ldy  p8v_lp
.47d1	84 7e			sty  P8ZP_SCRATCH_W2
.47d3	ac 7b 5d		ldy  p8v_lp+1
.47d6	84 7f			sty  P8ZP_SCRATCH_W2+1
.47d8	92 7e			sta  (P8ZP_SCRATCH_W2)
.47da	ee 7a 5d		inc  p8v_lp
.47dd	d0 03			bne  +
.47df	ee 7b 5d		inc  p8v_lp+1
.47e2			+
.47e2	ee 7c 5d		inc  p8v_prt
.47e5	d0 03			bne  +
.47e7	ee 7d 5d		inc  p8v_prt+1
.47ea			+
.47ea	ad 7c 5d		lda  p8v_prt
.47ed	ac 7d 5d		ldy  p8v_prt+1
.47f0	85 7c			sta  P8ZP_SCRATCH_W1
.47f2	84 7d			sty  P8ZP_SCRATCH_W1+1
.47f4	b2 7c			lda  (P8ZP_SCRATCH_W1)
.47f6	d0 ca			bne  p8l_label_103_untilloop
.47f8	a9 00			lda  #0
.47fa	ac 7a 5d		ldy  p8v_lp
.47fd	84 7e			sty  P8ZP_SCRATCH_W2
.47ff	ac 7b 5d		ldy  p8v_lp+1
.4802	84 7f			sty  P8ZP_SCRATCH_W2+1
.4804	92 7e			sta  (P8ZP_SCRATCH_W2)
.4806			label_asm_465_afterif
.4806	ad 73 5d		lda  p8b_jdstr.p8v_sbank
.4809	85 00		        sta  $00
.480b	60			rts
>5d78			p8v_buf	.word  ?
>5d7a			p8v_lp	.word  ?
>5d7c			p8v_prt	.word  ?
.480c			prog8_init_vars
.480c	a9 00			lda  #<$a000
.480e	a0 a0			ldy  #>$a000
.4810	8d 74 5d		sta  p8b_jdstr.p8v_start
.4813	8c 75 5d		sty  p8b_jdstr.p8v_start+1
.4816	60			rts
.4817			p8b_jdheap
>5d7e			p8v_lini	.byte  ?
>5d7f			p8v_ll	.word  ?
>5d81			p8v_ml	.word  ?
>5d83			p8v_r	.word  ?
>5d85			p8v_start	.word  ?
.4817			p8s_init_list
.4817	8d 87 5d		sta  p8v_nr
.481a	9c 7f 5d		stz  p8b_jdheap.p8v_ll
.481d	9c 80 5d		stz  p8b_jdheap.p8v_ll+1
.4820	ac 86 5d		ldy  p8b_jdheap.p8v_start+1
.4823	ad 85 5d		lda  p8b_jdheap.p8v_start
.4826	38			sec
.4827	e9 03			sbc  #<3
.4829	aa			tax
.482a	98			tya
.482b	e9 00			sbc  #>3
.482d	a8			tay
.482e	8a			txa
.482f	8d 83 5d		sta  p8b_jdheap.p8v_r
.4832	8c 84 5d		sty  p8b_jdheap.p8v_r+1
.4835	ad 87 5d		lda  p8v_nr
.4838	ac 83 5d		ldy  p8b_jdheap.p8v_r
.483b	84 7e			sty  P8ZP_SCRATCH_W2
.483d	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.4840	84 7f			sty  P8ZP_SCRATCH_W2+1
.4842	92 7e			sta  (P8ZP_SCRATCH_W2)
.4844	ee 83 5d		inc  p8b_jdheap.p8v_r
.4847	d0 03			bne  +
.4849	ee 84 5d		inc  p8b_jdheap.p8v_r+1
.484c			+
.484c	ad 83 5d		lda  p8b_jdheap.p8v_r
.484f	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.4852	8d 81 5d		sta  p8b_jdheap.p8v_ml
.4855	8c 82 5d		sty  p8b_jdheap.p8v_ml+1
.4858	a9 00			lda  #0
.485a	ac 83 5d		ldy  p8b_jdheap.p8v_r
.485d	84 7e			sty  P8ZP_SCRATCH_W2
.485f	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.4862	84 7f			sty  P8ZP_SCRATCH_W2+1
.4864	92 7e			sta  (P8ZP_SCRATCH_W2)
.4866	ee 83 5d		inc  p8b_jdheap.p8v_r
.4869	d0 03			bne  +
.486b	ee 84 5d		inc  p8b_jdheap.p8v_r+1
.486e			+
.486e	a9 00			lda  #0
.4870	ac 83 5d		ldy  p8b_jdheap.p8v_r
.4873	84 7e			sty  P8ZP_SCRATCH_W2
.4875	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.4878	84 7f			sty  P8ZP_SCRATCH_W2+1
.487a	92 7e			sta  (P8ZP_SCRATCH_W2)
.487c	ad 85 5d		lda  p8b_jdheap.p8v_start
.487f	38			sec
.4880	e9 04			sbc  #4
.4882	8d 85 5d		sta  p8b_jdheap.p8v_start
.4885	b0 03			bcs  +
.4887	ce 86 5d		dec  p8b_jdheap.p8v_start+1
.488a			+
.488a	ac 86 5d		ldy  p8b_jdheap.p8v_start+1
.488d	ad 85 5d		lda  p8b_jdheap.p8v_start
.4890	60			rts
>5d87			p8v_nr	.byte  ?
.4891			p8s_add_list
.4891	8d 88 5d		sta  p8v_value
.4894	8c 89 5d		sty  p8v_value+1
.4897	ee 7f 5d		inc  p8b_jdheap.p8v_ll
.489a	d0 03			bne  +
.489c	ee 80 5d		inc  p8b_jdheap.p8v_ll+1
.489f			+
.489f	ac 86 5d		ldy  p8b_jdheap.p8v_start+1
.48a2	ad 85 5d		lda  p8b_jdheap.p8v_start
.48a5	38			sec
.48a6	e9 02			sbc  #<2
.48a8	aa			tax
.48a9	98			tya
.48aa	e9 00			sbc  #>2
.48ac	a8			tay
.48ad	8a			txa
.48ae	8d 83 5d		sta  p8b_jdheap.p8v_r
.48b1	8c 84 5d		sty  p8b_jdheap.p8v_r+1
.48b4	ee 83 5d		inc  p8b_jdheap.p8v_r
.48b7	d0 03			bne  +
.48b9	ee 84 5d		inc  p8b_jdheap.p8v_r+1
.48bc			+
.48bc	ad 88 5d		lda  p8v_value
.48bf	ac 83 5d		ldy  p8b_jdheap.p8v_r
.48c2	84 7e			sty  P8ZP_SCRATCH_W2
.48c4	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.48c7	84 7f			sty  P8ZP_SCRATCH_W2+1
.48c9	92 7e			sta  (P8ZP_SCRATCH_W2)
.48cb	ee 83 5d		inc  p8b_jdheap.p8v_r
.48ce	d0 03			bne  +
.48d0	ee 84 5d		inc  p8b_jdheap.p8v_r+1
.48d3			+
.48d3	ad 89 5d		lda  p8v_value+1
.48d6	ac 83 5d		ldy  p8b_jdheap.p8v_r
.48d9	84 7e			sty  P8ZP_SCRATCH_W2
.48db	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.48de	84 7f			sty  P8ZP_SCRATCH_W2+1
.48e0	92 7e			sta  (P8ZP_SCRATCH_W2)
.48e2	ad 85 5d		lda  p8b_jdheap.p8v_start
.48e5	38			sec
.48e6	e9 02			sbc  #2
.48e8	8d 85 5d		sta  p8b_jdheap.p8v_start
.48eb	b0 03			bcs  +
.48ed	ce 86 5d		dec  p8b_jdheap.p8v_start+1
.48f0			+
.48f0	60			rts
>5d88			p8v_value	.word  ?
.48f1			p8s_close_list
.48f1	ad 7f 5d		lda  p8b_jdheap.p8v_ll
.48f4	ac 81 5d		ldy  p8b_jdheap.p8v_ml
.48f7	84 7e			sty  P8ZP_SCRATCH_W2
.48f9	ac 82 5d		ldy  p8b_jdheap.p8v_ml+1
.48fc	84 7f			sty  P8ZP_SCRATCH_W2+1
.48fe	92 7e			sta  (P8ZP_SCRATCH_W2)
.4900	ad 80 5d		lda  p8b_jdheap.p8v_ll+1
.4903	48			pha
.4904	ad 81 5d		lda  p8b_jdheap.p8v_ml
.4907	ac 82 5d		ldy  p8b_jdheap.p8v_ml+1
.490a	85 7e			sta  P8ZP_SCRATCH_W2
.490c	84 7f			sty  P8ZP_SCRATCH_W2+1
.490e	a0 01			ldy  #1
.4910	68			pla
.4911	91 7e			sta  (P8ZP_SCRATCH_W2),y
.4913	60			rts
.4914			p8s_add_str
.4914	ac 8c 5d		ldy  p8v_value+1
.4917	ad 8b 5d		lda  p8v_value
.491a	20 73 28		jsr  string.length
.491d	98			tya
.491e	18			clc
.491f	69 01			adc  #1
.4921	8d 7e 5d		sta  p8b_jdheap.p8v_lini
.4924	18			clc
.4925	69 02			adc  #2
.4927	85 7c			sta  P8ZP_SCRATCH_W1
.4929	64 7d			stz  P8ZP_SCRATCH_W1+1
.492b	ac 86 5d		ldy  p8b_jdheap.p8v_start+1
.492e	ad 85 5d		lda  p8b_jdheap.p8v_start
.4931	38			sec
.4932	e5 7c			sbc  P8ZP_SCRATCH_W1
.4934	aa			tax
.4935	98			tya
.4936	e5 7d			sbc  P8ZP_SCRATCH_W1+1
.4938	a8			tay
.4939	8a			txa
.493a	8d 83 5d		sta  p8b_jdheap.p8v_r
.493d	8c 84 5d		sty  p8b_jdheap.p8v_r+1
.4940	8d 81 5d		sta  p8b_jdheap.p8v_ml
.4943	8c 82 5d		sty  p8b_jdheap.p8v_ml+1
.4946	ad 8a 5d		lda  p8v_nr
.4949	ac 83 5d		ldy  p8b_jdheap.p8v_r
.494c	84 7e			sty  P8ZP_SCRATCH_W2
.494e	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.4951	84 7f			sty  P8ZP_SCRATCH_W2+1
.4953	92 7e			sta  (P8ZP_SCRATCH_W2)
.4955	ee 83 5d		inc  p8b_jdheap.p8v_r
.4958	d0 03			bne  +
.495a	ee 84 5d		inc  p8b_jdheap.p8v_r+1
.495d			+
.495d	ad 7e 5d		lda  p8b_jdheap.p8v_lini
.4960	ac 83 5d		ldy  p8b_jdheap.p8v_r
.4963	84 7e			sty  P8ZP_SCRATCH_W2
.4965	ac 84 5d		ldy  p8b_jdheap.p8v_r+1
.4968	84 7f			sty  P8ZP_SCRATCH_W2+1
.496a	92 7e			sta  (P8ZP_SCRATCH_W2)
.496c	ee 83 5d		inc  p8b_jdheap.p8v_r
.496f	d0 03			bne  +
.4971	ee 84 5d		inc  p8b_jdheap.p8v_r+1
.4974			+
.4974	ad 8b 5d		lda  p8v_value
.4977	85 02			sta  cx16.r0
.4979	ad 8c 5d		lda  p8v_value+1
.497c	85 03			sta  cx16.r0+1
.497e	ad 83 5d		lda  p8b_jdheap.p8v_r
.4981	85 04			sta  cx16.r1
.4983	ad 84 5d		lda  p8b_jdheap.p8v_r+1
.4986	85 05			sta  cx16.r1+1
.4988	a0 00			ldy  #0
.498a	ad 7e 5d		lda  p8b_jdheap.p8v_lini
.498d	20 6e 23		jsr  sys.memcopy
.4990	ad 7e 5d		lda  p8b_jdheap.p8v_lini
.4993	18			clc
.4994	69 02			adc  #2
.4996	85 7a			sta  P8ZP_SCRATCH_B1
.4998	ad 85 5d		lda  p8b_jdheap.p8v_start
.499b	38			sec
.499c	e5 7a			sbc  P8ZP_SCRATCH_B1
.499e	8d 85 5d		sta  p8b_jdheap.p8v_start
.49a1	b0 03			bcs  +
.49a3	ce 86 5d		dec  p8b_jdheap.p8v_start+1
.49a6			+
.49a6	ac 82 5d		ldy  p8b_jdheap.p8v_ml+1
.49a9	ad 81 5d		lda  p8b_jdheap.p8v_ml
.49ac	60			rts
>5d8a			p8v_nr	.byte  ?
>5d8b			p8v_value	.word  ?
.49ad			prog8_init_vars
.49ad	a9 00			lda  #<$9e00
.49af	a0 9e			ldy  #>$9e00
.49b1	8d 85 5d		sta  p8b_jdheap.p8v_start
.49b4	8c 86 5d		sty  p8b_jdheap.p8v_start+1
.49b7	60			rts
.49b8			p8b_jdvars
>5d8d			p8v_cn	.byte  ?
>5d8e			p8v_numvars_name	.fill  256
>5e8e			p8v_numvars_next	.fill  128
>5f0e			p8v_numvars_value	.fill  256
>600e			p8v_r	.word  ?
.49b8			p8v_buffer
>49b8	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>49bc	00 00 00 00 00 00 00 00 00 00 00 00
>49c8	00 00			.byte  $00, $00
.49ca			p8s_insert
.49ca	ad 12 60		lda  p8v_name
.49cd	85 02			sta  cx16.r0
.49cf	ad 13 60		lda  p8v_name+1
.49d2	85 03			sta  cx16.r0+1
.49d4	20 ea 28		jsr  string.hash
.49d7	4a			lsr  a
.49d8	8d 11 60		sta  p8v_index
.49db	ad 11 60		lda  p8v_index
.49de	d0 05			bne  label_asm_467_afterif
.49e0	a9 01			lda  #1
.49e2	8d 11 60		sta  p8v_index
.49e5			label_asm_467_afterif
.49e5	ad 11 60		lda  p8v_index
.49e8	0a			asl  a
.49e9	a8			tay
.49ea	b9 8e 5d		lda  p8b_jdvars.p8v_numvars_name,y
.49ed	be 8f 5d		ldx  p8b_jdvars.p8v_numvars_name+1,y
.49f0	86 7b			stx  P8ZP_SCRATCH_REG
.49f2	a4 7b			ldy  P8ZP_SCRATCH_REG
.49f4	05 7b			ora  P8ZP_SCRATCH_REG
.49f6	d0 3b			bne  label_asm_469_else
.49f8	ac 13 60		ldy  p8v_name+1
.49fb	ad 12 60		lda  p8v_name
.49fe	20 0e 47		jsr  p8b_jdstr.p8s_add
.4a01	8d 0e 60		sta  p8b_jdvars.p8v_r
.4a04	8c 0f 60		sty  p8b_jdvars.p8v_r+1
.4a07	ad 11 60		lda  p8v_index
.4a0a	0a			asl  a
.4a0b	a8			tay
.4a0c	ad 0e 60		lda  p8b_jdvars.p8v_r
.4a0f	99 8e 5d		sta  p8b_jdvars.p8v_numvars_name,y
.4a12	ad 0f 60		lda  p8b_jdvars.p8v_r+1
.4a15	99 8f 5d		sta  p8b_jdvars.p8v_numvars_name+1,y
.4a18	ad 11 60		lda  p8v_index
.4a1b	0a			asl  a
.4a1c	a8			tay
.4a1d	ad 14 60		lda  p8v_value
.4a20	99 0e 5f		sta  p8b_jdvars.p8v_numvars_value,y
.4a23	ad 15 60		lda  p8v_value+1
.4a26	99 0f 5f		sta  p8b_jdvars.p8v_numvars_value+1,y
.4a29	ae 11 60		ldx  p8v_index
.4a2c	9e 8e 5e		stz  p8b_jdvars.p8v_numvars_next,x
.4a2f	ad 11 60		lda  p8v_index
.4a32	60			rts
.4a33			label_asm_469_else
.4a33	ad 11 60		lda  p8v_index
.4a36	8d 10 60		sta  p8v_current
.4a39			p8l_label_105_whileloop
.4a39	ac 10 60		ldy  p8v_current
.4a3c	b9 8e 5e		lda  p8b_jdvars.p8v_numvars_next,y
.4a3f	f0 53			beq  p8l_label_106_afterwhile
.4a41	ad 10 60		lda  p8v_current
.4a44	0a			asl  a
.4a45	a8			tay
.4a46	b9 8e 5d		lda  p8b_jdvars.p8v_numvars_name,y
.4a49	be 8f 5d		ldx  p8b_jdvars.p8v_numvars_name+1,y
.4a4c	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.4a4f	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.4a52	a9 b8			lda  #<p8b_jdvars.p8v_buffer
.4a54	a0 49			ldy  #>p8b_jdvars.p8v_buffer
.4a56	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.4a59	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.4a5c	20 8f 47		jsr  p8b_jdstr.p8s_get
.4a5f	ad 12 60		lda  p8v_name
.4a62	85 02			sta  cx16.r0
.4a64	ad 13 60		lda  p8v_name+1
.4a67	85 03			sta  cx16.r0+1
.4a69	a0 49			ldy  #>p8b_jdvars.p8v_buffer
.4a6b	a9 b8			lda  #<p8b_jdvars.p8v_buffer
.4a6d	20 8c 28		jsr  string.compare
.4a70	c9 00			cmp  #0
.4a72	d0 15			bne  label_asm_470_afterif
.4a74	ad 10 60		lda  p8v_current
.4a77	0a			asl  a
.4a78	a8			tay
.4a79	ad 14 60		lda  p8v_value
.4a7c	99 0e 5f		sta  p8b_jdvars.p8v_numvars_value,y
.4a7f	ad 15 60		lda  p8v_value+1
.4a82	99 0f 5f		sta  p8b_jdvars.p8v_numvars_value+1,y
.4a85	ad 10 60		lda  p8v_current
.4a88	60			rts
.4a89			label_asm_470_afterif
.4a89	ac 10 60		ldy  p8v_current
.4a8c	b9 8e 5e		lda  p8b_jdvars.p8v_numvars_next,y
.4a8f	8d 10 60		sta  p8v_current
.4a92	80 a5			bra  p8l_label_105_whileloop
.4a94			p8l_label_106_afterwhile
.4a94	ad 10 60		lda  p8v_current
.4a97	0a			asl  a
.4a98	a8			tay
.4a99	b9 8e 5d		lda  p8b_jdvars.p8v_numvars_name,y
.4a9c	be 8f 5d		ldx  p8b_jdvars.p8v_numvars_name+1,y
.4a9f	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.4aa2	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.4aa5	a9 b8			lda  #<p8b_jdvars.p8v_buffer
.4aa7	a0 49			ldy  #>p8b_jdvars.p8v_buffer
.4aa9	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.4aac	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.4aaf	20 8f 47		jsr  p8b_jdstr.p8s_get
.4ab2	ad 12 60		lda  p8v_name
.4ab5	85 02			sta  cx16.r0
.4ab7	ad 13 60		lda  p8v_name+1
.4aba	85 03			sta  cx16.r0+1
.4abc	a0 49			ldy  #>p8b_jdvars.p8v_buffer
.4abe	a9 b8			lda  #<p8b_jdvars.p8v_buffer
.4ac0	20 8c 28		jsr  string.compare
.4ac3	c9 00			cmp  #0
.4ac5	d0 15			bne  label_asm_471_afterif
.4ac7	ad 10 60		lda  p8v_current
.4aca	0a			asl  a
.4acb	a8			tay
.4acc	ad 14 60		lda  p8v_value
.4acf	99 0e 5f		sta  p8b_jdvars.p8v_numvars_value,y
.4ad2	ad 15 60		lda  p8v_value+1
.4ad5	99 0f 5f		sta  p8b_jdvars.p8v_numvars_value+1,y
.4ad8	ad 10 60		lda  p8v_current
.4adb	60			rts
.4adc			label_asm_471_afterif
.4adc	ac 13 60		ldy  p8v_name+1
.4adf	ad 12 60		lda  p8v_name
.4ae2	20 0e 47		jsr  p8b_jdstr.p8s_add
.4ae5	8d 0e 60		sta  p8b_jdvars.p8v_r
.4ae8	8c 0f 60		sty  p8b_jdvars.p8v_r+1
.4aeb			p8l_label_107_untilloop
.4aeb	ee 8d 5d		inc  p8b_jdvars.p8v_cn
.4aee	ad 8d 5d		lda  p8b_jdvars.p8v_cn
.4af1	0a			asl  a
.4af2	a8			tay
.4af3	b9 8e 5d		lda  p8b_jdvars.p8v_numvars_name,y
.4af6	be 8f 5d		ldx  p8b_jdvars.p8v_numvars_name+1,y
.4af9	86 7b			stx  P8ZP_SCRATCH_REG
.4afb	a4 7b			ldy  P8ZP_SCRATCH_REG
.4afd	05 7b			ora  P8ZP_SCRATCH_REG
.4aff	d0 ea			bne  p8l_label_107_untilloop
.4b01	ad 8d 5d		lda  p8b_jdvars.p8v_cn
.4b04	0a			asl  a
.4b05	a8			tay
.4b06	ad 0e 60		lda  p8b_jdvars.p8v_r
.4b09	99 8e 5d		sta  p8b_jdvars.p8v_numvars_name,y
.4b0c	ad 0f 60		lda  p8b_jdvars.p8v_r+1
.4b0f	99 8f 5d		sta  p8b_jdvars.p8v_numvars_name+1,y
.4b12	ad 8d 5d		lda  p8b_jdvars.p8v_cn
.4b15	0a			asl  a
.4b16	a8			tay
.4b17	ad 14 60		lda  p8v_value
.4b1a	99 0e 5f		sta  p8b_jdvars.p8v_numvars_value,y
.4b1d	ad 15 60		lda  p8v_value+1
.4b20	99 0f 5f		sta  p8b_jdvars.p8v_numvars_value+1,y
.4b23	ae 8d 5d		ldx  p8b_jdvars.p8v_cn
.4b26	9e 8e 5e		stz  p8b_jdvars.p8v_numvars_next,x
.4b29	ac 10 60		ldy  p8v_current
.4b2c	ad 8d 5d		lda  p8b_jdvars.p8v_cn
.4b2f	99 8e 5e		sta  p8b_jdvars.p8v_numvars_next,y
.4b32			label_asm_468_afterif
.4b32	ad 8d 5d		lda  p8b_jdvars.p8v_cn
.4b35	60			rts
>6010			p8v_current	.byte  ?
>6011			p8v_index	.byte  ?
>6012			p8v_name	.word  ?
>6014			p8v_value	.word  ?
.4b36			p8s_get_value
.4b36	8d 16 60		sta  p8v_index
.4b39	0a			asl  a
.4b3a	a8			tay
.4b3b	b9 0e 5f		lda  p8b_jdvars.p8v_numvars_value,y
.4b3e	be 0f 5f		ldx  p8b_jdvars.p8v_numvars_value+1,y
.4b41	86 7b			stx  P8ZP_SCRATCH_REG
.4b43	a4 7b			ldy  P8ZP_SCRATCH_REG
.4b45	60			rts
>6016			p8v_index	.byte  ?
.4b46			p8s_set_value
.4b46	ad 17 60		lda  p8v_index
.4b49	0a			asl  a
.4b4a	a8			tay
.4b4b	ad 18 60		lda  p8v_value
.4b4e	99 0e 5f		sta  p8b_jdvars.p8v_numvars_value,y
.4b51	ad 19 60		lda  p8v_value+1
.4b54	99 0f 5f		sta  p8b_jdvars.p8v_numvars_value+1,y
.4b57	60			rts
>6017			p8v_index	.byte  ?
>6018			p8v_value	.word  ?
.4b58			prog8_init_vars
.4b58	60			rts
.4b59			p8b_jdstrvars
>601a			p8v_cn	.byte  ?
>601b			p8v_r	.word  ?
>601d			p8v_strvars_addr	.fill  128
>609d			p8v_strvars_name	.fill  128
>611d			p8v_strvars_next	.fill  64
.4b59			p8v_buffer
>4b59	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>4b5d	00 00 00 00 00 00 00 00 00 00 00 00
>4b69	00 00			.byte  $00, $00
.4b6b			p8s_insert
.4b6b	ad 5f 61		lda  p8v_name
.4b6e	85 02			sta  cx16.r0
.4b70	ad 60 61		lda  p8v_name+1
.4b73	85 03			sta  cx16.r0+1
.4b75	20 ea 28		jsr  string.hash
.4b78	4a			lsr  a
.4b79	4a			lsr  a
.4b7a	8d 5e 61		sta  p8v_index
.4b7d	ad 5e 61		lda  p8v_index
.4b80	d0 05			bne  label_asm_472_afterif
.4b82	a9 01			lda  #1
.4b84	8d 5e 61		sta  p8v_index
.4b87			label_asm_472_afterif
.4b87	ad 5e 61		lda  p8v_index
.4b8a	0a			asl  a
.4b8b	a8			tay
.4b8c	b9 9d 60		lda  p8b_jdstrvars.p8v_strvars_name,y
.4b8f	be 9e 60		ldx  p8b_jdstrvars.p8v_strvars_name+1,y
.4b92	86 7b			stx  P8ZP_SCRATCH_REG
.4b94	a4 7b			ldy  P8ZP_SCRATCH_REG
.4b96	05 7b			ora  P8ZP_SCRATCH_REG
.4b98	d0 3b			bne  label_asm_474_else
.4b9a	ac 60 61		ldy  p8v_name+1
.4b9d	ad 5f 61		lda  p8v_name
.4ba0	20 0e 47		jsr  p8b_jdstr.p8s_add
.4ba3	8d 1b 60		sta  p8b_jdstrvars.p8v_r
.4ba6	8c 1c 60		sty  p8b_jdstrvars.p8v_r+1
.4ba9	ad 5e 61		lda  p8v_index
.4bac	0a			asl  a
.4bad	a8			tay
.4bae	ad 1b 60		lda  p8b_jdstrvars.p8v_r
.4bb1	99 9d 60		sta  p8b_jdstrvars.p8v_strvars_name,y
.4bb4	ad 1c 60		lda  p8b_jdstrvars.p8v_r+1
.4bb7	99 9e 60		sta  p8b_jdstrvars.p8v_strvars_name+1,y
.4bba	ad 5e 61		lda  p8v_index
.4bbd	0a			asl  a
.4bbe	a8			tay
.4bbf	ad 5e 61		lda  p8v_index
.4bc2	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4bc5	c8			iny
.4bc6	a9 00			lda  #0
.4bc8	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4bcb	ae 5e 61		ldx  p8v_index
.4bce	9e 1d 61		stz  p8b_jdstrvars.p8v_strvars_next,x
.4bd1	ad 5e 61		lda  p8v_index
.4bd4	60			rts
.4bd5			label_asm_474_else
.4bd5	ad 5e 61		lda  p8v_index
.4bd8	8d 5d 61		sta  p8v_current
.4bdb			p8l_label_110_whileloop
.4bdb	ac 5d 61		ldy  p8v_current
.4bde	b9 1d 61		lda  p8b_jdstrvars.p8v_strvars_next,y
.4be1	f0 53			beq  p8l_label_111_afterwhile
.4be3	ad 5d 61		lda  p8v_current
.4be6	0a			asl  a
.4be7	a8			tay
.4be8	b9 9d 60		lda  p8b_jdstrvars.p8v_strvars_name,y
.4beb	be 9e 60		ldx  p8b_jdstrvars.p8v_strvars_name+1,y
.4bee	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.4bf1	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.4bf4	a9 59			lda  #<p8b_jdstrvars.p8v_buffer
.4bf6	a0 4b			ldy  #>p8b_jdstrvars.p8v_buffer
.4bf8	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.4bfb	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.4bfe	20 8f 47		jsr  p8b_jdstr.p8s_get
.4c01	ad 5f 61		lda  p8v_name
.4c04	85 02			sta  cx16.r0
.4c06	ad 60 61		lda  p8v_name+1
.4c09	85 03			sta  cx16.r0+1
.4c0b	a0 4b			ldy  #>p8b_jdstrvars.p8v_buffer
.4c0d	a9 59			lda  #<p8b_jdstrvars.p8v_buffer
.4c0f	20 8c 28		jsr  string.compare
.4c12	c9 00			cmp  #0
.4c14	d0 15			bne  label_asm_475_afterif
.4c16	ad 5d 61		lda  p8v_current
.4c19	0a			asl  a
.4c1a	a8			tay
.4c1b	ad 5d 61		lda  p8v_current
.4c1e	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4c21	c8			iny
.4c22	a9 00			lda  #0
.4c24	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4c27	ad 5d 61		lda  p8v_current
.4c2a	60			rts
.4c2b			label_asm_475_afterif
.4c2b	ac 5d 61		ldy  p8v_current
.4c2e	b9 1d 61		lda  p8b_jdstrvars.p8v_strvars_next,y
.4c31	8d 5d 61		sta  p8v_current
.4c34	80 a5			bra  p8l_label_110_whileloop
.4c36			p8l_label_111_afterwhile
.4c36	ad 5d 61		lda  p8v_current
.4c39	0a			asl  a
.4c3a	a8			tay
.4c3b	b9 9d 60		lda  p8b_jdstrvars.p8v_strvars_name,y
.4c3e	be 9e 60		ldx  p8b_jdstrvars.p8v_strvars_name+1,y
.4c41	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.4c44	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.4c47	a9 59			lda  #<p8b_jdstrvars.p8v_buffer
.4c49	a0 4b			ldy  #>p8b_jdstrvars.p8v_buffer
.4c4b	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.4c4e	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.4c51	20 8f 47		jsr  p8b_jdstr.p8s_get
.4c54	ad 5f 61		lda  p8v_name
.4c57	85 02			sta  cx16.r0
.4c59	ad 60 61		lda  p8v_name+1
.4c5c	85 03			sta  cx16.r0+1
.4c5e	a0 4b			ldy  #>p8b_jdstrvars.p8v_buffer
.4c60	a9 59			lda  #<p8b_jdstrvars.p8v_buffer
.4c62	20 8c 28		jsr  string.compare
.4c65	c9 00			cmp  #0
.4c67	d0 15			bne  label_asm_476_afterif
.4c69	ad 5d 61		lda  p8v_current
.4c6c	0a			asl  a
.4c6d	a8			tay
.4c6e	ad 5d 61		lda  p8v_current
.4c71	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4c74	c8			iny
.4c75	a9 00			lda  #0
.4c77	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4c7a	ad 5d 61		lda  p8v_current
.4c7d	60			rts
.4c7e			label_asm_476_afterif
.4c7e	ac 60 61		ldy  p8v_name+1
.4c81	ad 5f 61		lda  p8v_name
.4c84	20 0e 47		jsr  p8b_jdstr.p8s_add
.4c87	8d 1b 60		sta  p8b_jdstrvars.p8v_r
.4c8a	8c 1c 60		sty  p8b_jdstrvars.p8v_r+1
.4c8d	ad 5d 61		lda  p8v_current
.4c90	8d 1a 60		sta  p8b_jdstrvars.p8v_cn
.4c93			p8l_label_112_untilloop
.4c93	ee 1a 60		inc  p8b_jdstrvars.p8v_cn
.4c96	ad 1a 60		lda  p8b_jdstrvars.p8v_cn
.4c99	0a			asl  a
.4c9a	a8			tay
.4c9b	b9 9d 60		lda  p8b_jdstrvars.p8v_strvars_name,y
.4c9e	be 9e 60		ldx  p8b_jdstrvars.p8v_strvars_name+1,y
.4ca1	86 7b			stx  P8ZP_SCRATCH_REG
.4ca3	a4 7b			ldy  P8ZP_SCRATCH_REG
.4ca5	05 7b			ora  P8ZP_SCRATCH_REG
.4ca7	d0 ea			bne  p8l_label_112_untilloop
.4ca9	ad 1a 60		lda  p8b_jdstrvars.p8v_cn
.4cac	0a			asl  a
.4cad	a8			tay
.4cae	ad 1b 60		lda  p8b_jdstrvars.p8v_r
.4cb1	99 9d 60		sta  p8b_jdstrvars.p8v_strvars_name,y
.4cb4	ad 1c 60		lda  p8b_jdstrvars.p8v_r+1
.4cb7	99 9e 60		sta  p8b_jdstrvars.p8v_strvars_name+1,y
.4cba	ad 1a 60		lda  p8b_jdstrvars.p8v_cn
.4cbd	0a			asl  a
.4cbe	a8			tay
.4cbf	ad 1a 60		lda  p8b_jdstrvars.p8v_cn
.4cc2	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4cc5	c8			iny
.4cc6	a9 00			lda  #0
.4cc8	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4ccb	ae 1a 60		ldx  p8b_jdstrvars.p8v_cn
.4cce	9e 1d 61		stz  p8b_jdstrvars.p8v_strvars_next,x
.4cd1	ac 5d 61		ldy  p8v_current
.4cd4	ad 1a 60		lda  p8b_jdstrvars.p8v_cn
.4cd7	99 1d 61		sta  p8b_jdstrvars.p8v_strvars_next,y
.4cda			label_asm_473_afterif
.4cda	ad 1a 60		lda  p8b_jdstrvars.p8v_cn
.4cdd	60			rts
>615d			p8v_current	.byte  ?
>615e			p8v_index	.byte  ?
>615f			p8v_name	.word  ?
>6161			p8v_value	.word  ?
.4cde			p8s_get_value
.4cde	8d 63 61		sta  p8v_index
.4ce1	0a			asl  a
.4ce2	a8			tay
.4ce3	b9 1d 60		lda  p8b_jdstrvars.p8v_strvars_addr,y
.4ce6	be 1e 60		ldx  p8b_jdstrvars.p8v_strvars_addr+1,y
.4ce9	86 7b			stx  P8ZP_SCRATCH_REG
.4ceb	a4 7b			ldy  P8ZP_SCRATCH_REG
.4ced	60			rts
>6163			p8v_index	.byte  ?
.4cee			p8s_set_value
.4cee	9c 65 61		stz  p8v_taddr
.4cf1	9c 66 61		stz  p8v_taddr+1
.4cf4	ad 64 61		lda  p8v_index
.4cf7	8d 8a 5d		sta  p8b_jdheap.p8s_add_str.p8v_nr
.4cfa	ad 67 61		lda  p8v_value
.4cfd	ac 68 61		ldy  p8v_value+1
.4d00	8d 8b 5d		sta  p8b_jdheap.p8s_add_str.p8v_value
.4d03	8c 8c 5d		sty  p8b_jdheap.p8s_add_str.p8v_value+1
.4d06	20 14 49		jsr  p8b_jdheap.p8s_add_str
.4d09	8d 65 61		sta  p8v_taddr
.4d0c	8c 66 61		sty  p8v_taddr+1
.4d0f	ad 64 61		lda  p8v_index
.4d12	0a			asl  a
.4d13	a8			tay
.4d14	ad 65 61		lda  p8v_taddr
.4d17	99 1d 60		sta  p8b_jdstrvars.p8v_strvars_addr,y
.4d1a	ad 66 61		lda  p8v_taddr+1
.4d1d	99 1e 60		sta  p8b_jdstrvars.p8v_strvars_addr+1,y
.4d20	60			rts
>6164			p8v_index	.byte  ?
>6165			p8v_taddr	.word  ?
>6167			p8v_value	.word  ?
.4d21			prog8_init_vars
.4d21	60			rts
.4d22			p8b_jdarrvars
>6169			p8v_arrvars_addr	.fill  128
>61e9			p8v_arrvars_name	.fill  128
>6269			p8v_arrvars_next	.fill  64
>62a9			p8v_cn	.byte  ?
>62aa			p8v_r	.word  ?
.4d22			p8v_buffer
>4d22	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>4d26	00 00 00 00 00 00 00 00 00 00 00 00
>4d32	00 00			.byte  $00, $00
.4d34			p8s_insert
.4d34	ad ae 62		lda  p8v_name
.4d37	85 02			sta  cx16.r0
.4d39	ad af 62		lda  p8v_name+1
.4d3c	85 03			sta  cx16.r0+1
.4d3e	20 ea 28		jsr  string.hash
.4d41	4a			lsr  a
.4d42	4a			lsr  a
.4d43	8d ad 62		sta  p8v_index
.4d46	ad ad 62		lda  p8v_index
.4d49	d0 05			bne  label_asm_477_afterif
.4d4b	a9 01			lda  #1
.4d4d	8d ad 62		sta  p8v_index
.4d50			label_asm_477_afterif
.4d50	ad ad 62		lda  p8v_index
.4d53	0a			asl  a
.4d54	a8			tay
.4d55	b9 e9 61		lda  p8b_jdarrvars.p8v_arrvars_name,y
.4d58	be ea 61		ldx  p8b_jdarrvars.p8v_arrvars_name+1,y
.4d5b	86 7b			stx  P8ZP_SCRATCH_REG
.4d5d	a4 7b			ldy  P8ZP_SCRATCH_REG
.4d5f	05 7b			ora  P8ZP_SCRATCH_REG
.4d61	d0 3b			bne  label_asm_479_else
.4d63	ac af 62		ldy  p8v_name+1
.4d66	ad ae 62		lda  p8v_name
.4d69	20 0e 47		jsr  p8b_jdstr.p8s_add
.4d6c	8d aa 62		sta  p8b_jdarrvars.p8v_r
.4d6f	8c ab 62		sty  p8b_jdarrvars.p8v_r+1
.4d72	ad ad 62		lda  p8v_index
.4d75	0a			asl  a
.4d76	a8			tay
.4d77	ad aa 62		lda  p8b_jdarrvars.p8v_r
.4d7a	99 e9 61		sta  p8b_jdarrvars.p8v_arrvars_name,y
.4d7d	ad ab 62		lda  p8b_jdarrvars.p8v_r+1
.4d80	99 ea 61		sta  p8b_jdarrvars.p8v_arrvars_name+1,y
.4d83	ad ad 62		lda  p8v_index
.4d86	0a			asl  a
.4d87	a8			tay
.4d88	ad ad 62		lda  p8v_index
.4d8b	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4d8e	c8			iny
.4d8f	a9 00			lda  #0
.4d91	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4d94	ae ad 62		ldx  p8v_index
.4d97	9e 69 62		stz  p8b_jdarrvars.p8v_arrvars_next,x
.4d9a	ad ad 62		lda  p8v_index
.4d9d	60			rts
.4d9e			label_asm_479_else
.4d9e	ad ad 62		lda  p8v_index
.4da1	8d ac 62		sta  p8v_current
.4da4			p8l_label_115_whileloop
.4da4	ac ac 62		ldy  p8v_current
.4da7	b9 69 62		lda  p8b_jdarrvars.p8v_arrvars_next,y
.4daa	f0 53			beq  p8l_label_116_afterwhile
.4dac	ad ac 62		lda  p8v_current
.4daf	0a			asl  a
.4db0	a8			tay
.4db1	b9 e9 61		lda  p8b_jdarrvars.p8v_arrvars_name,y
.4db4	be ea 61		ldx  p8b_jdarrvars.p8v_arrvars_name+1,y
.4db7	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.4dba	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.4dbd	a9 22			lda  #<p8b_jdarrvars.p8v_buffer
.4dbf	a0 4d			ldy  #>p8b_jdarrvars.p8v_buffer
.4dc1	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.4dc4	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.4dc7	20 8f 47		jsr  p8b_jdstr.p8s_get
.4dca	ad ae 62		lda  p8v_name
.4dcd	85 02			sta  cx16.r0
.4dcf	ad af 62		lda  p8v_name+1
.4dd2	85 03			sta  cx16.r0+1
.4dd4	a0 4d			ldy  #>p8b_jdarrvars.p8v_buffer
.4dd6	a9 22			lda  #<p8b_jdarrvars.p8v_buffer
.4dd8	20 8c 28		jsr  string.compare
.4ddb	c9 00			cmp  #0
.4ddd	d0 15			bne  label_asm_480_afterif
.4ddf	ad ac 62		lda  p8v_current
.4de2	0a			asl  a
.4de3	a8			tay
.4de4	ad ac 62		lda  p8v_current
.4de7	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4dea	c8			iny
.4deb	a9 00			lda  #0
.4ded	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4df0	ad ac 62		lda  p8v_current
.4df3	60			rts
.4df4			label_asm_480_afterif
.4df4	ac ac 62		ldy  p8v_current
.4df7	b9 69 62		lda  p8b_jdarrvars.p8v_arrvars_next,y
.4dfa	8d ac 62		sta  p8v_current
.4dfd	80 a5			bra  p8l_label_115_whileloop
.4dff			p8l_label_116_afterwhile
.4dff	ad ac 62		lda  p8v_current
.4e02	0a			asl  a
.4e03	a8			tay
.4e04	b9 e9 61		lda  p8b_jdarrvars.p8v_arrvars_name,y
.4e07	be ea 61		ldx  p8b_jdarrvars.p8v_arrvars_name+1,y
.4e0a	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.4e0d	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.4e10	a9 22			lda  #<p8b_jdarrvars.p8v_buffer
.4e12	a0 4d			ldy  #>p8b_jdarrvars.p8v_buffer
.4e14	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.4e17	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.4e1a	20 8f 47		jsr  p8b_jdstr.p8s_get
.4e1d	ad ae 62		lda  p8v_name
.4e20	85 02			sta  cx16.r0
.4e22	ad af 62		lda  p8v_name+1
.4e25	85 03			sta  cx16.r0+1
.4e27	a0 4d			ldy  #>p8b_jdarrvars.p8v_buffer
.4e29	a9 22			lda  #<p8b_jdarrvars.p8v_buffer
.4e2b	20 8c 28		jsr  string.compare
.4e2e	c9 00			cmp  #0
.4e30	d0 15			bne  label_asm_481_afterif
.4e32	ad ac 62		lda  p8v_current
.4e35	0a			asl  a
.4e36	a8			tay
.4e37	ad ac 62		lda  p8v_current
.4e3a	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4e3d	c8			iny
.4e3e	a9 00			lda  #0
.4e40	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4e43	ad ac 62		lda  p8v_current
.4e46	60			rts
.4e47			label_asm_481_afterif
.4e47	ac af 62		ldy  p8v_name+1
.4e4a	ad ae 62		lda  p8v_name
.4e4d	20 0e 47		jsr  p8b_jdstr.p8s_add
.4e50	8d aa 62		sta  p8b_jdarrvars.p8v_r
.4e53	8c ab 62		sty  p8b_jdarrvars.p8v_r+1
.4e56	ad ac 62		lda  p8v_current
.4e59	8d a9 62		sta  p8b_jdarrvars.p8v_cn
.4e5c			p8l_label_117_untilloop
.4e5c	ee a9 62		inc  p8b_jdarrvars.p8v_cn
.4e5f	ad a9 62		lda  p8b_jdarrvars.p8v_cn
.4e62	0a			asl  a
.4e63	a8			tay
.4e64	b9 e9 61		lda  p8b_jdarrvars.p8v_arrvars_name,y
.4e67	be ea 61		ldx  p8b_jdarrvars.p8v_arrvars_name+1,y
.4e6a	86 7b			stx  P8ZP_SCRATCH_REG
.4e6c	a4 7b			ldy  P8ZP_SCRATCH_REG
.4e6e	05 7b			ora  P8ZP_SCRATCH_REG
.4e70	d0 ea			bne  p8l_label_117_untilloop
.4e72	ad a9 62		lda  p8b_jdarrvars.p8v_cn
.4e75	0a			asl  a
.4e76	a8			tay
.4e77	ad aa 62		lda  p8b_jdarrvars.p8v_r
.4e7a	99 e9 61		sta  p8b_jdarrvars.p8v_arrvars_name,y
.4e7d	ad ab 62		lda  p8b_jdarrvars.p8v_r+1
.4e80	99 ea 61		sta  p8b_jdarrvars.p8v_arrvars_name+1,y
.4e83	ad a9 62		lda  p8b_jdarrvars.p8v_cn
.4e86	0a			asl  a
.4e87	a8			tay
.4e88	ad a9 62		lda  p8b_jdarrvars.p8v_cn
.4e8b	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4e8e	c8			iny
.4e8f	a9 00			lda  #0
.4e91	99 69 61		sta  p8b_jdarrvars.p8v_arrvars_addr,y
.4e94	ae a9 62		ldx  p8b_jdarrvars.p8v_cn
.4e97	9e 69 62		stz  p8b_jdarrvars.p8v_arrvars_next,x
.4e9a	ac ac 62		ldy  p8v_current
.4e9d	ad a9 62		lda  p8b_jdarrvars.p8v_cn
.4ea0	99 69 62		sta  p8b_jdarrvars.p8v_arrvars_next,y
.4ea3			label_asm_478_afterif
.4ea3	ad a9 62		lda  p8b_jdarrvars.p8v_cn
.4ea6	60			rts
>62ac			p8v_current	.byte  ?
>62ad			p8v_index	.byte  ?
>62ae			p8v_name	.word  ?
>62b0			p8v_value	.word  ?
.4ea7			p8s_get_value
.4ea7	9c b7 62		stz  p8v_taddr
.4eaa	9c b8 62		stz  p8v_taddr+1
.4ead	9c b9 62		stz  p8v_tind
.4eb0	9c ba 62		stz  p8v_tind+1
.4eb3	9c bb 62		stz  p8v_value
.4eb6	9c bc 62		stz  p8v_value+1
.4eb9	9c b4 62		stz  p8v_l
.4ebc	9c b5 62		stz  p8v_m
.4ebf	ad b6 62		lda  p8v_nr
.4ec2	0a			asl  a
.4ec3	a8			tay
.4ec4	b9 69 61		lda  p8b_jdarrvars.p8v_arrvars_addr,y
.4ec7	be 6a 61		ldx  p8b_jdarrvars.p8v_arrvars_addr+1,y
.4eca	8d b7 62		sta  p8v_taddr
.4ecd	8e b8 62		stx  p8v_taddr+1
.4ed0	ee b7 62		inc  p8v_taddr
.4ed3	d0 03			bne  +
.4ed5	ee b8 62		inc  p8v_taddr+1
.4ed8			+
.4ed8	ee b7 62		inc  p8v_taddr
.4edb	d0 03			bne  +
.4edd	ee b8 62		inc  p8v_taddr+1
.4ee0			+
.4ee0	ad b7 62		lda  p8v_taddr
.4ee3	ac b8 62		ldy  p8v_taddr+1
.4ee6	85 7c			sta  P8ZP_SCRATCH_W1
.4ee8	84 7d			sty  P8ZP_SCRATCH_W1+1
.4eea	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4eec	8d b4 62		sta  p8v_l
.4eef	ee b7 62		inc  p8v_taddr
.4ef2	d0 03			bne  +
.4ef4	ee b8 62		inc  p8v_taddr+1
.4ef7			+
.4ef7	ad b7 62		lda  p8v_taddr
.4efa	ac b8 62		ldy  p8v_taddr+1
.4efd	85 7c			sta  P8ZP_SCRATCH_W1
.4eff	84 7d			sty  P8ZP_SCRATCH_W1+1
.4f01	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4f03	8d b5 62		sta  p8v_m
.4f06	ad b4 62		lda  p8v_l
.4f09	ac b5 62		ldy  p8v_m
.4f0c	8d b9 62		sta  p8v_tind
.4f0f	8c ba 62		sty  p8v_tind+1
.4f12	ad b7 62		lda  p8v_taddr
.4f15	d0 03			bne  +
.4f17	ce b8 62		dec  p8v_taddr+1
.4f1a	ce b7 62	+                           dec  p8v_taddr
.4f1d	ad b7 62		lda  p8v_taddr
.4f20	d0 03			bne  +
.4f22	ce b8 62		dec  p8v_taddr+1
.4f25	ce b7 62	+                           dec  p8v_taddr
.4f28	ac b3 62		ldy  p8v_index+1
.4f2b	ad b2 62		lda  p8v_index
.4f2e	cd b9 62		cmp  p8v_tind
.4f31	98			tya
.4f32	ed ba 62		sbc  p8v_tind+1
.4f35	b0 5c			bcs  label_asm_482_afterif
.4f37	ee b2 62		inc  p8v_index
.4f3a	d0 03			bne  +
.4f3c	ee b3 62		inc  p8v_index+1
.4f3f			+
.4f3f	ac b3 62		ldy  p8v_index+1
.4f42	ad b2 62		lda  p8v_index
.4f45	84 7a			sty  P8ZP_SCRATCH_B1
.4f47	0a			asl  a
.4f48	26 7a			rol  P8ZP_SCRATCH_B1
.4f4a	a4 7a			ldy  P8ZP_SCRATCH_B1
.4f4c	85 7c			sta  P8ZP_SCRATCH_W1
.4f4e	84 7d			sty  P8ZP_SCRATCH_W1+1
.4f50	ad b7 62		lda  p8v_taddr
.4f53	38			sec
.4f54	e5 7c			sbc  P8ZP_SCRATCH_W1
.4f56	8d b7 62		sta  p8v_taddr
.4f59	ad b8 62		lda  p8v_taddr+1
.4f5c	e5 7d			sbc  P8ZP_SCRATCH_W1+1
.4f5e	8d b8 62		sta  p8v_taddr+1
.4f61	ad b7 62		lda  p8v_taddr
.4f64	ac b8 62		ldy  p8v_taddr+1
.4f67	85 7c			sta  P8ZP_SCRATCH_W1
.4f69	84 7d			sty  P8ZP_SCRATCH_W1+1
.4f6b	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4f6d	8d b4 62		sta  p8v_l
.4f70	ee b7 62		inc  p8v_taddr
.4f73	d0 03			bne  +
.4f75	ee b8 62		inc  p8v_taddr+1
.4f78			+
.4f78	ad b7 62		lda  p8v_taddr
.4f7b	ac b8 62		ldy  p8v_taddr+1
.4f7e	85 7c			sta  P8ZP_SCRATCH_W1
.4f80	84 7d			sty  P8ZP_SCRATCH_W1+1
.4f82	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4f84	8d b5 62		sta  p8v_m
.4f87	ad b4 62		lda  p8v_l
.4f8a	ac b5 62		ldy  p8v_m
.4f8d	8d bb 62		sta  p8v_value
.4f90	8c bc 62		sty  p8v_value+1
.4f93			label_asm_482_afterif
.4f93	ac bc 62		ldy  p8v_value+1
.4f96	ad bb 62		lda  p8v_value
.4f99	60			rts
>62b2			p8v_index	.word  ?
>62b4			p8v_l	.byte  ?
>62b5			p8v_m	.byte  ?
>62b6			p8v_nr	.byte  ?
>62b7			p8v_taddr	.word  ?
>62b9			p8v_tind	.word  ?
>62bb			p8v_value	.word  ?
.4f9a			p8s_get_len
.4f9a	8d bf 62		sta  p8v_nr
.4f9d	9c c0 62		stz  p8v_taddr
.4fa0	9c c1 62		stz  p8v_taddr+1
.4fa3	9c c2 62		stz  p8v_tind
.4fa6	9c c3 62		stz  p8v_tind+1
.4fa9	9c bd 62		stz  p8v_l
.4fac	9c be 62		stz  p8v_m
.4faf	ad bf 62		lda  p8v_nr
.4fb2	0a			asl  a
.4fb3	a8			tay
.4fb4	b9 69 61		lda  p8b_jdarrvars.p8v_arrvars_addr,y
.4fb7	be 6a 61		ldx  p8b_jdarrvars.p8v_arrvars_addr+1,y
.4fba	8d c0 62		sta  p8v_taddr
.4fbd	8e c1 62		stx  p8v_taddr+1
.4fc0	ee c0 62		inc  p8v_taddr
.4fc3	d0 03			bne  +
.4fc5	ee c1 62		inc  p8v_taddr+1
.4fc8			+
.4fc8	ee c0 62		inc  p8v_taddr
.4fcb	d0 03			bne  +
.4fcd	ee c1 62		inc  p8v_taddr+1
.4fd0			+
.4fd0	ad c0 62		lda  p8v_taddr
.4fd3	ac c1 62		ldy  p8v_taddr+1
.4fd6	85 7c			sta  P8ZP_SCRATCH_W1
.4fd8	84 7d			sty  P8ZP_SCRATCH_W1+1
.4fda	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4fdc	8d bd 62		sta  p8v_l
.4fdf	ee c0 62		inc  p8v_taddr
.4fe2	d0 03			bne  +
.4fe4	ee c1 62		inc  p8v_taddr+1
.4fe7			+
.4fe7	ad c0 62		lda  p8v_taddr
.4fea	ac c1 62		ldy  p8v_taddr+1
.4fed	85 7c			sta  P8ZP_SCRATCH_W1
.4fef	84 7d			sty  P8ZP_SCRATCH_W1+1
.4ff1	b2 7c			lda  (P8ZP_SCRATCH_W1)
.4ff3	8d be 62		sta  p8v_m
.4ff6	ad bd 62		lda  p8v_l
.4ff9	ac be 62		ldy  p8v_m
.4ffc	8d c2 62		sta  p8v_tind
.4fff	8c c3 62		sty  p8v_tind+1
.5002	ad c2 62		lda  p8v_tind
.5005	d0 03			bne  +
.5007	ce c3 62		dec  p8v_tind+1
.500a	ce c2 62	+                           dec  p8v_tind
.500d	ac c3 62		ldy  p8v_tind+1
.5010	ad c2 62		lda  p8v_tind
.5013	60			rts
>62bd			p8v_l	.byte  ?
>62be			p8v_m	.byte  ?
>62bf			p8v_nr	.byte  ?
>62c0			p8v_taddr	.word  ?
>62c2			p8v_tind	.word  ?
.5014			p8s_set_value
.5014	9c c9 62		stz  p8v_taddr
.5017	9c ca 62		stz  p8v_taddr+1
.501a	9c cb 62		stz  p8v_tind
.501d	9c cc 62		stz  p8v_tind+1
.5020	9c c6 62		stz  p8v_l
.5023	9c c7 62		stz  p8v_m
.5026	ad c8 62		lda  p8v_nr
.5029	0a			asl  a
.502a	a8			tay
.502b	b9 69 61		lda  p8b_jdarrvars.p8v_arrvars_addr,y
.502e	be 6a 61		ldx  p8b_jdarrvars.p8v_arrvars_addr+1,y
.5031	8d c9 62		sta  p8v_taddr
.5034	8e ca 62		stx  p8v_taddr+1
.5037	ee c9 62		inc  p8v_taddr
.503a	d0 03			bne  +
.503c	ee ca 62		inc  p8v_taddr+1
.503f			+
.503f	ee c9 62		inc  p8v_taddr
.5042	d0 03			bne  +
.5044	ee ca 62		inc  p8v_taddr+1
.5047			+
.5047	ad c9 62		lda  p8v_taddr
.504a	ac ca 62		ldy  p8v_taddr+1
.504d	85 7c			sta  P8ZP_SCRATCH_W1
.504f	84 7d			sty  P8ZP_SCRATCH_W1+1
.5051	b2 7c			lda  (P8ZP_SCRATCH_W1)
.5053	8d c6 62		sta  p8v_l
.5056	ee c9 62		inc  p8v_taddr
.5059	d0 03			bne  +
.505b	ee ca 62		inc  p8v_taddr+1
.505e			+
.505e	ad c9 62		lda  p8v_taddr
.5061	ac ca 62		ldy  p8v_taddr+1
.5064	85 7c			sta  P8ZP_SCRATCH_W1
.5066	84 7d			sty  P8ZP_SCRATCH_W1+1
.5068	b2 7c			lda  (P8ZP_SCRATCH_W1)
.506a	8d c7 62		sta  p8v_m
.506d	ad c6 62		lda  p8v_l
.5070	ac c7 62		ldy  p8v_m
.5073	8d cb 62		sta  p8v_tind
.5076	8c cc 62		sty  p8v_tind+1
.5079	ad c9 62		lda  p8v_taddr
.507c	d0 03			bne  +
.507e	ce ca 62		dec  p8v_taddr+1
.5081	ce c9 62	+                           dec  p8v_taddr
.5084	ad c9 62		lda  p8v_taddr
.5087	d0 03			bne  +
.5089	ce ca 62		dec  p8v_taddr+1
.508c	ce c9 62	+                           dec  p8v_taddr
.508f	ac c5 62		ldy  p8v_index+1
.5092	ad c4 62		lda  p8v_index
.5095	cd cb 62		cmp  p8v_tind
.5098	98			tya
.5099	ed cc 62		sbc  p8v_tind+1
.509c	b0 50			bcs  label_asm_483_afterif
.509e	ee c4 62		inc  p8v_index
.50a1	d0 03			bne  +
.50a3	ee c5 62		inc  p8v_index+1
.50a6			+
.50a6	ac c5 62		ldy  p8v_index+1
.50a9	ad c4 62		lda  p8v_index
.50ac	84 7a			sty  P8ZP_SCRATCH_B1
.50ae	0a			asl  a
.50af	26 7a			rol  P8ZP_SCRATCH_B1
.50b1	a4 7a			ldy  P8ZP_SCRATCH_B1
.50b3	85 7c			sta  P8ZP_SCRATCH_W1
.50b5	84 7d			sty  P8ZP_SCRATCH_W1+1
.50b7	ad c9 62		lda  p8v_taddr
.50ba	38			sec
.50bb	e5 7c			sbc  P8ZP_SCRATCH_W1
.50bd	8d c9 62		sta  p8v_taddr
.50c0	ad ca 62		lda  p8v_taddr+1
.50c3	e5 7d			sbc  P8ZP_SCRATCH_W1+1
.50c5	8d ca 62		sta  p8v_taddr+1
.50c8	ad cd 62		lda  p8v_value
.50cb	ac c9 62		ldy  p8v_taddr
.50ce	84 7e			sty  P8ZP_SCRATCH_W2
.50d0	ac ca 62		ldy  p8v_taddr+1
.50d3	84 7f			sty  P8ZP_SCRATCH_W2+1
.50d5	92 7e			sta  (P8ZP_SCRATCH_W2)
.50d7	ee c9 62		inc  p8v_taddr
.50da	d0 03			bne  +
.50dc	ee ca 62		inc  p8v_taddr+1
.50df			+
.50df	ad ce 62		lda  p8v_value+1
.50e2	ac c9 62		ldy  p8v_taddr
.50e5	84 7e			sty  P8ZP_SCRATCH_W2
.50e7	ac ca 62		ldy  p8v_taddr+1
.50ea	84 7f			sty  P8ZP_SCRATCH_W2+1
.50ec	92 7e			sta  (P8ZP_SCRATCH_W2)
.50ee			label_asm_483_afterif
.50ee	60			rts
>62c4			p8v_index	.word  ?
>62c6			p8v_l	.byte  ?
>62c7			p8v_m	.byte  ?
>62c8			p8v_nr	.byte  ?
>62c9			p8v_taddr	.word  ?
>62cb			p8v_tind	.word  ?
>62cd			p8v_value	.word  ?
.50ef			prog8_init_vars
.50ef	60			rts
.50f0			p8b_jdlocal
>62cf			p8v_cn	.byte  ?
>62d0			p8v_localvars_name	.fill  256
>63d0			p8v_localvars_next	.fill  128
>6450			p8v_localvars_value	.fill  256
>6550			p8v_r	.word  ?
.50f0			p8v_buffer
>50f0	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>50f4	00 00 00 00 00 00 00 00 00 00 00 00
>5100	00 00			.byte  $00, $00
.5102			p8s_insert
.5102	ad 54 65		lda  p8v_name
.5105	85 02			sta  cx16.r0
.5107	ad 55 65		lda  p8v_name+1
.510a	85 03			sta  cx16.r0+1
.510c	20 ea 28		jsr  string.hash
.510f	4a			lsr  a
.5110	8d 53 65		sta  p8v_index
.5113	ad 53 65		lda  p8v_index
.5116	d0 05			bne  label_asm_484_afterif
.5118	a9 01			lda  #1
.511a	8d 53 65		sta  p8v_index
.511d			label_asm_484_afterif
.511d	ad 53 65		lda  p8v_index
.5120	0a			asl  a
.5121	a8			tay
.5122	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.5125	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.5128	86 7b			stx  P8ZP_SCRATCH_REG
.512a	a4 7b			ldy  P8ZP_SCRATCH_REG
.512c	05 7b			ora  P8ZP_SCRATCH_REG
.512e	d0 3b			bne  label_asm_486_else
.5130	ac 55 65		ldy  p8v_name+1
.5133	ad 54 65		lda  p8v_name
.5136	20 0e 47		jsr  p8b_jdstr.p8s_add
.5139	8d 50 65		sta  p8b_jdlocal.p8v_r
.513c	8c 51 65		sty  p8b_jdlocal.p8v_r+1
.513f	ad 53 65		lda  p8v_index
.5142	0a			asl  a
.5143	a8			tay
.5144	ad 50 65		lda  p8b_jdlocal.p8v_r
.5147	99 d0 62		sta  p8b_jdlocal.p8v_localvars_name,y
.514a	ad 51 65		lda  p8b_jdlocal.p8v_r+1
.514d	99 d1 62		sta  p8b_jdlocal.p8v_localvars_name+1,y
.5150	ad 53 65		lda  p8v_index
.5153	0a			asl  a
.5154	a8			tay
.5155	ad 56 65		lda  p8v_value
.5158	99 50 64		sta  p8b_jdlocal.p8v_localvars_value,y
.515b	ad 57 65		lda  p8v_value+1
.515e	99 51 64		sta  p8b_jdlocal.p8v_localvars_value+1,y
.5161	ae 53 65		ldx  p8v_index
.5164	9e d0 63		stz  p8b_jdlocal.p8v_localvars_next,x
.5167	ad 53 65		lda  p8v_index
.516a	60			rts
.516b			label_asm_486_else
.516b	ad 53 65		lda  p8v_index
.516e	8d 52 65		sta  p8v_current
.5171			p8l_label_118_whileloop
.5171	ac 52 65		ldy  p8v_current
.5174	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.5177	f0 53			beq  p8l_label_119_afterwhile
.5179	ad 52 65		lda  p8v_current
.517c	0a			asl  a
.517d	a8			tay
.517e	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.5181	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.5184	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5187	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.518a	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.518c	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.518e	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.5191	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5194	20 8f 47		jsr  p8b_jdstr.p8s_get
.5197	ad 54 65		lda  p8v_name
.519a	85 02			sta  cx16.r0
.519c	ad 55 65		lda  p8v_name+1
.519f	85 03			sta  cx16.r0+1
.51a1	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.51a3	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.51a5	20 8c 28		jsr  string.compare
.51a8	c9 00			cmp  #0
.51aa	d0 15			bne  label_asm_487_afterif
.51ac	ad 52 65		lda  p8v_current
.51af	0a			asl  a
.51b0	a8			tay
.51b1	ad 56 65		lda  p8v_value
.51b4	99 50 64		sta  p8b_jdlocal.p8v_localvars_value,y
.51b7	ad 57 65		lda  p8v_value+1
.51ba	99 51 64		sta  p8b_jdlocal.p8v_localvars_value+1,y
.51bd	ad 52 65		lda  p8v_current
.51c0	60			rts
.51c1			label_asm_487_afterif
.51c1	ac 52 65		ldy  p8v_current
.51c4	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.51c7	8d 52 65		sta  p8v_current
.51ca	80 a5			bra  p8l_label_118_whileloop
.51cc			p8l_label_119_afterwhile
.51cc	ad 52 65		lda  p8v_current
.51cf	0a			asl  a
.51d0	a8			tay
.51d1	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.51d4	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.51d7	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.51da	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.51dd	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.51df	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.51e1	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.51e4	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.51e7	20 8f 47		jsr  p8b_jdstr.p8s_get
.51ea	ad 54 65		lda  p8v_name
.51ed	85 02			sta  cx16.r0
.51ef	ad 55 65		lda  p8v_name+1
.51f2	85 03			sta  cx16.r0+1
.51f4	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.51f6	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.51f8	20 8c 28		jsr  string.compare
.51fb	c9 00			cmp  #0
.51fd	d0 15			bne  label_asm_488_afterif
.51ff	ad 52 65		lda  p8v_current
.5202	0a			asl  a
.5203	a8			tay
.5204	ad 56 65		lda  p8v_value
.5207	99 50 64		sta  p8b_jdlocal.p8v_localvars_value,y
.520a	ad 57 65		lda  p8v_value+1
.520d	99 51 64		sta  p8b_jdlocal.p8v_localvars_value+1,y
.5210	ad 52 65		lda  p8v_current
.5213	60			rts
.5214			label_asm_488_afterif
.5214	ac 55 65		ldy  p8v_name+1
.5217	ad 54 65		lda  p8v_name
.521a	20 0e 47		jsr  p8b_jdstr.p8s_add
.521d	8d 50 65		sta  p8b_jdlocal.p8v_r
.5220	8c 51 65		sty  p8b_jdlocal.p8v_r+1
.5223			p8l_label_120_untilloop
.5223	ee cf 62		inc  p8b_jdlocal.p8v_cn
.5226	ad cf 62		lda  p8b_jdlocal.p8v_cn
.5229	0a			asl  a
.522a	a8			tay
.522b	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.522e	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.5231	86 7b			stx  P8ZP_SCRATCH_REG
.5233	a4 7b			ldy  P8ZP_SCRATCH_REG
.5235	05 7b			ora  P8ZP_SCRATCH_REG
.5237	d0 ea			bne  p8l_label_120_untilloop
.5239	ad cf 62		lda  p8b_jdlocal.p8v_cn
.523c	0a			asl  a
.523d	a8			tay
.523e	ad 50 65		lda  p8b_jdlocal.p8v_r
.5241	99 d0 62		sta  p8b_jdlocal.p8v_localvars_name,y
.5244	ad 51 65		lda  p8b_jdlocal.p8v_r+1
.5247	99 d1 62		sta  p8b_jdlocal.p8v_localvars_name+1,y
.524a	ad cf 62		lda  p8b_jdlocal.p8v_cn
.524d	0a			asl  a
.524e	a8			tay
.524f	ad 56 65		lda  p8v_value
.5252	99 50 64		sta  p8b_jdlocal.p8v_localvars_value,y
.5255	ad 57 65		lda  p8v_value+1
.5258	99 51 64		sta  p8b_jdlocal.p8v_localvars_value+1,y
.525b	ae cf 62		ldx  p8b_jdlocal.p8v_cn
.525e	9e d0 63		stz  p8b_jdlocal.p8v_localvars_next,x
.5261	ac 52 65		ldy  p8v_current
.5264	ad cf 62		lda  p8b_jdlocal.p8v_cn
.5267	99 d0 63		sta  p8b_jdlocal.p8v_localvars_next,y
.526a			label_asm_485_afterif
.526a	ad cf 62		lda  p8b_jdlocal.p8v_cn
.526d	60			rts
>6552			p8v_current	.byte  ?
>6553			p8v_index	.byte  ?
>6554			p8v_name	.word  ?
>6556			p8v_value	.word  ?
.526e			p8s_get_name
.526e	8d 5a 65		sta  p8v_name
.5271	8c 5b 65		sty  p8v_name+1
.5274	85 02			sta  cx16.r0
.5276	ad 5b 65		lda  p8v_name+1
.5279	85 03			sta  cx16.r0+1
.527b	20 ea 28		jsr  string.hash
.527e	4a			lsr  a
.527f	8d 59 65		sta  p8v_index
.5282	ad 59 65		lda  p8v_index
.5285	d0 05			bne  label_asm_489_afterif
.5287	a9 01			lda  #1
.5289	8d 59 65		sta  p8v_index
.528c			label_asm_489_afterif
.528c	ad 59 65		lda  p8v_index
.528f	0a			asl  a
.5290	a8			tay
.5291	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.5294	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.5297	86 7b			stx  P8ZP_SCRATCH_REG
.5299	a4 7b			ldy  P8ZP_SCRATCH_REG
.529b	05 7b			ora  P8ZP_SCRATCH_REG
.529d	d0 04			bne  label_asm_490_afterif
.529f	a9 00			lda  #0
.52a1	a8			tay
.52a2	60			rts
.52a3			label_asm_490_afterif
.52a3	ad 59 65		lda  p8v_index
.52a6	0a			asl  a
.52a7	a8			tay
.52a8	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.52ab	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.52ae	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.52b1	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.52b4	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.52b6	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.52b8	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.52bb	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.52be	20 8f 47		jsr  p8b_jdstr.p8s_get
.52c1	ac 59 65		ldy  p8v_index
.52c4	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.52c7	8d 58 65		sta  p8v_current
.52ca	ad 5a 65		lda  p8v_name
.52cd	85 02			sta  cx16.r0
.52cf	ad 5b 65		lda  p8v_name+1
.52d2	85 03			sta  cx16.r0+1
.52d4	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.52d6	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.52d8	20 8c 28		jsr  string.compare
.52db	c9 00			cmp  #0
.52dd	d0 10			bne  label_asm_491_afterif
.52df	ad 59 65		lda  p8v_index
.52e2	0a			asl  a
.52e3	a8			tay
.52e4	b9 50 64		lda  p8b_jdlocal.p8v_localvars_value,y
.52e7	be 51 64		ldx  p8b_jdlocal.p8v_localvars_value+1,y
.52ea	86 7b			stx  P8ZP_SCRATCH_REG
.52ec	a4 7b			ldy  P8ZP_SCRATCH_REG
.52ee	60			rts
.52ef			label_asm_491_afterif
.52ef			p8l_label_121_whileloop
.52ef	ac 58 65		ldy  p8v_current
.52f2	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.52f5	f0 4e			beq  p8l_label_122_afterwhile
.52f7	ad 58 65		lda  p8v_current
.52fa	0a			asl  a
.52fb	a8			tay
.52fc	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.52ff	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.5302	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5305	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.5308	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.530a	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.530c	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.530f	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5312	20 8f 47		jsr  p8b_jdstr.p8s_get
.5315	ad 5a 65		lda  p8v_name
.5318	85 02			sta  cx16.r0
.531a	ad 5b 65		lda  p8v_name+1
.531d	85 03			sta  cx16.r0+1
.531f	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.5321	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.5323	20 8c 28		jsr  string.compare
.5326	c9 00			cmp  #0
.5328	d0 10			bne  label_asm_492_afterif
.532a	ad 58 65		lda  p8v_current
.532d	0a			asl  a
.532e	a8			tay
.532f	b9 50 64		lda  p8b_jdlocal.p8v_localvars_value,y
.5332	be 51 64		ldx  p8b_jdlocal.p8v_localvars_value+1,y
.5335	86 7b			stx  P8ZP_SCRATCH_REG
.5337	a4 7b			ldy  P8ZP_SCRATCH_REG
.5339	60			rts
.533a			label_asm_492_afterif
.533a	ac 58 65		ldy  p8v_current
.533d	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.5340	8d 58 65		sta  p8v_current
.5343	80 aa			bra  p8l_label_121_whileloop
.5345			p8l_label_122_afterwhile
.5345	ad 58 65		lda  p8v_current
.5348	0a			asl  a
.5349	a8			tay
.534a	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.534d	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.5350	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5353	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.5356	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.5358	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.535a	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.535d	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5360	20 8f 47		jsr  p8b_jdstr.p8s_get
.5363	ad 5a 65		lda  p8v_name
.5366	85 02			sta  cx16.r0
.5368	ad 5b 65		lda  p8v_name+1
.536b	85 03			sta  cx16.r0+1
.536d	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.536f	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.5371	20 8c 28		jsr  string.compare
.5374	c9 00			cmp  #0
.5376	d0 10			bne  label_asm_493_afterif
.5378	ad 58 65		lda  p8v_current
.537b	0a			asl  a
.537c	a8			tay
.537d	b9 50 64		lda  p8b_jdlocal.p8v_localvars_value,y
.5380	be 51 64		ldx  p8b_jdlocal.p8v_localvars_value+1,y
.5383	86 7b			stx  P8ZP_SCRATCH_REG
.5385	a4 7b			ldy  P8ZP_SCRATCH_REG
.5387	60			rts
.5388			label_asm_493_afterif
.5388	a9 00			lda  #0
.538a	a8			tay
.538b	60			rts
>6558			p8v_current	.byte  ?
>6559			p8v_index	.byte  ?
>655a			p8v_name	.word  ?
.538c			p8s_get_indexbyname
.538c	8d 5e 65		sta  p8v_name
.538f	8c 5f 65		sty  p8v_name+1
.5392	85 02			sta  cx16.r0
.5394	ad 5f 65		lda  p8v_name+1
.5397	85 03			sta  cx16.r0+1
.5399	20 ea 28		jsr  string.hash
.539c	4a			lsr  a
.539d	8d 5d 65		sta  p8v_index
.53a0	ad 5d 65		lda  p8v_index
.53a3	d0 05			bne  label_asm_494_afterif
.53a5	a9 01			lda  #1
.53a7	8d 5d 65		sta  p8v_index
.53aa			label_asm_494_afterif
.53aa	ac 5d 65		ldy  p8v_index
.53ad	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.53b0	8d 5c 65		sta  p8v_current
.53b3	d0 04			bne  label_asm_495_afterif
.53b5	ad 5d 65		lda  p8v_index
.53b8	60			rts
.53b9			label_asm_495_afterif
.53b9			p8l_label_123_whileloop
.53b9	ac 5c 65		ldy  p8v_current
.53bc	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.53bf	f0 42			beq  p8l_label_124_afterwhile
.53c1	ad 5c 65		lda  p8v_current
.53c4	0a			asl  a
.53c5	a8			tay
.53c6	b9 d0 62		lda  p8b_jdlocal.p8v_localvars_name,y
.53c9	be d1 62		ldx  p8b_jdlocal.p8v_localvars_name+1,y
.53cc	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.53cf	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.53d2	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.53d4	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.53d6	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.53d9	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.53dc	20 8f 47		jsr  p8b_jdstr.p8s_get
.53df	ad 5e 65		lda  p8v_name
.53e2	85 02			sta  cx16.r0
.53e4	ad 5f 65		lda  p8v_name+1
.53e7	85 03			sta  cx16.r0+1
.53e9	a0 50			ldy  #>p8b_jdlocal.p8v_buffer
.53eb	a9 f0			lda  #<p8b_jdlocal.p8v_buffer
.53ed	20 8c 28		jsr  string.compare
.53f0	c9 00			cmp  #0
.53f2	d0 04			bne  label_asm_496_afterif
.53f4	ad 5c 65		lda  p8v_current
.53f7	60			rts
.53f8			label_asm_496_afterif
.53f8	ac 5c 65		ldy  p8v_current
.53fb	b9 d0 63		lda  p8b_jdlocal.p8v_localvars_next,y
.53fe	8d 5c 65		sta  p8v_current
.5401	80 b6			bra  p8l_label_123_whileloop
.5403			p8l_label_124_afterwhile
.5403	a9 00			lda  #0
.5405	60			rts
>655c			p8v_current	.byte  ?
>655d			p8v_index	.byte  ?
>655e			p8v_name	.word  ?
.5406			p8s_get_value
.5406	8d 60 65		sta  p8v_index
.5409	0a			asl  a
.540a	a8			tay
.540b	b9 50 64		lda  p8b_jdlocal.p8v_localvars_value,y
.540e	be 51 64		ldx  p8b_jdlocal.p8v_localvars_value+1,y
.5411	86 7b			stx  P8ZP_SCRATCH_REG
.5413	a4 7b			ldy  P8ZP_SCRATCH_REG
.5415	60			rts
>6560			p8v_index	.byte  ?
.5416			p8s_set_value
.5416	ad 61 65		lda  p8v_index
.5419	0a			asl  a
.541a	a8			tay
.541b	ad 62 65		lda  p8v_value
.541e	99 50 64		sta  p8b_jdlocal.p8v_localvars_value,y
.5421	ad 63 65		lda  p8v_value+1
.5424	99 51 64		sta  p8b_jdlocal.p8v_localvars_value+1,y
.5427	60			rts
>6561			p8v_index	.byte  ?
>6562			p8v_value	.word  ?
.5428			prog8_init_vars
.5428	60			rts
.5429			p8b_labels
>6564			p8v_cn	.byte  ?
>6565			p8v_label_name	.fill  128
>65e5			p8v_label_next	.fill  64
>6625			p8v_label_value	.fill  128
>66a5			p8v_r	.word  ?
.5429			p8v_buffer
>5429	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>542d	00 00 00 00 00 00 00 00 00 00 00 00
>5439	00 00			.byte  $00, $00
.543b			p8s_insert
.543b	ad a9 66		lda  p8v_name
.543e	85 02			sta  cx16.r0
.5440	ad aa 66		lda  p8v_name+1
.5443	85 03			sta  cx16.r0+1
.5445	20 ea 28		jsr  string.hash
.5448	4a			lsr  a
.5449	4a			lsr  a
.544a	8d a8 66		sta  p8v_index
.544d	ad a8 66		lda  p8v_index
.5450	d0 05			bne  label_asm_497_afterif
.5452	a9 01			lda  #1
.5454	8d a8 66		sta  p8v_index
.5457			label_asm_497_afterif
.5457	ad a8 66		lda  p8v_index
.545a	0a			asl  a
.545b	a8			tay
.545c	b9 65 65		lda  p8b_labels.p8v_label_name,y
.545f	be 66 65		ldx  p8b_labels.p8v_label_name+1,y
.5462	86 7b			stx  P8ZP_SCRATCH_REG
.5464	a4 7b			ldy  P8ZP_SCRATCH_REG
.5466	05 7b			ora  P8ZP_SCRATCH_REG
.5468	d0 3b			bne  label_asm_499_else
.546a	ac aa 66		ldy  p8v_name+1
.546d	ad a9 66		lda  p8v_name
.5470	20 0e 47		jsr  p8b_jdstr.p8s_add
.5473	8d a5 66		sta  p8b_labels.p8v_r
.5476	8c a6 66		sty  p8b_labels.p8v_r+1
.5479	ad a8 66		lda  p8v_index
.547c	0a			asl  a
.547d	a8			tay
.547e	ad a5 66		lda  p8b_labels.p8v_r
.5481	99 65 65		sta  p8b_labels.p8v_label_name,y
.5484	ad a6 66		lda  p8b_labels.p8v_r+1
.5487	99 66 65		sta  p8b_labels.p8v_label_name+1,y
.548a	ad a8 66		lda  p8v_index
.548d	0a			asl  a
.548e	a8			tay
.548f	ad ab 66		lda  p8v_value
.5492	99 25 66		sta  p8b_labels.p8v_label_value,y
.5495	ad ac 66		lda  p8v_value+1
.5498	99 26 66		sta  p8b_labels.p8v_label_value+1,y
.549b	ae a8 66		ldx  p8v_index
.549e	9e e5 65		stz  p8b_labels.p8v_label_next,x
.54a1	ad a8 66		lda  p8v_index
.54a4	60			rts
.54a5			label_asm_499_else
.54a5	ad a8 66		lda  p8v_index
.54a8	8d a7 66		sta  p8v_current
.54ab			p8l_label_125_whileloop
.54ab	ac a7 66		ldy  p8v_current
.54ae	b9 e5 65		lda  p8b_labels.p8v_label_next,y
.54b1	f0 53			beq  p8l_label_126_afterwhile
.54b3	ad a7 66		lda  p8v_current
.54b6	0a			asl  a
.54b7	a8			tay
.54b8	b9 65 65		lda  p8b_labels.p8v_label_name,y
.54bb	be 66 65		ldx  p8b_labels.p8v_label_name+1,y
.54be	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.54c1	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.54c4	a9 29			lda  #<p8b_labels.p8v_buffer
.54c6	a0 54			ldy  #>p8b_labels.p8v_buffer
.54c8	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.54cb	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.54ce	20 8f 47		jsr  p8b_jdstr.p8s_get
.54d1	ad a9 66		lda  p8v_name
.54d4	85 02			sta  cx16.r0
.54d6	ad aa 66		lda  p8v_name+1
.54d9	85 03			sta  cx16.r0+1
.54db	a0 54			ldy  #>p8b_labels.p8v_buffer
.54dd	a9 29			lda  #<p8b_labels.p8v_buffer
.54df	20 8c 28		jsr  string.compare
.54e2	c9 00			cmp  #0
.54e4	d0 15			bne  label_asm_500_afterif
.54e6	ad a7 66		lda  p8v_current
.54e9	0a			asl  a
.54ea	a8			tay
.54eb	ad ab 66		lda  p8v_value
.54ee	99 25 66		sta  p8b_labels.p8v_label_value,y
.54f1	ad ac 66		lda  p8v_value+1
.54f4	99 26 66		sta  p8b_labels.p8v_label_value+1,y
.54f7	ad a7 66		lda  p8v_current
.54fa	60			rts
.54fb			label_asm_500_afterif
.54fb	ac a7 66		ldy  p8v_current
.54fe	b9 e5 65		lda  p8b_labels.p8v_label_next,y
.5501	8d a7 66		sta  p8v_current
.5504	80 a5			bra  p8l_label_125_whileloop
.5506			p8l_label_126_afterwhile
.5506	ad a7 66		lda  p8v_current
.5509	0a			asl  a
.550a	a8			tay
.550b	b9 65 65		lda  p8b_labels.p8v_label_name,y
.550e	be 66 65		ldx  p8b_labels.p8v_label_name+1,y
.5511	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5514	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.5517	a9 29			lda  #<p8b_labels.p8v_buffer
.5519	a0 54			ldy  #>p8b_labels.p8v_buffer
.551b	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.551e	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5521	20 8f 47		jsr  p8b_jdstr.p8s_get
.5524	ad a9 66		lda  p8v_name
.5527	85 02			sta  cx16.r0
.5529	ad aa 66		lda  p8v_name+1
.552c	85 03			sta  cx16.r0+1
.552e	a0 54			ldy  #>p8b_labels.p8v_buffer
.5530	a9 29			lda  #<p8b_labels.p8v_buffer
.5532	20 8c 28		jsr  string.compare
.5535	c9 00			cmp  #0
.5537	d0 15			bne  label_asm_501_afterif
.5539	ad a7 66		lda  p8v_current
.553c	0a			asl  a
.553d	a8			tay
.553e	ad ab 66		lda  p8v_value
.5541	99 25 66		sta  p8b_labels.p8v_label_value,y
.5544	ad ac 66		lda  p8v_value+1
.5547	99 26 66		sta  p8b_labels.p8v_label_value+1,y
.554a	ad a7 66		lda  p8v_current
.554d	60			rts
.554e			label_asm_501_afterif
.554e	ac aa 66		ldy  p8v_name+1
.5551	ad a9 66		lda  p8v_name
.5554	20 0e 47		jsr  p8b_jdstr.p8s_add
.5557	8d a5 66		sta  p8b_labels.p8v_r
.555a	8c a6 66		sty  p8b_labels.p8v_r+1
.555d			p8l_label_127_untilloop
.555d	ee 64 65		inc  p8b_labels.p8v_cn
.5560	ad 64 65		lda  p8b_labels.p8v_cn
.5563	0a			asl  a
.5564	a8			tay
.5565	b9 65 65		lda  p8b_labels.p8v_label_name,y
.5568	be 66 65		ldx  p8b_labels.p8v_label_name+1,y
.556b	86 7b			stx  P8ZP_SCRATCH_REG
.556d	a4 7b			ldy  P8ZP_SCRATCH_REG
.556f	05 7b			ora  P8ZP_SCRATCH_REG
.5571	d0 ea			bne  p8l_label_127_untilloop
.5573	ad 64 65		lda  p8b_labels.p8v_cn
.5576	0a			asl  a
.5577	a8			tay
.5578	ad a5 66		lda  p8b_labels.p8v_r
.557b	99 65 65		sta  p8b_labels.p8v_label_name,y
.557e	ad a6 66		lda  p8b_labels.p8v_r+1
.5581	99 66 65		sta  p8b_labels.p8v_label_name+1,y
.5584	ad 64 65		lda  p8b_labels.p8v_cn
.5587	0a			asl  a
.5588	a8			tay
.5589	ad ab 66		lda  p8v_value
.558c	99 25 66		sta  p8b_labels.p8v_label_value,y
.558f	ad ac 66		lda  p8v_value+1
.5592	99 26 66		sta  p8b_labels.p8v_label_value+1,y
.5595	ae 64 65		ldx  p8b_labels.p8v_cn
.5598	9e e5 65		stz  p8b_labels.p8v_label_next,x
.559b	ac a7 66		ldy  p8v_current
.559e	ad 64 65		lda  p8b_labels.p8v_cn
.55a1	99 e5 65		sta  p8b_labels.p8v_label_next,y
.55a4			label_asm_498_afterif
.55a4	ad 64 65		lda  p8b_labels.p8v_cn
.55a7	60			rts
>66a7			p8v_current	.byte  ?
>66a8			p8v_index	.byte  ?
>66a9			p8v_name	.word  ?
>66ab			p8v_value	.word  ?
.55a8			p8s_get_jmpaddress
.55a8	8d af 66		sta  p8v_name
.55ab	8c b0 66		sty  p8v_name+1
.55ae	85 02			sta  cx16.r0
.55b0	ad b0 66		lda  p8v_name+1
.55b3	85 03			sta  cx16.r0+1
.55b5	20 ea 28		jsr  string.hash
.55b8	4a			lsr  a
.55b9	4a			lsr  a
.55ba	8d ae 66		sta  p8v_index
.55bd	ad ae 66		lda  p8v_index
.55c0	d0 05			bne  label_asm_502_afterif
.55c2	a9 01			lda  #1
.55c4	8d ae 66		sta  p8v_index
.55c7			label_asm_502_afterif
.55c7	ac ae 66		ldy  p8v_index
.55ca	b9 e5 65		lda  p8b_labels.p8v_label_next,y
.55cd	8d ad 66		sta  p8v_current
.55d0	d0 10			bne  label_asm_503_afterif
.55d2	ad ae 66		lda  p8v_index
.55d5	0a			asl  a
.55d6	a8			tay
.55d7	b9 25 66		lda  p8b_labels.p8v_label_value,y
.55da	be 26 66		ldx  p8b_labels.p8v_label_value+1,y
.55dd	86 7b			stx  P8ZP_SCRATCH_REG
.55df	a4 7b			ldy  P8ZP_SCRATCH_REG
.55e1	60			rts
.55e2			label_asm_503_afterif
.55e2			p8l_label_128_whileloop
.55e2	ac ad 66		ldy  p8v_current
.55e5	b9 e5 65		lda  p8b_labels.p8v_label_next,y
.55e8	f0 4e			beq  p8l_label_129_afterwhile
.55ea	ad ad 66		lda  p8v_current
.55ed	0a			asl  a
.55ee	a8			tay
.55ef	b9 65 65		lda  p8b_labels.p8v_label_name,y
.55f2	be 66 65		ldx  p8b_labels.p8v_label_name+1,y
.55f5	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.55f8	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.55fb	a9 29			lda  #<p8b_labels.p8v_buffer
.55fd	a0 54			ldy  #>p8b_labels.p8v_buffer
.55ff	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.5602	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5605	20 8f 47		jsr  p8b_jdstr.p8s_get
.5608	ad af 66		lda  p8v_name
.560b	85 02			sta  cx16.r0
.560d	ad b0 66		lda  p8v_name+1
.5610	85 03			sta  cx16.r0+1
.5612	a0 54			ldy  #>p8b_labels.p8v_buffer
.5614	a9 29			lda  #<p8b_labels.p8v_buffer
.5616	20 8c 28		jsr  string.compare
.5619	c9 00			cmp  #0
.561b	d0 10			bne  label_asm_504_afterif
.561d	ad ad 66		lda  p8v_current
.5620	0a			asl  a
.5621	a8			tay
.5622	b9 25 66		lda  p8b_labels.p8v_label_value,y
.5625	be 26 66		ldx  p8b_labels.p8v_label_value+1,y
.5628	86 7b			stx  P8ZP_SCRATCH_REG
.562a	a4 7b			ldy  P8ZP_SCRATCH_REG
.562c	60			rts
.562d			label_asm_504_afterif
.562d	ac ad 66		ldy  p8v_current
.5630	b9 e5 65		lda  p8b_labels.p8v_label_next,y
.5633	8d ad 66		sta  p8v_current
.5636	80 aa			bra  p8l_label_128_whileloop
.5638			p8l_label_129_afterwhile
.5638	ad ad 66		lda  p8v_current
.563b	0a			asl  a
.563c	a8			tay
.563d	b9 65 65		lda  p8b_labels.p8v_label_name,y
.5640	be 66 65		ldx  p8b_labels.p8v_label_name+1,y
.5643	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5646	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.5649	a9 29			lda  #<p8b_labels.p8v_buffer
.564b	a0 54			ldy  #>p8b_labels.p8v_buffer
.564d	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.5650	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5653	20 8f 47		jsr  p8b_jdstr.p8s_get
.5656	ad af 66		lda  p8v_name
.5659	85 02			sta  cx16.r0
.565b	ad b0 66		lda  p8v_name+1
.565e	85 03			sta  cx16.r0+1
.5660	a0 54			ldy  #>p8b_labels.p8v_buffer
.5662	a9 29			lda  #<p8b_labels.p8v_buffer
.5664	20 8c 28		jsr  string.compare
.5667	c9 00			cmp  #0
.5669	d0 10			bne  label_asm_505_afterif
.566b	ad ad 66		lda  p8v_current
.566e	0a			asl  a
.566f	a8			tay
.5670	b9 25 66		lda  p8b_labels.p8v_label_value,y
.5673	be 26 66		ldx  p8b_labels.p8v_label_value+1,y
.5676	86 7b			stx  P8ZP_SCRATCH_REG
.5678	a4 7b			ldy  P8ZP_SCRATCH_REG
.567a	60			rts
.567b			label_asm_505_afterif
.567b	60			rts
>66ad			p8v_current	.byte  ?
>66ae			p8v_index	.byte  ?
>66af			p8v_name	.word  ?
.567c			p8s_set_value
.567c	ad b1 66		lda  p8v_index
.567f	0a			asl  a
.5680	a8			tay
.5681	ad b2 66		lda  p8v_value
.5684	99 25 66		sta  p8b_labels.p8v_label_value,y
.5687	ad b3 66		lda  p8v_value+1
.568a	99 26 66		sta  p8b_labels.p8v_label_value+1,y
.568d	60			rts
>66b1			p8v_index	.byte  ?
>66b2			p8v_value	.word  ?
.568e			prog8_init_vars
.568e	60			rts
.568f			p8b_jdfunc
>66b4			p8v_cn	.byte  ?
>66b5			p8v_func_name	.fill  128
>6735			p8v_func_next	.fill  64
>6775			p8v_func_stack	.fill  64
>67b5			p8v_func_value	.fill  128
>6835			p8v_r	.word  ?
.568f			p8v_buffer
>568f	00 00 00 00		.byte  $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
>5693	00 00 00 00 00 00 00 00 00 00 00 00
>569f	00 00			.byte  $00, $00
.56a1			p8s_insert
.56a1	ad 39 68		lda  p8v_name
.56a4	85 02			sta  cx16.r0
.56a6	ad 3a 68		lda  p8v_name+1
.56a9	85 03			sta  cx16.r0+1
.56ab	20 ea 28		jsr  string.hash
.56ae	4a			lsr  a
.56af	4a			lsr  a
.56b0	8d 38 68		sta  p8v_index
.56b3	ad 38 68		lda  p8v_index
.56b6	d0 05			bne  label_asm_506_afterif
.56b8	a9 01			lda  #1
.56ba	8d 38 68		sta  p8v_index
.56bd			label_asm_506_afterif
.56bd	ad 38 68		lda  p8v_index
.56c0	0a			asl  a
.56c1	a8			tay
.56c2	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.56c5	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.56c8	86 7b			stx  P8ZP_SCRATCH_REG
.56ca	a4 7b			ldy  P8ZP_SCRATCH_REG
.56cc	05 7b			ora  P8ZP_SCRATCH_REG
.56ce	d0 41			bne  label_asm_508_else
.56d0	ac 3a 68		ldy  p8v_name+1
.56d3	ad 39 68		lda  p8v_name
.56d6	20 0e 47		jsr  p8b_jdstr.p8s_add
.56d9	8d 35 68		sta  p8b_jdfunc.p8v_r
.56dc	8c 36 68		sty  p8b_jdfunc.p8v_r+1
.56df	ad 38 68		lda  p8v_index
.56e2	0a			asl  a
.56e3	a8			tay
.56e4	ad 35 68		lda  p8b_jdfunc.p8v_r
.56e7	99 b5 66		sta  p8b_jdfunc.p8v_func_name,y
.56ea	ad 36 68		lda  p8b_jdfunc.p8v_r+1
.56ed	99 b6 66		sta  p8b_jdfunc.p8v_func_name+1,y
.56f0	ad 38 68		lda  p8v_index
.56f3	0a			asl  a
.56f4	a8			tay
.56f5	ad 3b 68		lda  p8v_value
.56f8	99 b5 67		sta  p8b_jdfunc.p8v_func_value,y
.56fb	ad 3c 68		lda  p8v_value+1
.56fe	99 b6 67		sta  p8b_jdfunc.p8v_func_value+1,y
.5701	ae 38 68		ldx  p8v_index
.5704	9e 35 67		stz  p8b_jdfunc.p8v_func_next,x
.5707	ae 38 68		ldx  p8v_index
.570a	9e 75 67		stz  p8b_jdfunc.p8v_func_stack,x
.570d	ad 38 68		lda  p8v_index
.5710	60			rts
.5711			label_asm_508_else
.5711	ad 38 68		lda  p8v_index
.5714	8d 37 68		sta  p8v_current
.5717			p8l_label_130_whileloop
.5717	ac 37 68		ldy  p8v_current
.571a	b9 35 67		lda  p8b_jdfunc.p8v_func_next,y
.571d	f0 53			beq  p8l_label_131_afterwhile
.571f	ad 37 68		lda  p8v_current
.5722	0a			asl  a
.5723	a8			tay
.5724	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.5727	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.572a	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.572d	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.5730	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.5732	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.5734	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.5737	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.573a	20 8f 47		jsr  p8b_jdstr.p8s_get
.573d	ad 39 68		lda  p8v_name
.5740	85 02			sta  cx16.r0
.5742	ad 3a 68		lda  p8v_name+1
.5745	85 03			sta  cx16.r0+1
.5747	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.5749	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.574b	20 8c 28		jsr  string.compare
.574e	c9 00			cmp  #0
.5750	d0 15			bne  label_asm_509_afterif
.5752	ad 37 68		lda  p8v_current
.5755	0a			asl  a
.5756	a8			tay
.5757	ad 3b 68		lda  p8v_value
.575a	99 b5 67		sta  p8b_jdfunc.p8v_func_value,y
.575d	ad 3c 68		lda  p8v_value+1
.5760	99 b6 67		sta  p8b_jdfunc.p8v_func_value+1,y
.5763	ad 37 68		lda  p8v_current
.5766	60			rts
.5767			label_asm_509_afterif
.5767	ac 37 68		ldy  p8v_current
.576a	b9 35 67		lda  p8b_jdfunc.p8v_func_next,y
.576d	8d 37 68		sta  p8v_current
.5770	80 a5			bra  p8l_label_130_whileloop
.5772			p8l_label_131_afterwhile
.5772	ad 37 68		lda  p8v_current
.5775	0a			asl  a
.5776	a8			tay
.5777	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.577a	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.577d	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5780	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.5783	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.5785	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.5787	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.578a	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.578d	20 8f 47		jsr  p8b_jdstr.p8s_get
.5790	ad 39 68		lda  p8v_name
.5793	85 02			sta  cx16.r0
.5795	ad 3a 68		lda  p8v_name+1
.5798	85 03			sta  cx16.r0+1
.579a	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.579c	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.579e	20 8c 28		jsr  string.compare
.57a1	c9 00			cmp  #0
.57a3	d0 15			bne  label_asm_510_afterif
.57a5	ad 37 68		lda  p8v_current
.57a8	0a			asl  a
.57a9	a8			tay
.57aa	ad 3b 68		lda  p8v_value
.57ad	99 b5 67		sta  p8b_jdfunc.p8v_func_value,y
.57b0	ad 3c 68		lda  p8v_value+1
.57b3	99 b6 67		sta  p8b_jdfunc.p8v_func_value+1,y
.57b6	ad 37 68		lda  p8v_current
.57b9	60			rts
.57ba			label_asm_510_afterif
.57ba	ac 3a 68		ldy  p8v_name+1
.57bd	ad 39 68		lda  p8v_name
.57c0	20 0e 47		jsr  p8b_jdstr.p8s_add
.57c3	8d 35 68		sta  p8b_jdfunc.p8v_r
.57c6	8c 36 68		sty  p8b_jdfunc.p8v_r+1
.57c9			p8l_label_132_untilloop
.57c9	ee b4 66		inc  p8b_jdfunc.p8v_cn
.57cc	ad b4 66		lda  p8b_jdfunc.p8v_cn
.57cf	0a			asl  a
.57d0	a8			tay
.57d1	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.57d4	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.57d7	86 7b			stx  P8ZP_SCRATCH_REG
.57d9	a4 7b			ldy  P8ZP_SCRATCH_REG
.57db	05 7b			ora  P8ZP_SCRATCH_REG
.57dd	d0 ea			bne  p8l_label_132_untilloop
.57df	ad b4 66		lda  p8b_jdfunc.p8v_cn
.57e2	0a			asl  a
.57e3	a8			tay
.57e4	ad 35 68		lda  p8b_jdfunc.p8v_r
.57e7	99 b5 66		sta  p8b_jdfunc.p8v_func_name,y
.57ea	ad 36 68		lda  p8b_jdfunc.p8v_r+1
.57ed	99 b6 66		sta  p8b_jdfunc.p8v_func_name+1,y
.57f0	ad b4 66		lda  p8b_jdfunc.p8v_cn
.57f3	0a			asl  a
.57f4	a8			tay
.57f5	ad 3b 68		lda  p8v_value
.57f8	99 b5 67		sta  p8b_jdfunc.p8v_func_value,y
.57fb	ad 3c 68		lda  p8v_value+1
.57fe	99 b6 67		sta  p8b_jdfunc.p8v_func_value+1,y
.5801	ae b4 66		ldx  p8b_jdfunc.p8v_cn
.5804	9e 35 67		stz  p8b_jdfunc.p8v_func_next,x
.5807	ae b4 66		ldx  p8b_jdfunc.p8v_cn
.580a	9e 75 67		stz  p8b_jdfunc.p8v_func_stack,x
.580d	ac 37 68		ldy  p8v_current
.5810	ad b4 66		lda  p8b_jdfunc.p8v_cn
.5813	99 35 67		sta  p8b_jdfunc.p8v_func_next,y
.5816			label_asm_507_afterif
.5816	ad b4 66		lda  p8b_jdfunc.p8v_cn
.5819	60			rts
>6837			p8v_current	.byte  ?
>6838			p8v_index	.byte  ?
>6839			p8v_name	.word  ?
>683b			p8v_value	.word  ?
.581a			p8s_get_FuncNoByName
.581a	8d 3f 68		sta  p8v_name
.581d	8c 40 68		sty  p8v_name+1
.5820	85 02			sta  cx16.r0
.5822	ad 40 68		lda  p8v_name+1
.5825	85 03			sta  cx16.r0+1
.5827	20 ea 28		jsr  string.hash
.582a	4a			lsr  a
.582b	4a			lsr  a
.582c	8d 3e 68		sta  p8v_index
.582f	ad 3e 68		lda  p8v_index
.5832	d0 05			bne  label_asm_511_afterif
.5834	a9 01			lda  #1
.5836	8d 3e 68		sta  p8v_index
.5839			label_asm_511_afterif
.5839	ad 3e 68		lda  p8v_index
.583c	f0 02			beq  +
.583e	a9 01			lda  #1
.5840	49 01		+                           eor  #1
.5842	f0 13			beq  label_asm_512_shortcut
.5844	ad 3e 68		lda  p8v_index
.5847	0a			asl  a
.5848	a8			tay
.5849	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.584c	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.584f	86 7b			stx  P8ZP_SCRATCH_REG
.5851	a4 7b			ldy  P8ZP_SCRATCH_REG
.5853	84 7a			sty  P8ZP_SCRATCH_B1
.5855	05 7a			ora  P8ZP_SCRATCH_B1
.5857			label_asm_512_shortcut
.5857	f0 04			beq  label_asm_513_afterif
.5859	ad 3e 68		lda  p8v_index
.585c	60			rts
.585d			label_asm_513_afterif
.585d	ad 3e 68		lda  p8v_index
.5860	8d 3d 68		sta  p8v_current
.5863			p8l_label_135_whileloop
.5863	ac 3d 68		ldy  p8v_current
.5866	b9 35 67		lda  p8b_jdfunc.p8v_func_next,y
.5869	f0 42			beq  p8l_label_136_afterwhile
.586b	ad 3d 68		lda  p8v_current
.586e	0a			asl  a
.586f	a8			tay
.5870	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.5873	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.5876	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.5879	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.587c	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.587e	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.5880	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.5883	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.5886	20 8f 47		jsr  p8b_jdstr.p8s_get
.5889	ad 3f 68		lda  p8v_name
.588c	85 02			sta  cx16.r0
.588e	ad 40 68		lda  p8v_name+1
.5891	85 03			sta  cx16.r0+1
.5893	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.5895	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.5897	20 8c 28		jsr  string.compare
.589a	c9 00			cmp  #0
.589c	d0 04			bne  label_asm_514_afterif
.589e	ad 3d 68		lda  p8v_current
.58a1	60			rts
.58a2			label_asm_514_afterif
.58a2	ac 3d 68		ldy  p8v_current
.58a5	b9 35 67		lda  p8b_jdfunc.p8v_func_next,y
.58a8	8d 3d 68		sta  p8v_current
.58ab	80 b6			bra  p8l_label_135_whileloop
.58ad			p8l_label_136_afterwhile
.58ad	ad 3d 68		lda  p8v_current
.58b0	0a			asl  a
.58b1	a8			tay
.58b2	b9 b5 66		lda  p8b_jdfunc.p8v_func_name,y
.58b5	be b6 66		ldx  p8b_jdfunc.p8v_func_name+1,y
.58b8	8d 7c 5d		sta  p8b_jdstr.p8s_get.p8v_prt
.58bb	8e 7d 5d		stx  p8b_jdstr.p8s_get.p8v_prt+1
.58be	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.58c0	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.58c2	8d 78 5d		sta  p8b_jdstr.p8s_get.p8v_buf
.58c5	8c 79 5d		sty  p8b_jdstr.p8s_get.p8v_buf+1
.58c8	20 8f 47		jsr  p8b_jdstr.p8s_get
.58cb	ad 3f 68		lda  p8v_name
.58ce	85 02			sta  cx16.r0
.58d0	ad 40 68		lda  p8v_name+1
.58d3	85 03			sta  cx16.r0+1
.58d5	a0 56			ldy  #>p8b_jdfunc.p8v_buffer
.58d7	a9 8f			lda  #<p8b_jdfunc.p8v_buffer
.58d9	20 8c 28		jsr  string.compare
.58dc	c9 00			cmp  #0
.58de	d0 04			bne  label_asm_515_afterif
.58e0	ad 3d 68		lda  p8v_current
.58e3	60			rts
.58e4			label_asm_515_afterif
.58e4	a9 00			lda  #0
.58e6	60			rts
>683d			p8v_current	.byte  ?
>683e			p8v_index	.byte  ?
>683f			p8v_name	.word  ?
.58e7			p8s_get_value
.58e7	8d 41 68		sta  p8v_index
.58ea	0a			asl  a
.58eb	a8			tay
.58ec	b9 b5 67		lda  p8b_jdfunc.p8v_func_value,y
.58ef	be b6 67		ldx  p8b_jdfunc.p8v_func_value+1,y
.58f2	86 7b			stx  P8ZP_SCRATCH_REG
.58f4	a4 7b			ldy  P8ZP_SCRATCH_REG
.58f6	60			rts
>6841			p8v_index	.byte  ?
.58f7			p8s_get_stack
.58f7	8d 42 68		sta  p8v_index
.58fa	ac 42 68		ldy  p8v_index
.58fd	b9 75 67		lda  p8b_jdfunc.p8v_func_stack,y
.5900	60			rts
>6842			p8v_index	.byte  ?
.5901			p8s_set_stack
.5901	8d 43 68		sta  p8v_index
.5904	8c 44 68		sty  p8v_value
.5907	ac 43 68		ldy  p8v_index
.590a	ad 44 68		lda  p8v_value
.590d	99 75 67		sta  p8b_jdfunc.p8v_func_stack,y
.5910	60			rts
>6843			p8v_index	.byte  ?
>6844			p8v_value	.byte  ?
.5911			prog8_init_vars
.5911	60			rts
.5912			p8b_ifstack
>6845			p8v_eifeadd	.fill  32
>6865			p8v_elseadd	.fill  32
>6885			p8v_isc	.byte  ?
>6886			p8v_thenadd	.fill  32
>68a6			p8v_val	.word  ?
.5912			p8s_push
.5912	ee 85 68		inc  p8b_ifstack.p8v_isc
.5915	ad 85 68		lda  p8b_ifstack.p8v_isc
.5918	0a			asl  a
.5919	a8			tay
.591a	ad a8 68		lda  p8v_elseaddress
.591d	99 65 68		sta  p8b_ifstack.p8v_elseadd,y
.5920	ad a9 68		lda  p8v_elseaddress+1
.5923	99 66 68		sta  p8b_ifstack.p8v_elseadd+1,y
.5926	ad 85 68		lda  p8b_ifstack.p8v_isc
.5929	0a			asl  a
.592a	a8			tay
.592b	ad ac 68		lda  p8v_thenaddress
.592e	99 86 68		sta  p8b_ifstack.p8v_thenadd,y
.5931	ad ad 68		lda  p8v_thenaddress+1
.5934	99 87 68		sta  p8b_ifstack.p8v_thenadd+1,y
.5937	ad 85 68		lda  p8b_ifstack.p8v_isc
.593a	0a			asl  a
.593b	a8			tay
.593c	ad aa 68		lda  p8v_endifaddress
.593f	99 45 68		sta  p8b_ifstack.p8v_eifeadd,y
.5942	ad ab 68		lda  p8v_endifaddress+1
.5945	99 46 68		sta  p8b_ifstack.p8v_eifeadd+1,y
.5948	60			rts
>68a8			p8v_elseaddress	.word  ?
>68aa			p8v_endifaddress	.word  ?
>68ac			p8v_thenaddress	.word  ?
.5949			p8s_pops
.5949	ad 85 68		lda  p8b_ifstack.p8v_isc
.594c	0a			asl  a
.594d	a8			tay
.594e	b9 65 68		lda  p8b_ifstack.p8v_elseadd,y
.5951	be 66 68		ldx  p8b_ifstack.p8v_elseadd+1,y
.5954	8d a6 68		sta  p8b_ifstack.p8v_val
.5957	8e a7 68		stx  p8b_ifstack.p8v_val+1
.595a	ac a7 68		ldy  p8b_ifstack.p8v_val+1
.595d	ad a6 68		lda  p8b_ifstack.p8v_val
.5960	60			rts
.5961			p8s_popm
.5961	ad 85 68		lda  p8b_ifstack.p8v_isc
.5964	0a			asl  a
.5965	a8			tay
.5966	b9 86 68		lda  p8b_ifstack.p8v_thenadd,y
.5969	be 87 68		ldx  p8b_ifstack.p8v_thenadd+1,y
.596c	8d a6 68		sta  p8b_ifstack.p8v_val
.596f	8e a7 68		stx  p8b_ifstack.p8v_val+1
.5972	ac a7 68		ldy  p8b_ifstack.p8v_val+1
.5975	ad a6 68		lda  p8b_ifstack.p8v_val
.5978	60			rts
.5979			p8s_pope
.5979	ad 85 68		lda  p8b_ifstack.p8v_isc
.597c	0a			asl  a
.597d	a8			tay
.597e	b9 45 68		lda  p8b_ifstack.p8v_eifeadd,y
.5981	be 46 68		ldx  p8b_ifstack.p8v_eifeadd+1,y
.5984	8d a6 68		sta  p8b_ifstack.p8v_val
.5987	8e a7 68		stx  p8b_ifstack.p8v_val+1
.598a	ce 85 68		dec  p8b_ifstack.p8v_isc
.598d	ac a7 68		ldy  p8b_ifstack.p8v_val+1
.5990	ad a6 68		lda  p8b_ifstack.p8v_val
.5993	60			rts
.5994			prog8_init_vars
.5994	60			rts
.5995			p8b_funcstack
>68ae			p8v_fsc	.byte  ?
>68af			p8v_retaddr	.fill  64
>68ef			p8v_val	.word  ?
.5995			p8s_push
.5995	8d f1 68		sta  p8v_retaddr1
.5998	8c f2 68		sty  p8v_retaddr1+1
.599b	ee ae 68		inc  p8b_funcstack.p8v_fsc
.599e	ad ae 68		lda  p8b_funcstack.p8v_fsc
.59a1	0a			asl  a
.59a2	a8			tay
.59a3	ad f1 68		lda  p8v_retaddr1
.59a6	99 af 68		sta  p8b_funcstack.p8v_retaddr,y
.59a9	ad f2 68		lda  p8v_retaddr1+1
.59ac	99 b0 68		sta  p8b_funcstack.p8v_retaddr+1,y
.59af	60			rts
>68f1			p8v_retaddr1	.word  ?
.59b0			p8s_pop
.59b0	ad ae 68		lda  p8b_funcstack.p8v_fsc
.59b3	0a			asl  a
.59b4	a8			tay
.59b5	b9 af 68		lda  p8b_funcstack.p8v_retaddr,y
.59b8	be b0 68		ldx  p8b_funcstack.p8v_retaddr+1,y
.59bb	8d ef 68		sta  p8b_funcstack.p8v_val
.59be	8e f0 68		stx  p8b_funcstack.p8v_val+1
.59c1	ce ae 68		dec  p8b_funcstack.p8v_fsc
.59c4	ac f0 68		ldy  p8b_funcstack.p8v_val+1
.59c7	ad ef 68		lda  p8b_funcstack.p8v_val
.59ca	60			rts
.59cb			prog8_init_vars
.59cb	60			rts
.59cc			p8b_forstack
>68f3			p8v_for_from	.fill  32
>6913			p8v_for_step	.fill  32
>6933			p8v_for_to	.fill  32
>6953			p8v_for_var_num	.fill  16
>6963			p8v_for_var_type	.fill  16
>6973			p8v_osc	.byte  ?
>6974			p8v_start_address_code	.fill  32
>6994			p8v_val	.word  ?
>6996			p8v_valb	.byte  ?
.59cc			p8s_push
.59cc	ee 73 69		inc  p8b_forstack.p8v_osc
.59cf	ad 73 69		lda  p8b_forstack.p8v_osc
.59d2	0a			asl  a
.59d3	a8			tay
.59d4	ad 9d 69		lda  p8v_start_address_code1
.59d7	99 74 69		sta  p8b_forstack.p8v_start_address_code,y
.59da	ad 9e 69		lda  p8v_start_address_code1+1
.59dd	99 75 69		sta  p8b_forstack.p8v_start_address_code+1,y
.59e0	ac 73 69		ldy  p8b_forstack.p8v_osc
.59e3	ad a0 69		lda  p8v_var_type
.59e6	99 63 69		sta  p8b_forstack.p8v_for_var_type,y
.59e9	ac 73 69		ldy  p8b_forstack.p8v_osc
.59ec	ad 9f 69		lda  p8v_var_num
.59ef	99 53 69		sta  p8b_forstack.p8v_for_var_num,y
.59f2	ad 73 69		lda  p8b_forstack.p8v_osc
.59f5	0a			asl  a
.59f6	a8			tay
.59f7	ad 97 69		lda  p8v_for_from_val
.59fa	99 f3 68		sta  p8b_forstack.p8v_for_from,y
.59fd	ad 98 69		lda  p8v_for_from_val+1
.5a00	99 f4 68		sta  p8b_forstack.p8v_for_from+1,y
.5a03	ad 73 69		lda  p8b_forstack.p8v_osc
.5a06	0a			asl  a
.5a07	a8			tay
.5a08	ad 9b 69		lda  p8v_for_to_val
.5a0b	99 33 69		sta  p8b_forstack.p8v_for_to,y
.5a0e	ad 9c 69		lda  p8v_for_to_val+1
.5a11	99 34 69		sta  p8b_forstack.p8v_for_to+1,y
.5a14	ad 73 69		lda  p8b_forstack.p8v_osc
.5a17	0a			asl  a
.5a18	a8			tay
.5a19	ad 99 69		lda  p8v_for_step_val
.5a1c	99 13 69		sta  p8b_forstack.p8v_for_step,y
.5a1f	ad 9a 69		lda  p8v_for_step_val+1
.5a22	99 14 69		sta  p8b_forstack.p8v_for_step+1,y
.5a25	60			rts
>6997			p8v_for_from_val	.word  ?
>6999			p8v_for_step_val	.word  ?
>699b			p8v_for_to_val	.word  ?
>699d			p8v_start_address_code1	.word  ?
>699f			p8v_var_num	.byte  ?
>69a0			p8v_var_type	.byte  ?
.5a26			p8s_pop1
.5a26	ad 73 69		lda  p8b_forstack.p8v_osc
.5a29	0a			asl  a
.5a2a	a8			tay
.5a2b	b9 74 69		lda  p8b_forstack.p8v_start_address_code,y
.5a2e	be 75 69		ldx  p8b_forstack.p8v_start_address_code+1,y
.5a31	8d 94 69		sta  p8b_forstack.p8v_val
.5a34	8e 95 69		stx  p8b_forstack.p8v_val+1
.5a37	ac 95 69		ldy  p8b_forstack.p8v_val+1
.5a3a	ad 94 69		lda  p8b_forstack.p8v_val
.5a3d	60			rts
.5a3e			p8s_pop3
.5a3e	ac 73 69		ldy  p8b_forstack.p8v_osc
.5a41	b9 53 69		lda  p8b_forstack.p8v_for_var_num,y
.5a44	8d 96 69		sta  p8b_forstack.p8v_valb
.5a47	60			rts
.5a48			p8s_pop5
.5a48	ad 73 69		lda  p8b_forstack.p8v_osc
.5a4b	0a			asl  a
.5a4c	a8			tay
.5a4d	b9 33 69		lda  p8b_forstack.p8v_for_to,y
.5a50	be 34 69		ldx  p8b_forstack.p8v_for_to+1,y
.5a53	8d 94 69		sta  p8b_forstack.p8v_val
.5a56	8e 95 69		stx  p8b_forstack.p8v_val+1
.5a59	ac 95 69		ldy  p8b_forstack.p8v_val+1
.5a5c	ad 94 69		lda  p8b_forstack.p8v_val
.5a5f	60			rts
.5a60			p8s_pop6
.5a60	ad 73 69		lda  p8b_forstack.p8v_osc
.5a63	0a			asl  a
.5a64	a8			tay
.5a65	b9 13 69		lda  p8b_forstack.p8v_for_step,y
.5a68	be 14 69		ldx  p8b_forstack.p8v_for_step+1,y
.5a6b	8d 94 69		sta  p8b_forstack.p8v_val
.5a6e	8e 95 69		stx  p8b_forstack.p8v_val+1
.5a71	ac 95 69		ldy  p8b_forstack.p8v_val+1
.5a74	ad 94 69		lda  p8b_forstack.p8v_val
.5a77	60			rts
.5a78			p8s_pope
.5a78	ce 73 69		dec  p8b_forstack.p8v_osc
.5a7b	a9 00			lda  #0
.5a7d	a8			tay
.5a7e	60			rts
.5a7f			prog8_init_vars
.5a7f	60			rts
.5a80			p8b_varstack
=47			p8v_vsc 	= 47 	; zp UBYTE
=48			p8v_val 	= 48 	; zp UWORD
>69a1			p8v_svar	.fill  16
.5a80			p8s_push
=50			p8v_svar1 	= 50 	; zp UWORD
.5a80	85 32			sta  p8v_svar1
.5a82	84 33			sty  p8v_svar1+1
.5a84	e6 2f			inc  p8b_varstack.p8v_vsc
.5a86	a5 2f			lda  p8b_varstack.p8v_vsc
.5a88	0a			asl  a
.5a89	a8			tay
.5a8a	a5 32			lda  p8v_svar1
.5a8c	99 a1 69		sta  p8b_varstack.p8v_svar,y
.5a8f	a5 33			lda  p8v_svar1+1
.5a91	99 a2 69		sta  p8b_varstack.p8v_svar+1,y
.5a94	60			rts
.5a95			p8s_pop
.5a95	a5 2f			lda  p8b_varstack.p8v_vsc
.5a97	0a			asl  a
.5a98	a8			tay
.5a99	b9 a1 69		lda  p8b_varstack.p8v_svar,y
.5a9c	be a2 69		ldx  p8b_varstack.p8v_svar+1,y
.5a9f	85 30			sta  p8b_varstack.p8v_val
.5aa1	86 31			stx  p8b_varstack.p8v_val+1
.5aa3	c6 2f			dec  p8b_varstack.p8v_vsc
.5aa5	a4 31			ldy  p8b_varstack.p8v_val+1
.5aa7	a5 30			lda  p8b_varstack.p8v_val
.5aa9	60			rts
.5aaa			prog8_init_vars
.5aaa	64 30			stz  p8b_varstack.p8v_val
.5aac	64 31			stz  p8b_varstack.p8v_val+1
.5aae	64 2f			stz  p8b_varstack.p8v_vsc
.5ab0	60			rts
.5ab1			p8b_callstack_b
>69b1			p8v_cbsc	.byte  ?
>69b2			p8v_cbvar	.fill  256
>6ab2			p8v_val	.byte  ?
.5ab1			p8s_push
.5ab1	8d b3 6a		sta  p8v_cbvar1
.5ab4	ee b1 69		inc  p8b_callstack_b.p8v_cbsc
.5ab7	ac b1 69		ldy  p8b_callstack_b.p8v_cbsc
.5aba	ad b3 6a		lda  p8v_cbvar1
.5abd	99 b2 69		sta  p8b_callstack_b.p8v_cbvar,y
.5ac0	60			rts
>6ab3			p8v_cbvar1	.byte  ?
.5ac1			p8s_pop
.5ac1	ac b1 69		ldy  p8b_callstack_b.p8v_cbsc
.5ac4	b9 b2 69		lda  p8b_callstack_b.p8v_cbvar,y
.5ac7	8d b2 6a		sta  p8b_callstack_b.p8v_val
.5aca	ce b1 69		dec  p8b_callstack_b.p8v_cbsc
.5acd	ad b2 6a		lda  p8b_callstack_b.p8v_val
.5ad0	60			rts
.5ad1			prog8_init_vars
.5ad1	60			rts
.5ad2			p8b_callstack_w
>6ab4			p8v_cwsc	.byte  ?
>6ab5			p8v_cwvar	.fill  256
>6bb5			p8v_val	.word  ?
.5ad2			p8s_push
.5ad2	8d b7 6b		sta  p8v_cwvar1
.5ad5	8c b8 6b		sty  p8v_cwvar1+1
.5ad8	ee b4 6a		inc  p8b_callstack_w.p8v_cwsc
.5adb	ad b4 6a		lda  p8b_callstack_w.p8v_cwsc
.5ade	0a			asl  a
.5adf	a8			tay
.5ae0	ad b7 6b		lda  p8v_cwvar1
.5ae3	99 b5 6a		sta  p8b_callstack_w.p8v_cwvar,y
.5ae6	ad b8 6b		lda  p8v_cwvar1+1
.5ae9	99 b6 6a		sta  p8b_callstack_w.p8v_cwvar+1,y
.5aec	60			rts
>6bb7			p8v_cwvar1	.word  ?
.5aed			p8s_pop
.5aed	ad b4 6a		lda  p8b_callstack_w.p8v_cwsc
.5af0	0a			asl  a
.5af1	a8			tay
.5af2	b9 b5 6a		lda  p8b_callstack_w.p8v_cwvar,y
.5af5	be b6 6a		ldx  p8b_callstack_w.p8v_cwvar+1,y
.5af8	8d b5 6b		sta  p8b_callstack_w.p8v_val
.5afb	8e b6 6b		stx  p8b_callstack_w.p8v_val+1
.5afe	ce b4 6a		dec  p8b_callstack_w.p8v_cwsc
.5b01	ac b6 6b		ldy  p8b_callstack_w.p8v_val+1
.5b04	ad b5 6b		lda  p8b_callstack_w.p8v_val
.5b07	60			rts
.5b08			prog8_init_vars
.5b08	60			rts
.5b09			math
.5b09			multiply_words
=126			_multiplicand    = P8ZP_SCRATCH_W2   ; 2 bytes
=$5b84			multiplier      = result
.5b09	85 7e		    sta  _multiplicand
.5b0b	84 7f		    sty  _multiplicand+1
.5b0d	a9 00		    lda  #0              ;
.5b0f	8d 86 5b	    sta  result+2        ; 16 bits of zero in A, result+2
.5b12	a0 04		    ldy  #4              ; count for inner loop
.5b14	4e 84 5b	    lsr  result
.5b17			_inner_loop
.5b17	90 0d		    bcc +
.5b19	aa		    tax                 ; retain A
.5b1a	ad 86 5b	    lda  result+2
.5b1d	18		    clc
.5b1e	65 7e		    adc  _multiplicand
.5b20	8d 86 5b	    sta  result+2
.5b23	8a		    txa                 ; recall A
.5b24	65 7f		    adc  _multiplicand+1
.5b26			+
.5b26	6a		    ror  a                ; shift
.5b27	6e 86 5b	    ror  result+2
.5b2a	6e 84 5b	    ror  result
.5b2d	90 0d		    bcc +
.5b2f	aa		    tax                 ; retain A
.5b30	ad 86 5b	    lda  result+2
.5b33	18		    clc
.5b34	65 7e		    adc  _multiplicand
.5b36	8d 86 5b	    sta  result+2
.5b39	8a		    txa                 ; recall A
.5b3a	65 7f		    adc  _multiplicand+1
.5b3c			+
.5b3c	6a		    ror  a                 ; shift
.5b3d	6e 86 5b	    ror  result+2
.5b40	6e 84 5b	    ror  result
.5b43	88		    dey
.5b44	d0 d1		    bne  _inner_loop      ; go back for 1 more shift?
.5b46	a0 04		    ldy  #4              ; count for inner loop
.5b48	4e 85 5b	    lsr  result+1
.5b4b			_inner_loop2
.5b4b	90 0d		    bcc  +
.5b4d	aa		    tax                 ; retain A
.5b4e	ad 86 5b	    lda  result+2
.5b51	18		    clc
.5b52	65 7e		    adc  _multiplicand
.5b54	8d 86 5b	    sta  result+2
.5b57	8a		    txa                 ; recall A
.5b58	65 7f		    adc  _multiplicand+1
.5b5a			+
.5b5a	6a		    ror  a                ; shift
.5b5b	6e 86 5b	    ror  result+2
.5b5e	6e 85 5b	    ror  result+1
.5b61	90 0d		    bcc  +
.5b63	aa		    tax                 ; retain A
.5b64	ad 86 5b	    lda  result+2
.5b67	18		    clc
.5b68	65 7e		    adc  _multiplicand
.5b6a	8d 86 5b	    sta  result+2
.5b6d	8a		    txa                 ; recall A
.5b6e	65 7f		    adc  _multiplicand+1
.5b70			+
.5b70	6a		    ror  a                ; shift
.5b71	6e 86 5b	    ror  result+2
.5b74	6e 85 5b	    ror  result+1
.5b77	88		    dey
.5b78	d0 d1		    bne  _inner_loop2     ; go back for 1 more shift?
.5b7a	8d 87 5b	    sta  result+3        ; ms byte of hi-word of result
.5b7d	ad 84 5b	    lda  result
.5b80	ac 85 5b	    ldy  result+1
.5b83	60		    rts
>5b84	00 00 00 00	result		.byte  0,0,0,0
.5b88			divmod_uw_asm
=124			dividend = P8ZP_SCRATCH_W1
=126			remainder = P8ZP_SCRATCH_W2
=124			result = dividend ;save memory by reusing divident to store the result
.5b88	8d ba 5b			sta  _divisor
.5b8b	8c bb 5b			sty  _divisor+1
.5b8e	a9 00				lda  #0	        	;preset remainder to 0
.5b90	85 7e				sta  remainder
.5b92	85 7f				sta  remainder+1
.5b94	a2 10				ldx  #16	        ;repeat for each bit: ...
.5b96	06 7c		-		asl  dividend		;dividend lb & hb*2, msb -> Carry
.5b98	26 7d				rol  dividend+1
.5b9a	26 7e				rol  remainder		;remainder lb & hb * 2 + msb from carry
.5b9c	26 7f				rol  remainder+1
.5b9e	a5 7e				lda  remainder
.5ba0	38				sec
.5ba1	ed ba 5b			sbc  _divisor		;substract divisor to see if it fits in
.5ba4	a8				tay	       		;lb result -> Y, for we may need it later
.5ba5	a5 7f				lda  remainder+1
.5ba7	ed bb 5b			sbc  _divisor+1
.5baa	90 06				bcc  +			;if carry=0 then divisor didn't fit in yet
.5bac	85 7f				sta  remainder+1	;else save substraction result as new remainder,
.5bae	84 7e				sty  remainder
.5bb0	e6 7c				inc  result		;and INCrement result cause divisor fit in 1 times
.5bb2	ca		+		dex
.5bb3	d0 e1				bne  -
.5bb5	a5 7c				lda  result
.5bb7	a4 7d				ldy  result+1
.5bb9	60				rts
>5bba	00 00		_divisor	.word 0
.5bbc			randword
.5bbc	ee c1 5b			inc x1
.5bbf	18				clc
=$5bc1			x1=*+1
.5bc0	a9 00				lda #$00	;x1
=$5bc3			c1=*+1
.5bc2	49 c2				eor #$c2	;c1
=$5bc5			a1=*+1
.5bc4	49 11				eor #$11	;a1
.5bc6	8d c5 5b			sta a1
=$5bca			b1=*+1
.5bc9	69 37				adc #$37	;b1
.5bcb	8d ca 5b			sta b1
.5bce	4a				lsr a
.5bcf	4d c5 5b			eor a1
.5bd2	6d c3 5b			adc c1
.5bd5	8d c3 5b			sta c1
.5bd8	ac ca 5b			ldy b1
.5bdb	60				rts
=$5bbc			randbyte = randword    ; -- 8 bit pseudo random number generator into A (by just reusing randword)
.5bdc			rndw
.5bdc	4c bc 5b	            jmp  math.randword
.5bdf			rndseed
.5bdf	8d c1 5b	            sta  math.randword.x1
.5be2	8c c3 5b	            sty  math.randword.c1
.5be5	a5 02		            lda  cx16.r0L
.5be7	8d c5 5b	            sta  math.randword.a1
.5bea	a5 03		            lda  cx16.r0H
.5bec	8d ca 5b	            sta  math.randword.b1
.5bef	60		            rts
.5bf0			prog8_lib
>5bf0	00		orig_stackpointer	.byte  0	; stores the Stack pointer register at program start
.5bf1			memset
.5bf1	86 7a				stx  P8ZP_SCRATCH_B1
.5bf3	8c 11 5c			sty  _save_reg
.5bf6	a0 00				ldy  #0
.5bf8	ae 11 5c			ldx  _save_reg
.5bfb	f0 0a				beq  _lastpage
.5bfd	91 7c		_fullpage	sta  (P8ZP_SCRATCH_W1),y
.5bff	c8				iny
.5c00	d0 fb				bne  _fullpage
.5c02	e6 7d				inc  P8ZP_SCRATCH_W1+1          ; next page
.5c04	ca				dex
.5c05	d0 f6				bne  _fullpage
.5c07	a4 7a		_lastpage	ldy  P8ZP_SCRATCH_B1
.5c09	f0 05				beq  +
.5c0b	88		-         	dey
.5c0c	91 7c				sta  (P8ZP_SCRATCH_W1),y
.5c0e	d0 fb				bne  -
.5c10	60		+           	rts
>5c11	00		_save_reg	.byte  0
.5c12			strcpy
.5c12	85 7e				sta  P8ZP_SCRATCH_W2
.5c14	84 7f				sty  P8ZP_SCRATCH_W2+1
.5c16	a0 ff				ldy  #$ff
.5c18	c8		-		iny
.5c19	b1 7e				lda  (P8ZP_SCRATCH_W2),y
.5c1b	91 7c				sta  (P8ZP_SCRATCH_W1),y
.5c1d	d0 f9				bne  -
.5c1f	60				rts
.5c20			strcmp_mem
.5c20	85 7c				sta  P8ZP_SCRATCH_W1
.5c22	84 7d				sty  P8ZP_SCRATCH_W1+1
.5c24	a0 00				ldy  #0
.5c26	b1 7c		_loop		lda  (P8ZP_SCRATCH_W1),y
.5c28	d0 06				bne  +
.5c2a	b1 7e				lda  (P8ZP_SCRATCH_W2),y
.5c2c	d0 19				bne  _return_minusone
.5c2e	f0 16				beq  _return
.5c30	d1 7e		+		cmp  (P8ZP_SCRATCH_W2),y
.5c32	90 13				bcc  _return_minusone
.5c34	d0 0e				bne  _return_one
.5c36	e6 7c				inc  P8ZP_SCRATCH_W1
.5c38	d0 02				bne  +
.5c3a	e6 7d				inc  P8ZP_SCRATCH_W1+1
.5c3c	e6 7e		+		inc  P8ZP_SCRATCH_W2
.5c3e	d0 e6				bne  _loop
.5c40	e6 7f				inc  P8ZP_SCRATCH_W2+1
.5c42	d0 e2				bne  _loop
.5c44			_return_one
.5c44	a9 01				lda  #1
.5c46	60		_return		rts
.5c47			_return_minusone
.5c47	a9 ff				lda  #-1
.5c49	60				rts
.5c4a			containment_bytearray
.5c4a	88				dey
.5c4b	d1 7c		-		cmp  (P8ZP_SCRATCH_W1),y
.5c4d	f0 08				beq  +
.5c4f	88				dey
.5c50	c0 ff				cpy  #255
.5c52	d0 f7				bne  -
.5c54	a9 00				lda  #0
.5c56	60				rts
.5c57	a9 01		+		lda  #1
.5c59	60				rts
=1			PROG8_VARSHIGH_RAMBANK = 1
.5c5a			prog8_bss_section_start
=3935			prog8_bss_section_size = * - prog8_bss_section_start
.6bb9			prog8_program_end

;******  End of listing
